{"version":3,"file":"app.js","sources":["../bower_components/almond/almond.js","../bower_components/lodash/dist/lodash.underscore.js","../bower_components/require-cs/cs.js","../bower_components/zepto/zepto.js","../bower_components/backbone-amd/backbone.js","../bower_components/hammerjs/dist/hammer.js","../bower_components/hammerjs/plugins/jquery.hammer.js","appdata.js","views/transformUtils!cs","views/associate!cs","views/app!cs","models/associate!cs","collections/associates!cs","csapp!cs","app.js"],"names":[],"mappings":"CAAA,WAaA,GAAA,GAAA,EAAA,GACA,SAAA,GASA,QAAA,GAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,GAWA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,MAAA,KACA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,QAGA,IAAA,GAAA,MAAA,EAAA,OAAA,GAIA,GAAA,EAAA,CAWA,IALA,EAAA,EAAA,MAAA,EAAA,EAAA,OAAA,GAEA,EAAA,EAAA,OAAA,EAAA,MAAA,MAGA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAEA,GADA,EAAA,EAAA,GACA,MAAA,EACA,EAAA,OAAA,EAAA,GACA,GAAA,MACA,IAAA,OAAA,EAAA,CACA,GAAA,IAAA,IAAA,OAAA,EAAA,IAAA,OAAA,EAAA,IAOA,KACA,GAAA,IACA,EAAA,OAAA,EAAA,EAAA,GACA,GAAA,GAMA,EAAA,EAAA,KAAA,SACA,KAAA,EAAA,QAAA,QAGA,EAAA,EAAA,UAAA,GAKA,KAAA,GAAA,IAAA,EAAA,CAGA,IAFA,EAAA,EAAA,MAAA,KAEA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,CAGA,GAFA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,KAEA,EAGA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAKA,GAJA,EAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,MAIA,IACA,EAAA,EAAA,IACA,CAEA,EAAA,EACA,EAAA,CACA,OAMA,GAAA,EACA,OAMA,GAAA,GAAA,EAAA,KACA,EAAA,EAAA,GACA,EAAA,IAIA,GAAA,IACA,EAAA,EACA,EAAA,GAGA,IACA,EAAA,OAAA,EAAA,EAAA,GACA,EAAA,EAAA,KAAA,MAIA,MAAA,GAGA,QAAA,GAAA,EAAA,GACA,MAAA,YAIA,MAAA,GAAA,MAAA,EAAA,EAAA,KAAA,UAAA,GAAA,QAAA,EAAA,MAIA,QAAA,GAAA,GACA,MAAA,UAAA,GACA,MAAA,GAAA,EAAA,IAIA,QAAA,GAAA,GACA,MAAA,UAAA,GACA,EAAA,GAAA,GAIA,QAAA,GAAA,GACA,GAAA,EAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,SACA,GAAA,GACA,EAAA,IAAA,EACA,EAAA,MAAA,EAAA,GAGA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GACA,KAAA,IAAA,OAAA,MAAA,EAEA,OAAA,GAAA,GAMA,QAAA,GAAA,GACA,GAAA,GACA,EAAA,EAAA,EAAA,QAAA,KAAA,EAKA,OAJA,GAAA,KACA,EAAA,EAAA,UAAA,EAAA,GACA,EAAA,EAAA,UAAA,EAAA,EAAA,EAAA,UAEA,EAAA,GA8CA,QAAA,GAAA,GACA,MAAA,YACA,MAAA,IAAA,EAAA,QAAA,EAAA,OAAA,QA5NA,GAAA,GAAA,EAAA,EAAA,EACA,KACA,KACA,KACA,KACA,EAAA,OAAA,UAAA,eACA,KAAA,KA8KA,GAAA,SAAA,EAAA,GACA,GAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,EA2BA,OAzBA,GAAA,EAAA,GAEA,IACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,IAIA,EAEA,EADA,GAAA,EAAA,UACA,EAAA,UAAA,EAAA,EAAA,IAEA,EAAA,EAAA,IAGA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,IACA,EAAA,EAAA,MAMA,EAAA,EAAA,EAAA,IAAA,EAAA,EACA,EAAA,EACA,GAAA,EACA,EAAA,IAUA,GACA,QAAA,SAAA,GACA,MAAA,GAAA,IAEA,QAAA,SAAA,GACA,GAAA,GAAA,EAAA,EACA,OAAA,mBAAA,GACA,EAEA,EAAA,OAGA,OAAA,SAAA,GACA,OACA,GAAA,EACA,IAAA,GACA,QAAA,EAAA,GACA,OAAA,EAAA,MAKA,EAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,EAEA,EADA,IAOA,IAHA,EAAA,GAAA,EAGA,kBAAA,GAAA,CAMA,IADA,GAAA,EAAA,QAAA,EAAA,QAAA,UAAA,UAAA,UAAA,EACA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAKA,GAJA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,EAGA,YAAA,EACA,EAAA,GAAA,EAAA,QAAA,OACA,IAAA,YAAA,EAEA,EAAA,GAAA,EAAA,QAAA,GACA,GAAA,MACA,IAAA,WAAA,EAEA,EAAA,EAAA,GAAA,EAAA,OAAA,OACA,IAAA,EAAA,EAAA,IACA,EAAA,EAAA,IACA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,OACA,CAAA,IAAA,EAAA,EAIA,KAAA,IAAA,OAAA,EAAA,YAAA,EAHA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,OACA,EAAA,GAAA,EAAA,GAMA,EAAA,EAAA,MAAA,EAAA,GAAA,GAEA,IAIA,GAAA,EAAA,UAAA,GACA,EAAA,UAAA,EAAA,GACA,EAAA,GAAA,EAAA,QACA,IAAA,GAAA,IAEA,EAAA,GAAA,QAGA,KAGA,EAAA,GAAA,IAIA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,MAAA,gBAAA,GACA,EAAA,GAEA,EAAA,GAAA,GAMA,EAAA,EAAA,EAAA,GAAA,IACA,EAAA,SAEA,EAAA,EACA,EAAA,QAGA,EAAA,EACA,EAAA,EACA,EAAA,MAEA,EAAA,GAKA,EAAA,GAAA,aAIA,kBAAA,KACA,EAAA,EACA,EAAA,GAIA,EACA,EAAA,EAAA,EAAA,EAAA,GAQA,WAAA,WACA,EAAA,EAAA,EAAA,EAAA,IACA,GAGA,IAOA,EAAA,OAAA,SAAA,GAKA,MAJA,GAAA,EACA,EAAA,MACA,EAAA,EAAA,KAAA,EAAA,UAEA,GAMA,EAAA,SAAA,EAEA,EAAA,SAAA,EAAA,EAAA,GAGA,EAAA,SAIA,EAAA,EACA,MAGA,EAAA,EAAA,IAAA,EAAA,EAAA,KACA,EAAA,IAAA,EAAA,EAAA,KAIA,EAAA,KACA,QAAA,MC1ZA,ECCA,oCAAA,cDCA,EAAA,MAAA,KAAA,SAAA,GAAA,KAAA,IAAA,OAAA,6BAAA,MAUA,WAqFA,QAAA,GAAA,EAAA,EAAA,GAIA,IAHA,GAAA,IAAA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,OAAA,IAEA,EAAA,GACA,GAAA,EAAA,KAAA,EACA,MAAA,EAGA,OAAA,GAYA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,EAAA,SACA,EAAA,EAAA,QAIA,IAAA,IAAA,EAAA,CACA,GAAA,EAAA,GAAA,mBAAA,GACA,MAAA,EAEA,IAAA,EAAA,GAAA,mBAAA,GACA,MAAA,GAOA,MAAA,GAAA,MAAA,EAAA,MAWA,QAAA,GAAA,GACA,MAAA,KAAA,GAAA,GAQA,QAAA,MAsHA,QAAA,GAAA,GACA,MAAA,aAAA,GACA,EACA,GAAA,GAAA,GAWA,QAAA,GAAA,EAAA,GACA,KAAA,YAAA,EACA,KAAA,YAAA,EAgGA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,kBAAA,GACA,MAAA,GAGA,IAAA,mBAAA,GACA,MAAA,EAEA,QAAA,GACA,IAAA,GAAA,MAAA,UAAA,GACA,MAAA,GAAA,KAAA,EAAA,GAEA,KAAA,GAAA,MAAA,UAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,EAAA,GAEA,KAAA,GAAA,MAAA,UAAA,EAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,EAAA,EAAA,GAEA,KAAA,GAAA,MAAA,UAAA,EAAA,EAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAGA,MAAA,IAAA,EAAA,GAcA,QAAA,GAAA,EAAA,EAAA,EAAA,GAKA,IAJA,GAAA,IAAA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,OAAA,EACA,OAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EAEA,IAAA,GAAA,gBAAA,IAAA,gBAAA,GAAA,SACA,GAAA,IAAA,EAAA,IAAA,CAEA,IACA,EAAA,EAAA,EAAA,EAAA,GAEA,IAAA,GAAA,GACA,EAAA,EAAA,OACA,EAAA,EAAA,MAGA,KADA,EAAA,QAAA,IACA,EAAA,GACA,EAAA,KAAA,EAAA,OAEA,IACA,EAAA,KAAA,GAGA,MAAA,GAgBA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,IAAA,EACA,MAAA,KAAA,GAAA,EAAA,GAAA,EAAA,CAEA,IAAA,SAAA,GACA,QAAA,EAEA,MAAA,IAAA,GACA,GAAA,GAAA,IACA,GAAA,GAAA,IACA,OAAA,CAEA,IAAA,MAAA,GAAA,MAAA,EACA,MAAA,KAAA,CAEA,IAAA,GAAA,GAAA,KAAA,GACA,EAAA,GAAA,KAAA,EAEA,IAAA,GAAA,EACA,OAAA,CAEA,QAAA,GACA,IAAA,IACA,IAAA,IACA,OAAA,IAAA,CAEA,KAAA,IACA,MAAA,KAAA,EACA,IAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,CAEA,KAAA,IACA,IAAA,IACA,MAAA,IAAA,OAAA,GAEA,GAAA,GAAA,GAAA,EACA,KAAA,EAAA,CACA,GAAA,GAAA,KAAA,EAAA,iBAAA,YAAA,GACA,MAAA,GAAA,EAAA,aAAA,EAAA,EAAA,aAAA,EAAA,EAAA,EAEA,IAAA,GAAA,GACA,OAAA,CAEA,IAAA,GAAA,EAAA,YACA,EAAA,EAAA,WAEA,IAAA,GAAA,KACA,EAAA,IAAA,YAAA,IACA,EAAA,IAAA,YAAA,IAEA,OAAA,EAGA,IAAA,MACA,IAAA,KAGA,KADA,GAAA,GAAA,EAAA,OACA,KACA,GAAA,EAAA,IAAA,EACA,MAAA,GAAA,IAAA,CAGA,IAAA,IAAA,EACA,EAAA,CAKA,IAHA,EAAA,KAAA,GACA,EAAA,KAAA,GAEA,EAAA,CAIA,GAHA,EAAA,EAAA,OACA,EAAA,GAAA,EAAA,OAGA,KAAA,MACA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAKA,MAAA,GAgBA,MAdA,IAAA,EAAA,SAAA,EAAA,EAAA,GACA,MAAA,IAAA,KAAA,EAAA,IACA,MACA,EAAA,GAAA,KAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,IAFA,SAMA,GACA,GAAA,EAAA,SAAA,EAAA,EAAA,GACA,MAAA,IAAA,KAAA,EAAA,KACA,IAAA,EAAA,KAAA,GADA,SAKA,EAaA,QAAA,GAAA,EAAA,EAAA,GAOA,IANA,GAAA,GAAA,GACA,EAAA,IACA,EAAA,EAAA,EAAA,OAAA,EACA,KACA,EAAA,KAAA,IAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAEA,GACA,GAAA,EAAA,EAAA,OAAA,KAAA,EACA,EAAA,EAAA,GAAA,KAEA,GACA,EAAA,KAAA,GAEA,EAAA,KAAA,IAGA,MAAA,GAaA,QAAA,GAAA,GACA,MAAA,UAAA,EAAA,EAAA,GACA,GAAA,KACA,GAAA,GAAA,EAAA,EAAA,EAEA,IAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,GACA,OAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAGA,IAAA,EAAA,SAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAGA,OAAA,IA0BA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,CAEA,KAAA,IAAA,EAAA,GACA,KAAA,IAAA,UAYA,IAVA,IAAA,EAAA,SACA,GAAA,IACA,EAAA,GAAA,GAEA,IAAA,EAAA,SACA,GAAA,IACA,EAAA,GAAA,IAIA,GAAA,GAAA,GAAA,KACA,GAAA,UAAA,IAAA,GAUA,EAAA,WAGA,GAAA,GAAA,UACA,EAAA,EAAA,EAAA,IAEA,KAAA,GAAA,GAAA,KACA,EAAA,GAAA,KAAA,GACA,GACA,GAAA,MAAA,EAAA,GAEA,GACA,GAAA,MAAA,EAAA,GAEA,GAAA,EAAA,OAAA,GAEA,MADA,IAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAMA,IAHA,IACA,EAAA,EAAA,IAEA,eAAA,GAAA,CAEA,EAAA,EAAA,EAAA,UAIA,IAAA,GAAA,EAAA,MAAA,EAAA,EACA,OAAA,GAAA,GAAA,EAAA,EAEA,MAAA,GAAA,MAAA,EAAA,QAzCA,CACA,GAAA,EAAA,CACA,GAAA,IAAA,EACA,IAAA,MAAA,EAAA,GAEA,GAAA,GAAA,EACA,GAAA,MAAA,EAAA,GACA,GAAA,KAAA,EAAA,GAqCA,MAAA,GAUA,QAAA,GAAA,GACA,MAAA,GAAA,GAAA,GAAA,MAqBA,QAAA,GAAA,GACA,MAAA,IAAA,GAWA,QAAA,KACA,GAAA,IAAA,EAAA,EAAA,WAAA,GAAA,EAAA,CACA,OAAA,GAUA,QAAA,GAAA,GACA,MAAA,IAAA,GAqBA,QAAA,GAAA,GACA,MAAA,IAAA,gBAAA,IAAA,gBAAA,GAAA,QACA,GAAA,KAAA,IAAA,KAAA,EAgIA,QAAA,GAAA,GACA,IAAA,EACA,MAAA,EAEA,KAAA,GAAA,GAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,CACA,GAAA,GAAA,UAAA,EACA,IAAA,EACA,IAAA,GAAA,KAAA,GACA,EAAA,GAAA,EAAA,GAIA,MAAA,GA2CA,QAAA,GAAA,GACA,MAAA,GAAA,GACA,GAAA,GAAA,GAAA,KAAA,GAAA,KAAA,GACA,EAuBA,QAAA,GAAA,GACA,IAAA,EACA,MAAA,EAEA,KAAA,GAAA,GAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,CACA,GAAA,GAAA,UAAA,EACA,IAAA,EACA,IAAA,GAAA,KAAA,GACA,mBAAA,GAAA,KACA,EAAA,GAAA,EAAA,IAKA,MAAA,GA0FA,QAAA,GAAA,GACA,GAAA,KAMA,OALA,IAAA,EAAA,SAAA,EAAA,GACA,EAAA,IACA,EAAA,KAAA,KAGA,EAAA,OAkBA,QAAA,GAAA,EAAA,GACA,MAAA,GAAA,GAAA,KAAA,EAAA,IAAA,EAgBA,QAAA,GAAA,GAMA,IALA,GAAA,GAAA,GACA,EAAA,GAAA,GACA,EAAA,EAAA,OACA,OAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GAAA,EAAA,IAAA,EAEA,MAAA,GAgBA,QAAA,GAAA,GACA,MAAA,MAAA,GAAA,KAAA,GAAA,GAAA,KAAA,IAAA,GAgBA,QAAA,GAAA,GACA,MAAA,GAAA,gBAAA,IAAA,GAAA,KAAA,IAAA,IAAA,EAgBA,QAAA,GAAA,GACA,MAAA,GAAA,IAAA,EAAA,UAAA,EAwBA,QAAA,GAAA,GACA,IAAA,EACA,OAAA,CAEA,IAAA,GAAA,IAAA,EAAA,GACA,OAAA,EAAA,MAEA,KAAA,GAAA,KAAA,GACA,GAAA,GAAA,KAAA,EAAA,GACA,OAAA,CAGA,QAAA,EAyCA,QAAA,GAAA,EAAA,GACA,MAAA,GAAA,EAAA,GA+BA,QAAA,GAAA,GACA,MAAA,IAAA,KAAA,GAAA,WAAA,IAgBA,QAAA,GAAA,GACA,MAAA,kBAAA,GA6BA,QAAA,GAAA,GAKA,SAAA,IAAA,SAAA,KA4BA,QAAA,GAAA,GAGA,MAAA,GAAA,IAAA,IAAA,EAmBA,QAAA,GAAA,GACA,MAAA,QAAA,EAkBA,QAAA,GAAA,GACA,MAAA,gBAAA,IAAA,GAAA,KAAA,IAAA,GAgBA,QAAA,GAAA,GACA,MAAA,IAAA,SAAA,IAAA,GAAA,KAAA,IAAA,IAAA,EAgBA,QAAA,GAAA,GACA,MAAA,gBAAA,IAAA,GAAA,KAAA,IAAA,GAgBA,QAAA,GAAA,GACA,MAAA,mBAAA,GA6BA,QAAA,GAAA,GACA,GAAA,GAAA,IACA,EAAA,EAAA,WAAA,GAAA,EAAA,GACA,IAOA,OALA,IAAA,EAAA,SAAA,EAAA,GACA,EAAA,EAAA,GAAA,IACA,EAAA,GAAA,KAGA,EAiBA,QAAA,GAAA,GAMA,IALA,GAAA,GAAA,GACA,EAAA,GAAA,GACA,EAAA,EAAA,OACA,EAAA,MAAA,KAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GAAA,IAAA,EAAA,EAAA,IAEA,MAAA,GA8BA,QAAA,GAAA,GAMA,IALA,GAAA,GAAA,GACA,EAAA,EAAA,WAAA,GAAA,EAAA,GACA,EAAA,EAAA,OACA,OAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,KAAA,KACA,EAAA,GAAA,EAAA,IAGA,MAAA,GAgBA,QAAA,GAAA,GAMA,IALA,GAAA,GAAA,GACA,EAAA,GAAA,GACA,EAAA,EAAA,OACA,EAAA,MAAA,KAEA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GAEA,OAAA,GAgCA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,IACA,EAAA,EAAA,EAAA,OAAA,EACA,GAAA,CAQA,OAPA,IAAA,gBAAA,GACA,EAAA,EAAA,EAAA,GAAA,GAEA,GAAA,EAAA,SAAA,GACA,OAAA,EAAA,IAAA,IAAA,KAGA,EAkFA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,IAAA,CACA,GAAA,GAAA,EAAA,EAAA,EAEA,IAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,GACA,OAAA,EAAA,IACA,IAAA,EAAA,EAAA,GAAA,EAAA,UAKA,IAAA,EAAA,SAAA,EAAA,EAAA,GACA,QAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAGA,OAAA,GA2CA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,KACA,GAAA,GAAA,EAAA,EAAA,EAEA,IAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,GACA,OAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,IACA,EAAA,KAAA,OAIA,IAAA,EAAA,SAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,IACA,EAAA,KAAA,IAIA,OAAA,GA8CA,QAAA,GAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAEA,IAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,GAOA,CACA,GAAA,EAOA,OANA,IAAA,EAAA,SAAA,EAAA,EAAA,GACA,MAAA,GAAA,EAAA,EAAA,IACA,EAAA,EACA,IAFA,SAKA,EAdA,OAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,GACA,MAAA,IAsCA,QAAA,GAAA,EAAA,GACA,MAAA,IAAA,EAAA,GAAA,GAyBA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAGA,IADA,EAAA,GAAA,mBAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GACA,gBAAA,GACA,OAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,KAAA,SAKA,IAAA,EAAA,GAqBA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,OAAA,CACA,IAAA,gBAAA,GACA,KAAA,KACA,EAAA,EAAA,GAAA,EAAA,MAAA,QAIA,CACA,GAAA,GAAA,GAAA,EACA,GAAA,EAAA,OACA,GAAA,EAAA,SAAA,EAAA,EAAA,GAEA,MADA,GAAA,EAAA,IAAA,KAAA,EACA,EAAA,EAAA,GAAA,EAAA,MAAA,GAAA,MA6GA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,GAAA,KAAA,UAAA,GACA,EAAA,GACA,EAAA,kBAAA,GACA,EAAA,EAAA,EAAA,OAAA,EACA,EAAA,MAAA,gBAAA,GAAA,EAAA,EAKA,OAHA,GAAA,EAAA,SAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAEA,EA0CA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAGA,IADA,EAAA,GAAA,EAAA,EAAA,GACA,gBAAA,GAEA,IADA,GAAA,GAAA,MAAA,KACA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAGA,MACA,GAAA,EAAA,SAAA,EAAA,EAAA,GACA,IAAA,GAAA,EAAA,EAAA,EAAA,IAGA,OAAA,GA2CA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,IAAA,IACA,EAAA,EAEA,EAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,GAAA,gBAAA,GAQA,EAAA,GAAA,EAAA,EAAA,GAEA,EAAA,EAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,EACA,GAAA,IACA,EAAA,EACA,EAAA,SAbA,QAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GAAA,IACA,EAAA,GAcA,MAAA,GA2CA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,IACA,EAAA,EAEA,EAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,GAAA,gBAAA,GAQA,EAAA,GAAA,EAAA,EAAA,GAEA,EAAA,EAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,EACA,GAAA,IACA,EAAA,EACA,EAAA,SAbA,QAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GAAA,IACA,EAAA,GAcA,MAAA,GAuBA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,GAEA,IADA,GAAA,GAAA,MAAA,KACA,EAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAGA,OAAA,IAAA,EAAA,EAAA,GAiCA,QAAA,IAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,MAAA,EACA,IAAA,GAAA,UAAA,OAAA,CACA,GAAA,EAAA,EAAA,EAAA,EAEA,IAAA,GAAA,GACA,EAAA,EAAA,MAEA,IAAA,gBAAA,GAIA,IAHA,IACA,EAAA,IAAA,MAEA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAGA,IAAA,EAAA,SAAA,EAAA,EAAA,GACA,EAAA,GACA,GAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,IAGA,OAAA,GAsBA,QAAA,IAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,UAAA,OAAA,CAOA,OANA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,SAAA,EAAA,EAAA,GACA,EAAA,GACA,GAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,KAEA,EAyCA,QAAA,IAAA,EAAA,EAAA,GAEA,MADA,GAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,KAuBA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,OAAA,CAIA,IAHA,gBAAA,KACA,EAAA,EAAA,IAEA,MAAA,GAAA,EACA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAEA,IAAA,GAAA,GAAA,EAEA,OADA,GAAA,OAAA,GAAA,GAAA,EAAA,GAAA,EAAA,QACA,EAiBA,QAAA,IAAA,GACA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,EACA,EAAA,MAAA,gBAAA,GAAA,EAAA,EAOA,OALA,GAAA,EAAA,SAAA,GACA,GAAA,GAAA,KAAA,EACA,GAAA,GAAA,EAAA,GACA,EAAA,GAAA,IAEA,EAuBA,QAAA,IAAA,GACA,GAAA,GAAA,EAAA,EAAA,OAAA,CACA,OAAA,gBAAA,GAAA,EAAA,GAAA,GAAA,OA6CA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,GAAA,EAAA,EAAA,EAEA,IAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,GACA,OAAA,EAAA,KACA,EAAA,EAAA,EAAA,GAAA,EAAA,UAKA,IAAA,EAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAGA,SAAA,EAsCA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,EACA,EAAA,MAAA,gBAAA,GAAA,EAAA,EAaA,KAXA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,SAAA,EAAA,EAAA,GACA,IAAA,IACA,SAAA,EAAA,EAAA,EAAA,GACA,MAAA,EACA,MAAA,KAIA,EAAA,EAAA,OACA,EAAA,KAAA,GACA,KACA,EAAA,GAAA,EAAA,GAAA,KAEA,OAAA,GAgBA,QAAA,IAAA,GACA,MAAA,IAAA,GACA,GAAA,KAAA,GAEA,GAAA,gBAAA,GAAA,OACA,EAAA,GAEA,EAAA,GA4BA,QAAA,IAAA,EAAA,EAAA,GACA,MAAA,IAAA,EAAA,GACA,IACA,EAAA,EAAA,GAAA,EAAA,GAmBA,QAAA,IAAA,GAKA,IAJA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,EACA,OAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,IACA,EAAA,KAAA,GAGA,MAAA,GAkBA,QAAA,IAAA,GAOA,IANA,GAAA,GAAA,GACA,EAAA,IACA,EAAA,EAAA,OACA,EAAA,EAAA,WAAA,GAAA,EAAA,GACA,OAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GAAA,EAAA,GAAA,GACA,EAAA,KAAA,GAGA,MAAA,GA2DA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,IAAA,MAAA,EAAA,CACA,GAAA,GAAA,EAEA,KADA,EAAA,GAAA,EAAA,EAAA,KACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IACA,QAIA,IADA,EAAA,EACA,MAAA,GAAA,EACA,MAAA,GAAA,EAAA,GAAA,EAGA,OAAA,IAAA,KAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IA4CA,QAAA,IAAA,EAAA,GACA,MAAA,GAAA,EAAA,GA2BA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,gBAAA,GAAA,CACA,GAAA,GAAA,EAAA,EAAA,OAAA,CACA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,MACA,IAAA,EAAA,CACA,GAAA,GAAA,GAAA,EAAA,EACA,OAAA,GAAA,KAAA,EAAA,EAAA,GAEA,MAAA,GAAA,EAAA,EAAA,GA0DA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,IAAA,MAAA,EAAA,CACA,GAAA,GAAA,CAEA,KADA,EAAA,GAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,GAAA,EAAA,IACA,QAGA,GAAA,MAAA,GAAA,EAAA,EAAA,GAAA,CAEA,OAAA,IAAA,KAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,IAiBA,QAAA,IAAA,GACA,GAAA,GAAA,UACA,EAAA,EAAA,OACA,EAAA,GACA,EAAA,IACA,EAAA,EAAA,EAAA,OAAA,EACA,IAEA,GACA,OAAA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,IAAA,EAAA,EAAA,GAAA,EAAA,CAEA,IADA,GAAA,GAAA,IACA,GACA,GAAA,EAAA,EAAA,GAAA,GAAA,EACA,QAAA,EAGA,GAAA,KAAA,IAGA,MAAA,GA0DA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,OAAA,CAEA,IAAA,gBAAA,IAAA,MAAA,EAAA,CACA,GAAA,GAAA,CAEA,KADA,EAAA,GAAA,EAAA,EAAA,GACA,KAAA,EAAA,EAAA,GAAA,EAAA,IACA,QAIA,IADA,EAAA,EACA,MAAA,GAAA,EACA,MAAA,GAAA,EAAA,EAAA,GAAA,EAGA,OAAA,IAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAuBA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,OAAA,CAIA,KAHA,gBAAA,KACA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,GAEA,KACA,GAAA,EAAA,KAAA,EACA,MAAA,EAGA,OAAA,GAmCA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,EACA,GAAA,GAAA,EAEA,MAAA,IACA,EAAA,EACA,EAAA,EAQA,KAJA,GAAA,GAAA,GACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,IACA,EAAA,MAAA,KAEA,EAAA,GACA,EAAA,GAAA,EACA,GAAA,CAEA,OAAA,GA4DA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,gBAAA,IAAA,MAAA,EAAA,CACA,GAAA,GAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,OAAA,CAGA,KADA,EAAA,GAAA,EAAA,EAAA,KACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,IACA,QAGA,GAAA,MAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAEA,OAAA,IAAA,KAAA,EAAA,GAmDA,QAAA,IAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EACA,EAAA,EAAA,EAAA,OAAA,CAMA,KAHA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAAA,GAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,IAAA,CACA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,EACA,EAAA,EAEA,MAAA,GAiBA,QAAA,MACA,MAAA,GAAA,EAAA,WAAA,GAAA,IA+CA,QAAA,IAAA,EAAA,EAAA,EAAA,GAUA,MARA,iBAAA,IAAA,MAAA,IACA,EAAA,EACA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EACA,GAAA,GAEA,MAAA,IACA,EAAA,GAAA,EAAA,EAAA,IAEA,EAAA,EAAA,EAAA,GAkBA,QAAA,IAAA,GACA,MAAA,IAAA,EAAA,GAAA,KAAA,UAAA,IAmBA,QAAA,MAKA,IAJA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,UAAA,WACA,EAAA,MAAA,EAAA,EAAA,EAAA,KAEA,EAAA,GACA,EAAA,GAAA,EAAA,UAAA,EAEA,OAAA,GAqBA,QAAA,IAAA,EAAA,GAKA,IAJA,GAAA,GAAA,GACA,EAAA,EAAA,EAAA,OAAA,EACA,OAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GACA,EAAA,GAAA,EAAA,GACA,IACA,EAAA,EAAA,IAAA,EAAA,IAGA,MAAA,GA6BA,QAAA,IAAA,EAAA,GACA,IAAA,EAAA,GACA,KAAA,IAAA,UAEA,OAAA,YACA,QAAA,EAAA,EACA,EAAA,MAAA,KAAA,WADA,QA4BA,QAAA,IAAA,EAAA,GACA,MAAA,WAAA,OAAA,EACA,EAAA,EAAA,GAAA,GAAA,KAAA,UAAA,GAAA,KAAA,GACA,EAAA,EAAA,EAAA,KAAA,KAAA,GA2BA,QAAA,IAAA,GAKA,IAJA,GAAA,GAAA,UAAA,OAAA,EAAA,EAAA,WAAA,GAAA,EAAA,GAAA,EAAA,GACA,EAAA,GACA,EAAA,EAAA,SAEA,EAAA,GAAA,CACA,GAAA,GAAA,EAAA,EACA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,KAAA,GAEA,MAAA,GAiCA,QAAA,MAIA,IAHA,GAAA,GAAA,UACA,EAAA,EAAA,OAEA,KACA,IAAA,EAAA,EAAA,IACA,KAAA,IAAA,UAGA,OAAA,YAIA,IAHA,GAAA,GAAA,UACA,EAAA,EAAA,OAEA,KACA,GAAA,EAAA,GAAA,MAAA,KAAA,GAEA,OAAA,GAAA,IAmCA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,SAAA,EACA,IAAA,MAAA,GAAA,YAAA,EACA,MAAA,GAAA,EAAA,EAAA,EAGA,IAAA,UAAA,EACA,MAAA,UAAA,GACA,MAAA,GAAA,GAGA,IAAA,GAAA,GAAA,EACA,OAAA,UAAA,GAIA,IAHA,GAAA,GAAA,EAAA,OACA,GAAA,EAEA,MACA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OAIA,MAAA,IA2CA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EAAA,EACA,GAAA,EACA,GAAA,CAEA,KAAA,EAAA,GACA,KAAA,IAAA,UAGA,IADA,EAAA,GAAA,EAAA,IAAA,EACA,KAAA,EAAA,CACA,GAAA,IAAA,CACA,IAAA,MACA,GAAA,KACA,EAAA,EAAA,QACA,EAAA,WAAA,KAAA,GAAA,EAAA,EAAA,UAAA,GACA,EAAA,YAAA,GAAA,EAAA,SAAA,EAEA,IAAA,GAAA,WACA,GAAA,GAAA,GAAA,KAAA,EACA,IAAA,GAAA,EAAA,CACA,GACA,aAAA,EAEA,IAAA,GAAA,CACA,GAAA,EAAA,EAAA,GACA,IACA,EAAA,KACA,EAAA,EAAA,MAAA,EAAA,QAGA,GAAA,WAAA,EAAA,IAIA,EAAA,WACA,GACA,aAAA,GAEA,EAAA,EAAA,EAAA,IACA,GAAA,IAAA,KACA,EAAA,KACA,EAAA,EAAA,MAAA,EAAA,IAIA,OAAA,YAMA,GALA,EAAA,UACA,EAAA,KACA,EAAA,KACA,EAAA,IAAA,IAAA,GAEA,KAAA,EACA,GAAA,GAAA,IAAA,MACA,CACA,GAAA,IACA,EAAA,EAEA,IAAA,GAAA,GAAA,EAAA,EACA,IAAA,GACA,IACA,EAAA,aAAA,IAEA,EAAA,EACA,EAAA,EAAA,MAAA,EAAA,IAEA,IACA,EAAA,WAAA,EAAA,IASA,MANA,IAAA,IAAA,IACA,EAAA,WAAA,EAAA,IAEA,IACA,EAAA,EAAA,MAAA,EAAA,IAEA,GAmBA,QAAA,IAAA,GACA,IAAA,EAAA,GACA,KAAA,IAAA,UAEA,IAAA,GAAA,GAAA,KAAA,UAAA,EACA,OAAA,YAAA,WAAA,EAAA,MAAA,GAAA,IAAA,GAoBA,QAAA,IAAA,EAAA,GACA,IAAA,EAAA,GACA,KAAA,IAAA,UAEA,IAAA,GAAA,GAAA,KAAA,UAAA,EACA,OAAA,YAAA,WAAA,EAAA,MAAA,GAAA,IAAA,GAqCA,QAAA,IAAA,EAAA,GACA,GAAA,KACA,OAAA,YACA,GAAA,GAAA,EAAA,EAAA,MAAA,KAAA,WAAA,GAAA,UAAA,EACA,OAAA,IAAA,KAAA,EAAA,GACA,EAAA,GACA,EAAA,GAAA,EAAA,MAAA,KAAA,YAqBA,QAAA,IAAA,GACA,GAAA,GACA,CAEA,KAAA,EAAA,GACA,KAAA,IAAA,UAEA,OAAA,YACA,MAAA,GACA,GAEA,GAAA,EACA,EAAA,EAAA,MAAA,KAAA,WAGA,EAAA,KACA,IAsBA,QAAA,IAAA,GACA,MAAA,GAAA,EAAA,GAAA,GAAA,KAAA,UAAA,IAkCA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,IAAA,EACA,GAAA,CAEA,KAAA,EAAA,GACA,KAAA,IAAA,UAaA,OAXA,MAAA,EACA,GAAA,EACA,EAAA,KACA,EAAA,WAAA,GAAA,EAAA,QAAA,EACA,EAAA,YAAA,GAAA,EAAA,SAAA,GAEA,KACA,EAAA,QAAA,EACA,EAAA,QAAA,EACA,EAAA,SAAA,EAEA,GAAA,EAAA,EAAA,GAwBA,QAAA,IAAA,EAAA,GACA,IAAA,EAAA,GACA,KAAA,IAAA,UAEA,OAAA,YACA,GAAA,IAAA,EAEA,OADA,IAAA,MAAA,EAAA,WACA,EAAA,MAAA,KAAA,IAoBA,QAAA,IAAA,GACA,MAAA,OAAA,EAAA,GAAA,OAAA,GAAA,QAAA,GAAA,GAiBA,QAAA,IAAA,GACA,MAAA,GA0BA,QAAA,IAAA,GACA,EAAA,EAAA,GAAA,SAAA,GACA,GAAA,GAAA,EAAA,GAAA,EAAA,EAEA,GAAA,UAAA,GAAA,WACA,GAAA,IAAA,KAAA,YACA,IAAA,MAAA,EAAA,UAEA,IAAA,GAAA,EAAA,MAAA,EAAA,EACA,OAAA,MAAA,UACA,GAAA,GAAA,GAAA,GACA,KAiBA,QAAA,MAEA,MADA,IAAA,EAAA,GACA,KA8BA,QAAA,IAAA,EAAA,GAWA,MAVA,OAAA,GAAA,MAAA,IACA,EAAA,GAEA,GAAA,GAAA,EACA,MAAA,GACA,EAAA,EACA,EAAA,GAEA,GAAA,GAAA,EAEA,EAAA,GAAA,MAAA,EAAA,EAAA,IA8BA,QAAA,IAAA,EAAA,GACA,GAAA,EAAA,CACA,GAAA,GAAA,EAAA,EACA,OAAA,GAAA,GAAA,EAAA,KAAA,GA0FA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,EACA,EAAA,EAAA,gBAEA,KAAA,EAAA,IACA,EAAA,KAAA,EAAA,EAEA,IAAA,GAAA,EACA,EAAA,WACA,EAAA,EAAA,SAEA,EAAA,QACA,EAAA,QAAA,IAAA,OAAA,KACA,EAAA,aAAA,IAAA,OAAA,KACA,EAAA,UAAA,IAAA,OAAA,KACA,IAEA,GAAA,QAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAYA,MAXA,IAAA,EAAA,MAAA,EAAA,GAAA,QAAA,GAAA,GACA,IACA,GAAA,iBAAA,EAAA,UAEA,IACA,GAAA,OAAA,EAAA,eAEA,IACA,GAAA,iBAAA,EAAA,+BAEA,EAAA,EAAA,EAAA,OACA,IAGA,GAAA,OACA,IACA,EAAA,MACA,EAAA,SAAA,EAAA,cAAA,EAAA,SAEA,EAAA,YAAA,EAAA,QACA,mDACA,wDACA,EACA,eAEA,KACA,GAAA,GAAA,SAAA,IAAA,UAAA,GAAA,GACA,MAAA,GAEA,KADA,GAAA,OAAA,EACA,EAEA,MAAA,GACA,EAAA,IAEA,EAAA,OAAA,EACA,GA0BA,QAAA,IAAA,EAAA,EAAA,GACA,GAAA,GAAA,GAAA,GAAA,EAAA,CACA,IAAA,GAAA,GACA,EAAA,MAAA,EAGA,KADA,EAAA,EAAA,EAAA,EAAA,KACA,EAAA,GACA,EAAA,GAAA,EAAA,EAEA,OAAA,GAkBA,QAAA,IAAA,GACA,MAAA,OAAA,EAAA,GAAA,OAAA,GAAA,QAAA,GAAA,GAmBA,QAAA,IAAA,GACA,GAAA,KAAA,GAAA,EACA,OAAA,GAAA,EAAA,EAAA,EA6BA,QAAA,IAAA,GAGA,MAFA,GAAA,GAAA,GAAA,GACA,EAAA,WAAA,EACA,EAyBA,QAAA,IAAA,EAAA,GAEA,MADA,GAAA,GACA,EA4BA,QAAA,MAEA,MADA,MAAA,WAAA,EACA,KAgBA,QAAA,MACA,MAAA,MAAA,YA78IA,GAAA,IAGA,GAAA,EAGA,MAGA,IAAA,GAAA,MAAA,GAGA,GAAA,mBAGA,GAAA,OAGA,GAAA,2BAGA,GAAA,qBACA,GAAA,iBACA,GAAA,mBACA,GAAA,gBACA,GAAA,oBACA,GAAA,kBACA,GAAA,kBACA,GAAA,kBACA,GAAA,kBAGA,IACA,WAAA,EACA,YAAA,EACA,QAAA,EACA,QAAA,EACA,QAAA,EACA,WAAA,GAIA,IACA,KAAA,KACA,IAAA,IACA,KAAA,IACA,KAAA,IACA,IAAA,IACA,SAAA,QACA,SAAA,SAIA,GAAA,SAAA,UAAA,QAAA,KAGA,GAAA,SAAA,WAAA,UAAA,QAAA,UAAA,QAGA,GAAA,SAAA,UAAA,SAAA,OAAA,UAAA,OAGA,GAAA,IAAA,GAAA,UAAA,IAAA,GAGA,GAAA,SAAA,UAAA,QACA,IAAA,GAAA,SAAA,IAAA,GAAA,SAAA,KACA,GAAA,GAsFA,IAAA,OAGA,GAAA,OAAA,UAGA,GAAA,GAAA,EAGA,GAAA,OAAA,IACA,OAAA,GAAA,SACA,QAAA,sBAAA,QACA,QAAA,sBAAA,OAAA,KAIA,GAAA,KAAA,KACA,GAAA,KAAA,MACA,GAAA,GAAA,eACA,GAAA,GAAA,KAAA,GAAA,KAAA,MAAA,IAAA,WAAA,OAAA,GAAA,OACA,GAAA,GAAA,KACA,GAAA,GAAA,SACA,GAAA,GAAA,QAGA,GAAA,GAAA,KAAA,GAAA,GAAA,OAAA,GACA,GAAA,GAAA,KAAA,GAAA,OAAA,SAAA,GACA,GAAA,GAAA,KAAA,GAAA,MAAA,UAAA,GACA,GAAA,GAAA,SACA,GAAA,GAAA,MACA,GAAA,GAAA,KAAA,GAAA,OAAA,OAAA,GACA,GAAA,KAAA,IACA,GAAA,KAAA,IACA,GAAA,KAAA,OACA,GAAA,GAAA,MAGA,GAAA,GAAA,KAAA,GAAA,aACA,GAAA,KAAA,UAAA,KAAA,GAAA,GAuFA,GAAA,UAAA,EAAA,SASA,IAAA,QAEA,WACA,GAAA,IAAA,EAAA,EAAA,OAAA,EAQA,IAAA,SAAA,KAAA,GAcA,GAAA,eAAA,GAAA,OAAA,KAAA,EAAA,EAAA,IAAA,EAAA,KACA,GAWA,EAAA,kBAQA,OAAA,mBAQA,SAAA,kBAQA,YAAA,GAQA,SAAA,IAwWA,KACA,EAAA,SAAA,GACA,GAAA,EAAA,GAAA,CACA,EAAA,UAAA,CACA,IAAA,GAAA,GAAA,EACA,GAAA,UAAA,KAEA,MAAA,SA8DA,EAAA,aACA,EAAA,SAAA,GACA,MAAA,IAAA,gBAAA,IAAA,gBAAA,GAAA,QACA,GAAA,KAAA,EAAA,YAAA,GAqBA,IAAA,IAAA,IAAA,SAAA,GACA,MAAA,IAAA,gBAAA,IAAA,gBAAA,GAAA,QACA,GAAA,KAAA,IAAA,KAAA,GAYA,GAAA,SAAA,GACA,GAAA,GAAA,EAAA,EAAA,IACA,KAAA,EAAA,MAAA,EACA,KAAA,SAAA,IAAA,MAAA,EACA,KAAA,IAAA,GACA,GAAA,KAAA,EAAA,IACA,EAAA,KAAA,EAGA,OAAA,IAgBA,GAAA,GAAA,SAAA,GACA,MAAA,GAAA,GAGA,GAAA,OAJA,GAeA,IACA,IAAA,QACA,IAAA,OACA,IAAA,OACA,IAAA,SACA,IAAA,UAIA,GAAA,EAAA,IAGA,GAAA,OAAA,IAAA,GAAA,IAAA,KAAA,KAAA,IAAA,KACA,GAAA,OAAA,IAAA,GAAA,IAAA,KAAA,IAAA,IAAA,KAiKA,GAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,CACA,KAAA,EAAA,MAAA,EACA,KAAA,SAAA,IAAA,MAAA,EACA,KAAA,IAAA,GACA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,MAAA,EAEA,OAAA,IAwBA,GAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,CACA,KAAA,EAAA,MAAA,EACA,KAAA,SAAA,IAAA,MAAA,EACA,KAAA,IAAA,GACA,GAAA,GAAA,KAAA,EAAA,IACA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,MAAA,EAGA,OAAA,GA2PA,GAAA,OACA,EAAA,SAAA,GACA,MAAA,kBAAA,IAAA,GAAA,KAAA,IAAA,IA2WA,IAAA,IAAA,EAAA,SAAA,EAAA,EAAA,GACA,GAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,IA4UA,GAAA,EAAA,SAAA,EAAA,EAAA,IACA,GAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,KAAA,KA0CA,GAAA,EAAA,SAAA,EAAA,EAAA,GACA,EAAA,GAAA,GA67EA,GAAA,MAAA,GACA,EAAA,KAAA,GACA,EAAA,QAAA,GACA,EAAA,MAAA,GACA,EAAA,QAAA,GACA,EAAA,QAAA,GACA,EAAA,QAAA,GACA,EAAA,SAAA,GACA,EAAA,SAAA,EACA,EAAA,MAAA,GACA,EAAA,MAAA,GACA,EAAA,WAAA,GACA,EAAA,OAAA,EACA,EAAA,QAAA,GACA,EAAA,QAAA,EACA,EAAA,UAAA,EACA,EAAA,QAAA,GACA,EAAA,QAAA,GACA,EAAA,QAAA,GACA,EAAA,aAAA,GACA,EAAA,OAAA,EACA,EAAA,OAAA,EACA,EAAA,KAAA,GACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,QAAA,GACA,EAAA,IAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,GACA,EAAA,MAAA,EACA,EAAA,QAAA,GACA,EAAA,KAAA,EACA,EAAA,MAAA,EACA,EAAA,MAAA,GACA,EAAA,OAAA,GACA,EAAA,KAAA,GACA,EAAA,QAAA,GACA,EAAA,OAAA,GACA,EAAA,IAAA,GACA,EAAA,SAAA,GACA,EAAA,MAAA,GACA,EAAA,QAAA,GACA,EAAA,MAAA,GACA,EAAA,KAAA,GACA,EAAA,OAAA,EACA,EAAA,MAAA,GACA,EAAA,QAAA,GACA,EAAA,KAAA,GACA,EAAA,IAAA,GAGA,EAAA,QAAA,EACA,EAAA,KAAA,GACA,EAAA,KAAA,EACA,EAAA,OAAA,EACA,EAAA,QAAA,EACA,EAAA,OAAA,GACA,EAAA,OAAA,EACA,EAAA,KAAA,GACA,EAAA,OAAA,GAKA,EAAA,MAAA,EACA,EAAA,SAAA,EACA,EAAA,OAAA,GACA,EAAA,MAAA,EACA,EAAA,KAAA,EACA,EAAA,IAAA,EACA,EAAA,SAAA,GACA,EAAA,QAAA,GACA,EAAA,YAAA,EACA,EAAA,QAAA,GACA,EAAA,UAAA,EACA,EAAA,OAAA,EACA,EAAA,UAAA,EACA,EAAA,QAAA,EACA,EAAA,QAAA,EACA,EAAA,SAAA,EACA,EAAA,WAAA,EACA,EAAA,MAAA,EACA,EAAA,OAAA,EACA,EAAA,SAAA,EACA,EAAA,SAAA,EACA,EAAA,SAAA,EACA,EAAA,SAAA,EACA,EAAA,YAAA,EACA,EAAA,YAAA,GACA,EAAA,MAAA,GACA,EAAA,WAAA,GACA,EAAA,OAAA,GACA,EAAA,OAAA,GACA,EAAA,YAAA,GACA,EAAA,OAAA,GACA,EAAA,KAAA,GACA,EAAA,KAAA,GACA,EAAA,YAAA,GACA,EAAA,SAAA,GACA,EAAA,SAAA,GACA,EAAA,SAAA,GAGA,EAAA,IAAA,EACA,EAAA,IAAA,GACA,EAAA,OAAA,EACA,EAAA,UAAA,EACA,EAAA,MAAA,GACA,EAAA,MAAA,GACA,EAAA,QAAA,EACA,EAAA,OAAA,GAKA,EAAA,MAAA,GACA,EAAA,KAAA,GACA,EAAA,OAAA,GAGA,EAAA,KAAA,GACA,EAAA,KAAA,GAKA,GAAA,GASA,EAAA,QAAA,QAGA,EAAA,UAAA,MAAA,GACA,EAAA,UAAA,MAAA,GAGA,GAAA,MAAA,OAAA,UAAA,QAAA,OAAA,SAAA,WAAA,SAAA,GACA,GAAA,GAAA,GAAA,EACA,GAAA,UAAA,GAAA,WACA,GAAA,GAAA,KAAA,WAQA,OAPA,GAAA,MAAA,EAAA,WAIA,GAAA,eAAA,IAAA,EAAA,cACA,GAAA,GAEA,QAKA,GAAA,SAAA,OAAA,SAAA,SAAA,GACA,GAAA,GAAA,GAAA,EACA,GAAA,UAAA,GAAA,WACA,GAAA,GAAA,KAAA,YACA,EAAA,EAAA,MAAA,EAAA,UAMA,OAJA,MAAA,YACA,EAAA,GAAA,GAAA,GACA,EAAA,WAAA,GAEA,KAOA,kBAAA,IAAA,gBAAA,GAAA,KAAA,EAAA,KAKA,GAAA,EAAA,EAIA,EAAA,gBAAA,WACA,MAAA,MAIA,IAAA,GAEA,IACA,GAAA,QAAA,GAAA,EAAA,EAIA,GAAA,EAAA,EAKA,GAAA,EAAA,GE1qJA,KAAA,MAIA,SAAA,GACA,OAAA,UAAA,OAAA,IACA,OAAA,UAAA,KAAA,WAAA,MAAA,MAAA,QAAA,aAAA,MAIA,MAAA,UAAA,SAAA,IACA,MAAA,UAAA,OAAA,SAAA,GACA,GAAA,SAAA,MAAA,OAAA,KAAA,KAAA,IAAA,UACA,IAAA,GAAA,EAAA,OAAA,MAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CACA,IAAA,kBAAA,GAAA,KAAA,IAAA,UACA,IAAA,GAAA,GAAA,GAAA,UAAA,OAAA,KAAA,IAAA,UAEA,IAAA,UAAA,QAAA,EACA,EAAA,UAAA,OAEA,QAAA,CACA,GAAA,IAAA,GAAA,CACA,EAAA,EAAA,IACA,OAEA,KAAA,GAAA,EAAA,KAAA,IAAA,WAGA,KAAA,EAAA,GACA,IAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IACA,GAEA,OAAA,OASA,IAAA,GAAA,WA6CA,QAAA,GAAA,GACA,MAAA,OAAA,EAAA,OAAA,GACA,EAAA,EAAA,KAAA,KAAA,SAGA,QAAA,GAAA,GAAA,MAAA,YAAA,EAAA,GACA,QAAA,GAAA,GAAA,MAAA,OAAA,GAAA,GAAA,EAAA,OACA,QAAA,GAAA,GAAA,MAAA,OAAA,GAAA,EAAA,UAAA,EAAA,cACA,QAAA,GAAA,GAAA,MAAA,UAAA,EAAA,GACA,QAAA,GAAA,GACA,MAAA,GAAA,KAAA,EAAA,IAAA,EAAA,WAAA,OAAA,UAEA,QAAA,GAAA,GAAA,MAAA,aAAA,OACA,QAAA,GAAA,GAAA,MAAA,gBAAA,GAAA,OAEA,QAAA,GAAA,GAAA,MAAA,GAAA,KAAA,EAAA,SAAA,GAAA,MAAA,OAAA,IACA,QAAA,GAAA,GAAA,MAAA,GAAA,OAAA,EAAA,EAAA,GAAA,OAAA,SAAA,GAAA,EAEA,QAAA,GAAA,GACA,MAAA,GAAA,QAAA,MAAA,KACA,QAAA,wBAAA,SACA,QAAA,oBAAA,SACA,QAAA,KAAA,KACA,cAIA,QAAA,GAAA,GACA,MAAA,KAAA,GACA,EAAA,GAAA,EAAA,GAAA,GAAA,QAAA,UAAA,EAAA,WAGA,QAAA,GAAA,EAAA,GACA,MAAA,gBAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAGA,QAAA,GAAA,GACA,GAAA,GAAA,CASA,OARA,GAAA,KACA,EAAA,EAAA,cAAA,GACA,EAAA,KAAA,YAAA,GACA,EAAA,EAAA,EAAA,IAAA,iBAAA,WACA,EAAA,WAAA,YAAA,GACA,QAAA,IAAA,EAAA,SACA,EAAA,GAAA,GAEA,EAAA,GAGA,QAAA,GAAA,GACA,MAAA,YAAA,GACA,EAAA,KAAA,EAAA,UACA,EAAA,IAAA,EAAA,WAAA,SAAA,GAAA,MAAA,IAAA,EAAA,SAAA,EAAA,SAoFA,QAAA,GAAA,EAAA,EAAA,GACA,IAAA,IAAA,GACA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MACA,EAAA,EAAA,MAAA,EAAA,EAAA,MACA,EAAA,OACA,EAAA,EAAA,MAAA,EAAA,EAAA,MACA,EAAA,OACA,EAAA,EAAA,GAAA,EAAA,GAAA,IAEA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IA8BA,QAAA,GAAA,EAAA,GACA,MAAA,KAAA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAOA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,MAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAGA,QAAA,GAAA,EAAA,EAAA,GACA,MAAA,EAAA,EAAA,gBAAA,GAAA,EAAA,aAAA,EAAA,GAIA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,EAAA,UACA,EAAA,GAAA,EAAA,UAAA,CAEA,OAAA,KAAA,EAAA,EAAA,EAAA,QAAA,GACA,EAAA,EAAA,QAAA,EAAA,EAAA,UAAA,EAAA,QAUA,QAAA,GAAA,GACA,GAAA,EACA,KACA,MAAA,GACA,QAAA,IACA,SAAA,GAAA,EACA,QAAA,EAAA,KACA,MAAA,EAAA,OAAA,IACA,UAAA,KAAA,GAAA,EAAA,UAAA,GACA,EAFA,GAGA,EACA,MAAA,GACA,MAAA,IAycA,QAAA,GAAA,EAAA,GACA,EAAA,EACA,KAAA,GAAA,KAAA,GAAA,WAAA,EAAA,EAAA,WAAA,GAAA,GAltBA,GAAA,GAAA,EAAA,EAAA,EA4BA,EAAA,EA5BA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OACA,EAAA,OAAA,SACA,KAAA,KACA,EAAA,EAAA,YAAA,iBACA,GAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,KAAA,GACA,EAAA,qBACA,EAAA,0EACA,EAAA,mBAGA,GAAA,MAAA,MAAA,OAAA,OAAA,OAAA,QAAA,SAAA,UAEA,GAAA,QAAA,UAAA,SAAA,UACA,EAAA,EAAA,cAAA,SACA,EAAA,EAAA,cAAA,MACA,GACA,GAAA,EAAA,cAAA,SACA,MAAA,EAAA,MAAA,EAAA,MAAA,EACA,GAAA,EAAA,GAAA,EACA,IAAA,EAAA,cAAA,QAEA,EAAA,8BACA,EAAA,eACA,EAAA,cACA,EAAA,WACA,KACA,EAAA,EAAA,SACA,KAEA,EAAA,EAAA,cAAA,MA8uBA,OA5uBA,GAAA,QAAA,SAAA,EAAA,GACA,IAAA,GAAA,IAAA,EAAA,SAAA,OAAA,CACA,IAAA,GAAA,EAAA,uBAAA,EAAA,oBACA,EAAA,kBAAA,EAAA,eACA,IAAA,EAAA,MAAA,GAAA,KAAA,EAAA,EAEA,IAAA,GAAA,EAAA,EAAA,WAAA,GAAA,CAIA,OAHA,KAAA,EAAA,GAAA,YAAA,GACA,GAAA,EAAA,IAAA,EAAA,GAAA,QAAA,GACA,GAAA,EAAA,YAAA,GACA,GAoBA,EAAA,SAAA,GAAA,MAAA,GAAA,QAAA,UAAA,SAAA,EAAA,GAAA,MAAA,GAAA,EAAA,cAAA,MAQA,EAAA,SAAA,GAAA,MAAA,GAAA,KAAA,EAAA,SAAA,EAAA,GAAA,MAAA,GAAA,QAAA,IAAA,KAmCA,EAAA,SAAA,SAAA,EAAA,EAAA,GACA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,cACA,IAAA,IAAA,EAAA,EAAA,KAAA,IAAA,OAAA,IACA,IAAA,KAAA,EAAA,IAEA,IAAA,GAAA,EAAA,EAAA,EAAA,EAYA,OAXA,GAAA,UAAA,GAAA,EACA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,YAAA,WACA,EAAA,YAAA,QAEA,EAAA,KACA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,SAAA,EAAA,GACA,EAAA,QAAA,GAAA,GAAA,EAAA,GAAA,GACA,EAAA,KAAA,EAAA,MAGA,GAOA,EAAA,EAAA,SAAA,EAAA,GAIA,MAHA,GAAA,MACA,EAAA,UAAA,EAAA,GACA,EAAA,SAAA,GAAA,GACA,GAKA,EAAA,IAAA,SAAA,GACA,MAAA,aAAA,GAAA,GAOA,EAAA,KAAA,SAAA,EAAA,GAEA,GAAA,EAEA,CAAA,GAAA,EAAA,GAAA,MAAA,GAAA,GAAA,MAAA,EAEA,IAAA,EAAA,IAAA,GAAA,MAAA,EAEA,IAAA,EAEA,IAAA,EAAA,GAAA,EAAA,EAAA,OAEA,IAAA,EAAA,GACA,GAAA,EAAA,GAAA,EAAA,UAAA,GAAA,GAAA,EAAA,SAEA,IAAA,EAAA,KAAA,GACA,EAAA,EAAA,SAAA,EAAA,OAAA,OAAA,GAAA,GAAA,EAAA,SAGA,CAAA,GAAA,IAAA,EAAA,MAAA,GAAA,GAAA,KAAA,EAEA,GAAA,EAAA,IAAA,EAAA,GAEA,MAAA,GAAA,EAAA,EAAA,GArBA,MAAA,GAAA,KA6BA,EAAA,SAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,IAiBA,EAAA,OAAA,SAAA,GACA,GAAA,GAAA,EAAA,EAAA,KAAA,UAAA,EAMA,OALA,iBAAA,KACA,EAAA,EACA,EAAA,EAAA,SAEA,EAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,KACA,GAMA,EAAA,IAAA,SAAA,EAAA,GACA,GAAA,EACA,OAAA,GAAA,IAAA,EAAA,KAAA,IACA,EAAA,EAAA,eAAA,OAAA,MAAA,MACA,IAAA,EAAA,UAAA,IAAA,EAAA,YACA,EAAA,KACA,EAAA,KAAA,GAAA,EAAA,uBAAA,OAAA,IACA,EAAA,KAAA,GAAA,EAAA,qBAAA,GACA,EAAA,iBAAA,KAQA,EAAA,SAAA,SAAA,EAAA,GACA,MAAA,KAAA,GAAA,EAAA,SAAA,IA2CA,EAAA,KAAA,EACA,EAAA,WAAA,EACA,EAAA,SAAA,EACA,EAAA,QAAA,EACA,EAAA,cAAA,EAEA,EAAA,cAAA,SAAA,GACA,GAAA,EACA,KAAA,IAAA,GAAA,OAAA,CACA,QAAA,GAGA,EAAA,QAAA,SAAA,EAAA,EAAA,GACA,MAAA,GAAA,QAAA,KAAA,EAAA,EAAA,IAGA,EAAA,UAAA,EACA,EAAA,KAAA,SAAA,GAAA,MAAA,GAAA,QAGA,EAAA,KAAA,EACA,EAAA,WACA,EAAA,QAEA,EAAA,IAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,IACA,IAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,EAAA,EAAA,GAAA,GACA,MAAA,GAAA,EAAA,KAAA,OAGA,KAAA,IAAA,GACA,EAAA,EAAA,EAAA,GAAA,GACA,MAAA,GAAA,EAAA,KAAA,EAEA,OAAA,GAAA,IAGA,EAAA,KAAA,SAAA,EAAA,GACA,GAAA,GAAA,CACA,IAAA,EAAA,IACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,MAAA,OAEA,KAAA,IAAA,GACA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAGA,OAAA,IAGA,EAAA,KAAA,SAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,IAGA,OAAA,OAAA,EAAA,UAAA,KAAA,OAGA,EAAA,KAAA,gEAAA,MAAA,KAAA,SAAA,EAAA,GACA,EAAA,WAAA,EAAA,KAAA,EAAA,gBAKA,EAAA,IAGA,QAAA,EAAA,QACA,OAAA,EAAA,OACA,KAAA,EAAA,KACA,KAAA,EAAA,KACA,QAAA,EAAA,QACA,OAAA,EAAA,OAIA,IAAA,SAAA,GACA,MAAA,GAAA,EAAA,IAAA,KAAA,SAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,OAEA,MAAA,WACA,MAAA,GAAA,EAAA,MAAA,KAAA,aAGA,MAAA,SAAA,GAGA,MAFA,GAAA,KAAA,EAAA,YAAA,EAAA,GACA,EAAA,iBAAA,mBAAA,WAAA,EAAA,KAAA,GACA,MAEA,IAAA,SAAA,GACA,MAAA,KAAA,EAAA,EAAA,KAAA,MAAA,KAAA,GAAA,EAAA,EAAA,EAAA,KAAA,SAEA,QAAA,WAAA,MAAA,MAAA,OACA,KAAA,WACA,MAAA,MAAA,QAEA,OAAA,WACA,MAAA,MAAA,KAAA,WACA,MAAA,KAAA,YACA,KAAA,WAAA,YAAA,SAGA,KAAA,SAAA,GAIA,MAHA,GAAA,MAAA,KAAA,KAAA,SAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,EAAA,MAAA,IAEA,MAEA,OAAA,SAAA,GACA,MAAA,GAAA,GAAA,KAAA,IAAA,KAAA,IAAA,IACA,EAAA,EAAA,KAAA,KAAA,SAAA,GACA,MAAA,GAAA,QAAA,EAAA,OAGA,IAAA,SAAA,EAAA,GACA,MAAA,GAAA,EAAA,KAAA,OAAA,EAAA,EAAA,OAEA,GAAA,SAAA,GACA,MAAA,MAAA,OAAA,GAAA,EAAA,QAAA,KAAA,GAAA,IAEA,IAAA,SAAA,GACA,GAAA,KACA,IAAA,EAAA,IAAA,EAAA,OAAA,EACA,KAAA,KAAA,SAAA,GACA,EAAA,KAAA,KAAA,IAAA,EAAA,KAAA,YAEA,CACA,GAAA,GAAA,gBAAA,GAAA,KAAA,OAAA,GACA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,KAAA,GAAA,EAAA,EACA,MAAA,QAAA,SAAA,GACA,EAAA,QAAA,GAAA,GAAA,EAAA,KAAA,KAGA,MAAA,GAAA,IAEA,IAAA,SAAA,GACA,MAAA,MAAA,OAAA,WACA,MAAA,GAAA,GACA,EAAA,SAAA,KAAA,GACA,EAAA,MAAA,KAAA,GAAA,UAGA,GAAA,SAAA,GACA,MAAA,KAAA,EAAA,KAAA,MAAA,GAAA,KAAA,MAAA,GAAA,EAAA,IAEA,MAAA,WACA,GAAA,GAAA,KAAA,EACA,OAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAEA,KAAA,WACA,GAAA,GAAA,KAAA,KAAA,OAAA,EACA,OAAA,KAAA,EAAA,GAAA,EAAA,EAAA,IAEA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,IAUA,OARA,GADA,gBAAA,GACA,EAAA,GAAA,OAAA,WACA,GAAA,GAAA,IACA,OAAA,GAAA,KAAA,KAAA,EAAA,SAAA,GACA,MAAA,GAAA,SAAA,EAAA,OAGA,GAAA,KAAA,OAAA,EAAA,EAAA,IAAA,KAAA,GAAA,IACA,KAAA,IAAA,WAAA,MAAA,GAAA,IAAA,KAAA,MAGA,QAAA,SAAA,EAAA,GACA,GAAA,GAAA,KAAA,GAAA,GAAA,CAEA,KADA,gBAAA,KAAA,EAAA,EAAA,IACA,KAAA,EAAA,EAAA,QAAA,IAAA,EAAA,EAAA,QAAA,EAAA,KACA,EAAA,IAAA,IAAA,EAAA,IAAA,EAAA,UACA,OAAA,GAAA,IAEA,QAAA,SAAA,GAEA,IADA,GAAA,MAAA,EAAA,KACA,EAAA,OAAA,GACA,EAAA,EAAA,IAAA,EAAA,SAAA,GACA,OAAA,EAAA,EAAA,cAAA,EAAA,IAAA,EAAA,QAAA,GAAA,GACA,EAAA,KAAA,GACA,GAFA,QAKA,OAAA,GAAA,EAAA,IAEA,OAAA,SAAA,GACA,MAAA,GAAA,EAAA,KAAA,MAAA,eAAA,IAEA,SAAA,SAAA,GACA,MAAA,GAAA,KAAA,IAAA,WAAA,MAAA,GAAA,QAAA,IAEA,SAAA,WACA,MAAA,MAAA,IAAA,WAAA,MAAA,GAAA,KAAA,KAAA,eAEA,SAAA,SAAA,GACA,MAAA,GAAA,KAAA,IAAA,SAAA,EAAA,GACA,MAAA,GAAA,KAAA,EAAA,EAAA,YAAA,SAAA,GAAA,MAAA,KAAA,MACA,IAEA,MAAA,WACA,MAAA,MAAA,KAAA,WAAA,KAAA,UAAA,MAGA,MAAA,SAAA,GACA,MAAA,GAAA,IAAA,KAAA,SAAA,GAAA,MAAA,GAAA,MAEA,KAAA,WACA,MAAA,MAAA,KAAA,WACA,QAAA,KAAA,MAAA,UAAA,KAAA,MAAA,QAAA,MACA,QAAA,EAAA,KAAA,IAAA,iBAAA,aACA,KAAA,MAAA,QAAA,EAAA,KAAA,cAGA,YAAA,SAAA,GACA,MAAA,MAAA,OAAA,GAAA,UAEA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,EACA,IAAA,KAAA,KAAA,EACA,GAAA,GAAA,EAAA,GAAA,IAAA,GACA,EAAA,EAAA,YAAA,KAAA,OAAA,CAEA,OAAA,MAAA,KAAA,SAAA,GACA,EAAA,MAAA,QACA,EAAA,EAAA,KAAA,KAAA,GACA,EAAA,EAAA,WAAA,GAAA,MAIA,QAAA,SAAA,GACA,GAAA,KAAA,GAAA,CACA,EAAA,KAAA,IAAA,OAAA,EAAA,EAAA,GAGA,KAFA,GAAA,IAEA,EAAA,EAAA,YAAA,QAAA,EAAA,EAAA,OACA,GAAA,GAAA,OAAA,MAEA,MAAA,OAEA,UAAA,SAAA,GACA,GAAA,GAAA,EAAA,EACA,OAAA,MAAA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,WACA,EAAA,EAAA,EAAA,KAAA,KAAA,GAAA,CACA,GAAA,OAAA,EAAA,QAAA,GAAA,EAAA,OAAA,MAGA,OAAA,WAIA,MAHA,MAAA,SAAA,KAAA,WACA,EAAA,MAAA,YAAA,EAAA,MAAA,cAEA,MAEA,MAAA,WACA,MAAA,MAAA,IAAA,WAAA,MAAA,MAAA,WAAA,MAEA,KAAA,WACA,MAAA,MAAA,IAAA,UAAA,SAEA,OAAA,SAAA,GACA,MAAA,MAAA,KAAA,WACA,GAAA,GAAA,EAAA,OACA,IAAA,EAAA,QAAA,EAAA,IAAA,WAAA,GAAA,EAAA,OAAA,EAAA,UAGA,KAAA,SAAA,GAAA,MAAA,GAAA,KAAA,MAAA,2BAAA,OAAA,GAAA,MACA,KAAA,SAAA,GAAA,MAAA,GAAA,KAAA,MAAA,uBAAA,OAAA,GAAA,MACA,KAAA,SAAA,GACA,MAAA,KAAA,EACA,KAAA,OAAA,EAAA,KAAA,GAAA,UAAA,KACA,KAAA,KAAA,SAAA,GACA,GAAA,GAAA,KAAA,SACA,GAAA,MAAA,QAAA,OAAA,EAAA,KAAA,EAAA,EAAA,OAGA,KAAA,SAAA,GACA,MAAA,KAAA,EACA,KAAA,OAAA,EAAA,KAAA,GAAA,YAAA,KACA,KAAA,KAAA,WAAA,KAAA,YAAA,KAEA,KAAA,SAAA,EAAA,GACA,GAAA,EACA,OAAA,gBAAA,IAAA,IAAA,EACA,GAAA,KAAA,QAAA,IAAA,KAAA,GAAA,SAAA,EACA,SAAA,GAAA,SAAA,KAAA,GAAA,SAAA,KAAA,QACA,EAAA,KAAA,GAAA,aAAA,KAAA,IAAA,MAAA,GAAA,KAAA,GAAA,GAAA,EAEA,KAAA,KAAA,SAAA,GACA,GAAA,IAAA,KAAA,SACA,GAAA,EAAA,GAAA,IAAA,IAAA,GAAA,EAAA,KAAA,EAAA,EAAA,QACA,GAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,aAAA,QAGA,WAAA,SAAA,GACA,MAAA,MAAA,KAAA,WAAA,IAAA,KAAA,UAAA,EAAA,KAAA,MAEA,KAAA,SAAA,EAAA,GACA,MAAA,KAAA,EACA,KAAA,IAAA,KAAA,GAAA,GACA,KAAA,KAAA,SAAA,GACA,KAAA,GAAA,EAAA,KAAA,EAAA,EAAA,KAAA,OAGA,KAAA,SAAA,EAAA,GACA,GAAA,GAAA,KAAA,KAAA,QAAA,EAAA,GAAA,EACA,OAAA,QAAA,EAAA,EAAA,GAAA,GAEA,IAAA,SAAA,GACA,MAAA,KAAA,EACA,KAAA,KAAA,KAAA,GAAA,SACA,EAAA,KAAA,IAAA,KAAA,UAAA,OAAA,WAAA,MAAA,MAAA,WAAA,MAAA,SACA,KAAA,GAAA,OAEA,KAAA,KAAA,SAAA,GACA,KAAA,MAAA,EAAA,KAAA,EAAA,EAAA,KAAA,UAGA,OAAA,SAAA,GACA,GAAA,EAAA,MAAA,MAAA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,MACA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,UACA,EAAA,EAAA,eAAA,SACA,GACA,IAAA,EAAA,IAAA,EAAA,IACA,KAAA,EAAA,KAAA,EAAA,KAGA,WAAA,EAAA,IAAA,cAAA,EAAA,SAAA,YACA,EAAA,IAAA,IAEA,IAAA,GAAA,KAAA,OAAA,MAAA,KACA,IAAA,GAAA,KAAA,GAAA,uBACA,QACA,KAAA,EAAA,KAAA,OAAA,YACA,IAAA,EAAA,IAAA,OAAA,YACA,MAAA,KAAA,MAAA,EAAA,OACA,OAAA,KAAA,MAAA,EAAA,UAGA,IAAA,SAAA,EAAA,GACA,GAAA,UAAA,OAAA,GAAA,gBAAA,GACA,MAAA,MAAA,KAAA,KAAA,GAAA,MAAA,EAAA,KAAA,EAAA,KAAA,GAAA,IAAA,iBAAA,GAEA,IAAA,GAAA,EACA,IAAA,UAAA,EAAA,GACA,GAAA,IAAA,EAGA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAFA,KAAA,KAAA,WAAA,KAAA,MAAA,eAAA,EAAA,UAIA,KAAA,IAAA,GACA,EAAA,IAAA,IAAA,EAAA,GAGA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IAAA,IAFA,KAAA,KAAA,WAAA,KAAA,MAAA,eAAA,EAAA,KAKA,OAAA,MAAA,KAAA,WAAA,KAAA,MAAA,SAAA,IAAA,KAEA,MAAA,SAAA,GACA,MAAA,GAAA,KAAA,QAAA,EAAA,GAAA,IAAA,KAAA,SAAA,WAAA,QAAA,KAAA,KAEA,SAAA,SAAA,GACA,MAAA,GAAA,KAAA,KAAA,KAAA,SAAA,GACA,MAAA,MAAA,KAAA,EAAA,KACA,EAAA,KAEA,SAAA,SAAA,GACA,MAAA,MAAA,KAAA,SAAA,GACA,IACA,IAAA,GAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EACA;EAAA,MAAA,QAAA,QAAA,SAAA,GACA,EAAA,MAAA,SAAA,IAAA,EAAA,KAAA,IACA,MACA,EAAA,QAAA,EAAA,KAAA,GAAA,EAAA,IAAA,IAAA,EAAA,KAAA,SAGA,YAAA,SAAA,GACA,MAAA,MAAA,KAAA,SAAA,GACA,MAAA,KAAA,EAAA,EAAA,KAAA,KACA,EAAA,EAAA,MACA,EAAA,KAAA,EAAA,EAAA,GAAA,MAAA,QAAA,QAAA,SAAA,GACA,EAAA,EAAA,QAAA,EAAA,GAAA,OAEA,EAAA,KAAA,EAAA,QAJA,WAOA,YAAA,SAAA,EAAA,GACA,MAAA,MAAA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MACA,GAAA,MAAA,QAAA,QAAA,SAAA,IACA,IAAA,GAAA,EAAA,SAAA,GAAA,GACA,EAAA,SAAA,GAAA,EAAA,YAAA,QAIA,UAAA,WACA,MAAA,MAAA,OACA,aAAA,MAAA,GAAA,KAAA,GAAA,UAAA,KAAA,GAAA,QADA,QAGA,SAAA,WACA,GAAA,KAAA,OAAA,CAEA,GAAA,GAAA,KAAA,GAEA,EAAA,KAAA,eAEA,EAAA,KAAA,SACA,EAAA,EAAA,KAAA,EAAA,GAAA,WAAA,IAAA,EAAA,KAAA,GAAA,EAAA,QAaA,OARA,GAAA,KAAA,WAAA,EAAA,GAAA,IAAA,gBAAA,EACA,EAAA,MAAA,WAAA,EAAA,GAAA,IAAA,iBAAA,EAGA,EAAA,KAAA,WAAA,EAAA,EAAA,IAAA,IAAA,sBAAA,EACA,EAAA,MAAA,WAAA,EAAA,EAAA,IAAA,IAAA,uBAAA,GAIA,IAAA,EAAA,IAAA,EAAA,IACA,KAAA,EAAA,KAAA,EAAA,QAGA,aAAA,WACA,MAAA,MAAA,IAAA,WAEA,IADA,GAAA,GAAA,KAAA,cAAA,EAAA,KACA,IAAA,EAAA,KAAA,EAAA,WAAA,UAAA,EAAA,GAAA,IAAA,aACA,EAAA,EAAA,YACA,OAAA,OAMA,EAAA,GAAA,OAAA,EAAA,GAAA,QAGA,QAAA,UAAA,QAAA,SAAA,GACA,EAAA,GAAA,GAAA,SAAA,GACA,GAAA,GAAA,EAAA,KAAA,GACA,EAAA,EAAA,QAAA,IAAA,SAAA,GAAA,MAAA,GAAA,GAAA,eACA,OAAA,KAAA,EAAA,EAAA,GAAA,EAAA,QAAA,GACA,EAAA,GAAA,EAAA,gBAAA,SAAA,IACA,EAAA,KAAA,WAAA,EAAA,GACA,KAAA,KAAA,SAAA,GACA,EAAA,EAAA,MACA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAYA,EAAA,QAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,CAEA,GAAA,GAAA,GAAA,WAEA,GAAA,GAKA,EALA,EAAA,EAAA,IAAA,UAAA,SAAA,GAEA,MADA,GAAA,EAAA,GACA,UAAA,GAAA,SAAA,GAAA,MAAA,EACA,EAAA,EAAA,SAAA,KAEA,EAAA,KAAA,OAAA,CACA,OAAA,GAAA,OAAA,EAAA,KAEA,KAAA,KAAA,SAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,WAGA,EAAA,GAAA,EAAA,EAAA,YACA,GAAA,EAAA,EAAA,WACA,GAAA,EAAA,EACA,KAEA,EAAA,QAAA,SAAA,GACA,GAAA,EAAA,EAAA,EAAA,WAAA,OACA,KAAA,EAAA,MAAA,GAAA,GAAA,QAEA,GAAA,EAAA,aAAA,EAAA,GAAA,SAAA,GACA,MAAA,EAAA,UAAA,WAAA,EAAA,SAAA,eACA,EAAA,MAAA,oBAAA,EAAA,MAAA,EAAA,KACA,OAAA,KAAA,KAAA,OAAA,EAAA,kBAUA,EAAA,GAAA,EAAA,EAAA,KAAA,UAAA,EAAA,SAAA,UAAA,SAAA,GAEA,MADA,GAAA,GAAA,GAAA,MACA,QAIA,EAAA,EAAA,UAAA,EAAA,GAGA,EAAA,KAAA,EACA,EAAA,iBAAA,EACA,EAAA,MAAA,EAEA,IAIA,QAAA,MAAA,EACA,KAAA,UAAA,OAAA,EAAA,GAMA,SAAA,GACA,QAAA,GAAA,GACA,GAAA,GAAA,KAAA,MAAA,EAAA,KAAA,WACA,EAAA,EAAA,MAAA,oBACA,EAAA,EAAA,MAAA,wBACA,EAAA,EAAA,MAAA,wBACA,GAAA,GAAA,EAAA,MAAA,0BACA,EAAA,EAAA,MAAA,+BACA,EAAA,GAAA,EAAA,MAAA,YACA,EAAA,EAAA,MAAA,oBACA,EAAA,EAAA,MAAA,mBACA,EAAA,EAAA,MAAA,mCACA,EAAA,EAAA,MAAA,6BACA,EAAA,EAAA,MAAA,+BACA,EAAA,EAAA,MAAA,YACA,EAAA,EAAA,MAAA,qBAAA,EAAA,MAAA,mBACA,EAAA,EAAA,MAAA,sBAQA,EAAA,SAAA,KAAA,EAAA,QAAA,EAAA,IAEA,IAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,IACA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,GAAA,QAAA,KAAA,MACA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,GAAA,QAAA,KAAA,MACA,IAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,IACA,IAAA,EAAA,UAAA,GACA,IAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,IACA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,IACA,IAAA,EAAA,aAAA,EAAA,EAAA,QAAA,EAAA,IACA,IAAA,EAAA,UAAA,GACA,IAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,IACA,IAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,KACA,GAAA,EAAA,SAAA,EAAA,MAAA,iBAAA,EAAA,MAAA,GACA,IAAA,EAAA,QAAA,EAAA,EAAA,QAAA,EAAA,IACA,IAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,IAEA,EAAA,UAAA,GAAA,GAAA,IAAA,EAAA,MAAA,WAAA,GAAA,EAAA,MAAA,WACA,EAAA,QAAA,EAAA,UAAA,GAAA,GAAA,GAAA,GAAA,GACA,GAAA,EAAA,MAAA,YAAA,GAAA,EAAA,MAAA,oBAAA,GAAA,EAAA,MAAA,YAGA,EAAA,KAAA,EAAA,UAAA,WAEA,EAAA,SAAA,GAEA,GAMA,SAAA,GAMA,QAAA,GAAA,GACA,MAAA,GAAA,OAAA,EAAA,KAAA,KAEA,QAAA,GAAA,EAAA,EAAA,EAAA,GAEA,GADA,EAAA,EAAA,GACA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GACA,QAAA,EAAA,EAAA,SAAA,OAAA,SAAA,GACA,SAAA,GACA,EAAA,GAAA,EAAA,GAAA,EAAA,GACA,EAAA,KAAA,EAAA,KAAA,EAAA,KACA,GAAA,EAAA,EAAA,MAAA,EAAA,IACA,GAAA,EAAA,KAAA,KAGA,QAAA,GAAA,GACA,GAAA,IAAA,GAAA,GAAA,MAAA,IACA,QAAA,EAAA,EAAA,GAAA,GAAA,EAAA,MAAA,GAAA,OAAA,KAAA,MAEA,QAAA,GAAA,GACA,MAAA,IAAA,QAAA,UAAA,EAAA,QAAA,IAAA,SAAA,WAGA,QAAA,GAAA,EAAA,EAAA,GACA,UAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GACA,EAAA,MAAA,MAAA,QAAA,SAAA,GAAA,EAAA,EAAA,KAGA,QAAA,GAAA,EAAA,GACA,MAAA,GAAA,MACA,SAAA,EAAA,GAAA,QAAA,EAAA,MACA,EAGA,QAAA,GAAA,GACA,MAAA,GAAA,IAAA,EAGA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,MACA,GAAA,EAAA,EAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,EACA,GAAA,GAAA,EACA,EAAA,IAAA,EAEA,EAAA,IAAA,KAAA,EAAA,SAAA,GACA,GAAA,GAAA,EAAA,aACA,QAAA,GAAA,IAAA,OAAA,EAAA,SAAA,KAAA,GACA,EAAA,GAAA,MAAA,KAAA,WADA,SAGA,EAAA,IAAA,GAAA,EAAA,EAAA,EACA,IAAA,GAAA,EAAA,KAAA,CACA,GAAA,MAAA,SAAA,GACA,GAAA,GAAA,EAAA,MAAA,GAAA,GAAA,OAAA,EAAA,MAEA,OADA,MAAA,IAAA,EAAA,iBAAA,EAAA,mBACA,GAEA,EAAA,EAAA,EAAA,OACA,EAAA,KAAA,GACA,EAAA,iBAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,MAGA,QAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EACA,GAAA,GAAA,GAAA,EAAA,SAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,QAAA,SAAA,SACA,GAAA,GAAA,EAAA,GACA,EAAA,oBAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,QAiDA,QAAA,GAAA,GACA,GAAA,GAAA,GAAA,cAAA,EACA,KAAA,IAAA,GACA,EAAA,KAAA,IAAA,SAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GASA,OAPA,GAAA,KAAA,EAAA,SAAA,EAAA,GACA,EAAA,GAAA,WAEA,MADA,MAAA,GAAA,EACA,EAAA,GAAA,MAAA,EAAA,YAEA,EAAA,GAAA,IAEA,EAIA,QAAA,GAAA,GACA,KAAA,oBAAA,IAAA,CACA,EAAA,kBAAA,CACA,IAAA,GAAA,EAAA,cACA,GAAA,eAAA,WACA,KAAA,kBAAA,EACA,EAAA,KAAA,QA9IA,GAAA,IAAA,EAAA,MAAA,QAAA,EAAA,EAAA,KACA,GAAA,WAAA,YAAA,WAAA,WAEA,GAAA,MAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,cAyEA,EAAA,OAAA,IAAA,EAAA,OAAA,GAEA,EAAA,MAAA,SAAA,EAAA,GACA,GAAA,EAAA,WAAA,GAAA,CACA,GAAA,GAAA,WAAA,MAAA,GAAA,MAAA,EAAA,WAEA,OADA,GAAA,KAAA,EAAA,GACA,EACA,GAAA,gBAAA,GACA,MAAA,GAAA,MAAA,EAAA,GAAA,EAEA,MAAA,IAAA,WAAA,sBAIA,EAAA,GAAA,KAAA,SAAA,EAAA,GACA,MAAA,MAAA,KAAA,WACA,EAAA,KAAA,EAAA,MAGA,EAAA,GAAA,OAAA,SAAA,EAAA,GACA,MAAA,MAAA,KAAA,WACA,EAAA,KAAA,EAAA,MAGA,EAAA,GAAA,IAAA,SAAA,EAAA,GACA,MAAA,MAAA,KAAA,SAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,KAAA,SAAA,EAAA,GACA,MAAA,YACA,GAAA,GAAA,EAAA,MAAA,EAAA,UAEA,OADA,GAAA,EAAA,EAAA,GACA,OAMA,IAAA,GAAA,WAAA,OAAA,GACA,EAAA,WAAA,OAAA,GACA,EAAA,sBACA,GACA,eAAA,qBACA,yBAAA,gCACA,gBAAA,uBA6BA,GAAA,GAAA,SAAA,SAAA,EAAA,EAAA,GACA,MAAA,MAAA,KAAA,SAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,GACA,MAAA,UAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,QAAA,EAAA,GAAA,IAAA,EACA,OAAA,IACA,EAAA,EAAA,OAAA,EAAA,IAAA,cAAA,EAAA,UAAA,IACA,EAAA,MAAA,GAAA,GAAA,UAAA,MAAA,KAAA,UAAA,MAFA,aAQA,EAAA,GAAA,WAAA,SAAA,EAAA,EAAA,GACA,MAAA,MAAA,KAAA,WACA,EAAA,KAAA,EAAA,EAAA,MAIA,EAAA,GAAA,KAAA,SAAA,EAAA,GAEA,MADA,GAAA,SAAA,MAAA,SAAA,KAAA,SAAA,EAAA,GACA,MAEA,EAAA,GAAA,IAAA,SAAA,EAAA,GAEA,MADA,GAAA,SAAA,MAAA,WAAA,KAAA,SAAA,EAAA,GACA,MAGA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,WAAA,GACA,KAAA,KAAA,EAAA,GAAA,GAAA,KAAA,SAAA,EAAA,EAAA,IAEA,EAAA,GAAA,IAAA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,WAAA,GACA,KAAA,OAAA,EAAA,GAAA,GAAA,KAAA,WAAA,EAAA,EAAA,IAGA,EAAA,GAAA,QAAA,SAAA,EAAA,GAIA,OAHA,gBAAA,IAAA,EAAA,cAAA,MAAA,EAAA,EAAA,MAAA,IACA,EAAA,GACA,EAAA,KAAA,EACA,KAAA,KAAA,WAGA,iBAAA,OAAA,KAAA,cAAA,MAMA,EAAA,GAAA,eAAA,SAAA,EAAA,GACA,GAAA,GAAA,CAUA,OATA,MAAA,KAAA,SAAA,EAAA,GACA,EAAA,EAAA,gBAAA,GAAA,EAAA,MAAA,GAAA,GACA,EAAA,KAAA,EACA,EAAA,OAAA,EACA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GAAA,SAAA,EAAA,GAEA,MADA,GAAA,EAAA,MAAA,GACA,EAAA,iCAAA,EAAA,WAGA,GAIA,4KAEA,MAAA,KAAA,QAAA,SAAA,GACA,EAAA,GAAA,GAAA,SAAA,GACA,MAAA,GACA,KAAA,KAAA,EAAA,GACA,KAAA,QAAA,OAIA,QAAA,QAAA,QAAA,SAAA,GACA,EAAA,GAAA,GAAA,SAAA,GAMA,MALA,GAAA,KAAA,KAAA,EAAA,GACA,KAAA,KAAA,WACA,IAAA,KAAA,KACA,MAAA,OAEA,QAIA,EAAA,MAAA,SAAA,EAAA,GACA,gBAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KACA,IAAA,GAAA,SAAA,YAAA,EAAA,IAAA,UAAA,GAAA,CACA,IAAA,EAAA,IAAA,GAAA,KAAA,GAAA,WAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAGA,OAFA,GAAA,UAAA,EAAA,GAAA,EAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACA,EAAA,mBAAA,WAAA,MAAA,MAAA,kBACA,IAGA,GAMA,SAAA,GAaA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,MAAA,EAEA,OADA,GAAA,GAAA,QAAA,EAAA,IACA,EAAA,iBAIA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,MAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAMA,QAAA,GAAA,GACA,EAAA,QAAA,IAAA,EAAA,UAAA,EAAA,EAAA,KAAA,aAEA,QAAA,GAAA,GACA,EAAA,WAAA,EAAA,QAAA,EAAA,EAAA,KAAA,YAIA,QAAA,GAAA,EAAA,GACA,GAAA,GAAA,EAAA,OACA,OAAA,GAAA,WAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,EAAA,kBAAA,EAAA,OAAA,GACA,GAEA,EAAA,EAAA,EAAA,YAAA,EAAA,IAAA,QAEA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,QAAA,EAAA,SACA,GAAA,QAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,eAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,GAGA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,OACA,GAAA,MAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,aAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,GAGA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,OACA,GAAA,SAAA,KAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,gBAAA,EAAA,IACA,EAAA,GAIA,QAAA,MAgFA,QAAA,GAAA,GAEA,MADA,KAAA,EAAA,EAAA,MAAA,IAAA,GAAA,IACA,IAAA,GAAA,EAAA,OACA,GAAA,EAAA,OACA,EAAA,KAAA,GAAA,SACA,EAAA,KAAA,IAAA,QAAA,OAGA,QAAA,GAAA,EAAA,GACA,OAAA,EAAA,IAAA,GAAA,QAAA,YAAA,KAIA,QAAA,GAAA,GACA,EAAA,aAAA,EAAA,MAAA,UAAA,EAAA,KAAA,EAAA,QACA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,eACA,EAAA,MAAA,EAAA,MAAA,OAAA,EAAA,KAAA,gBACA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,OAmFA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,IAAA,EAAA,WAAA,EACA,QACA,IAAA,EACA,KAAA,EAAA,EAAA,OACA,QAAA,EAAA,EAAA,WAAA,GAAA,EAAA,OAAA,EACA,SAAA,EAAA,GAAA,EAAA,GAsCA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,QAAA,EACA,GAAA,KAAA,EAAA,SAAA,EAAA,GACA,EAAA,EAAA,KAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,MAEA,GAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAEA,SAAA,IAAA,GAAA,UAAA,EACA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,KA1SA,GAEA,GACA,EAHA,EAAA,EACA,EAAA,OAAA,SAGA,EAAA,sDACA,EAAA,qCACA,EAAA,8BACA,EAAA,mBACA,EAAA,YACA,EAAA,OAeA,GAAA,OAAA,EA0CA,EAAA,UAAA,SAAA,GACA,KAAA,QAAA,IAAA,MAAA,GAAA,KAAA,EAEA,IAcA,GAdA,EAAA,WAAA,EACA,EAAA,EAAA,cAAA,UACA,EAAA,WACA,aAAA,GACA,EAAA,GAAA,eACA,QAAA,IAEA,EAAA,SAAA,GACA,IAGA,GAAA,WAAA,IAAA,OAAA,GAAA,GACA,EAAA,KAAA,GAAA,QAAA,EAAA,IAEA,GAAA,MAAA,EAEA,OAAA,GAAA,EAAA,MAAA,GACA,EAAA,UACA,IAGA,OAAA,GAAA,SAAA,GACA,IACA,EAAA,EAAA,EAAA,IAGA,EAAA,QAAA,WAAA,EAAA,UAEA,EAAA,IAAA,EAAA,IAAA,QAAA,MAAA,IAAA,GACA,EAAA,QAAA,OAAA,GAEA,EAAA,QAAA,IAAA,EAAA,WAAA,WACA,EAAA,YACA,EAAA,UAEA,IAGA,EAAA,cAEA,KAAA,MAEA,WAAA,EAEA,QAAA,EAEA,MAAA,EAEA,SAAA,EAEA,QAAA,KAEA,QAAA,EAEA,IAAA,WACA,MAAA,IAAA,QAAA,gBAGA,SACA,OAAA,0CACA,KAAA,EACA,IAAA,4BACA,KAAA,EACA,KAAA,cAGA,aAAA,EAEA,QAAA,EAEA,aAAA,EAEA,OAAA,GAuBA,EAAA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,UAAA,MACA,KAAA,IAAA,GAAA,aAAA,SAAA,EAAA,KAAA,EAAA,GAAA,EAAA,aAAA,GAEA,GAAA,GAEA,EAAA,cAAA,EAAA,YAAA,0BAAA,KAAA,EAAA,MACA,OAAA,IAAA,OAAA,SAAA,MAEA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,YACA,EAAA,GACA,EAAA,SAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,KAAA,KAAA,OAEA,IAAA,GAAA,EAAA,SAAA,EAAA,MAAA,KAAA,EAAA,IACA,IAAA,SAAA,GAAA,EAEA,MADA,KAAA,EAAA,IAAA,EAAA,EAAA,IAAA,eACA,EAAA,UAAA,EAGA,IAGA,GAHA,EAAA,EAAA,QAAA,GACA,KACA,EAAA,iBAAA,KAAA,EAAA,KAAA,OAAA,GAAA,OAAA,SAAA,SACA,EAAA,EAAA,KAEA,GAAA,cAAA,EAAA,oBAAA,kBACA,IACA,EAAA,OAAA,EACA,EAAA,QAAA,KAAA,KAAA,EAAA,EAAA,MAAA,IAAA,GAAA,IACA,EAAA,kBAAA,EAAA,iBAAA,KAEA,EAAA,aAAA,EAAA,eAAA,GAAA,EAAA,MAAA,OAAA,EAAA,KAAA,iBACA,EAAA,gBAAA,EAAA,aAAA,qCACA,EAAA,QAAA,EAAA,OAAA,EAAA,EAAA,aAEA,EAAA,mBAAA,WACA,GAAA,GAAA,EAAA,WAAA,CACA,EAAA,mBAAA,EACA,aAAA,EACA,IAAA,GAAA,GAAA,CACA,IAAA,EAAA,QAAA,KAAA,EAAA,OAAA,KAAA,KAAA,EAAA,QAAA,GAAA,EAAA,QAAA,SAAA,EAAA,CACA,EAAA,GAAA,EAAA,EAAA,kBAAA,iBACA,EAAA,EAAA,YAEA,KAEA,UAAA,GAAA,EAAA,MAAA,GACA,OAAA,EAAA,EAAA,EAAA,YACA,QAAA,IAAA,EAAA,EAAA,KAAA,GAAA,KAAA,EAAA,UAAA,IACA,MAAA,GAAA,EAAA,EAEA,EAAA,EAAA,EAAA,cAAA,EAAA,GACA,EAAA,EAAA,EAAA,OAEA,GAAA,KAAA,EAAA,OAAA,QAAA,QAAA,EAAA,IAKA,IAAA,GAAA,SAAA,GAAA,EAAA,OAAA,CACA,GAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAEA,KAAA,IAAA,GAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,QAAA,GAEA,OAAA,GAAA,EAAA,MAAA,GACA,EAAA,SACA,IAGA,EAAA,QAAA,IAAA,EAAA,WAAA,WACA,EAAA,mBAAA,EACA,EAAA,QACA,EAAA,KAAA,UAAA,EAAA,IACA,EAAA,UAGA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,MACA,IAcA,EAAA,IAAA,WACA,MAAA,GAAA,KAAA,EAAA,MAAA,KAAA,aAGA,EAAA,KAAA,WACA,GAAA,GAAA,EAAA,MAAA,KAAA,UAEA,OADA,GAAA,KAAA,OACA,EAAA,KAAA,IAGA,EAAA,QAAA,WACA,GAAA,GAAA,EAAA,MAAA,KAAA,UAEA,OADA,GAAA,SAAA,OACA,EAAA,KAAA,IAGA,EAAA,GAAA,KAAA,SAAA,EAAA,EAAA,GACA,IAAA,KAAA,OAAA,MAAA,KACA,IAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,MACA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,OASA,OARA,GAAA,OAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,IACA,EAAA,QAAA,SAAA,GACA,EAAA,KAAA,EACA,EAAA,SAAA,KAAA,EAAA,QAAA,EAAA,KAAA,KAAA,GACA,GACA,GAAA,EAAA,MAAA,EAAA,YAEA,EAAA,KAAA,GACA,KAGA,IAAA,GAAA,kBAgBA,GAAA,MAAA,SAAA,EAAA,GACA,GAAA,KAGA,OAFA,GAAA,IAAA,SAAA,EAAA,GAAA,KAAA,KAAA,EAAA,GAAA,IAAA,EAAA,KACA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,KAAA,QAAA,OAAA,OAEA,GAMA,SAAA,GACA,EAAA,GAAA,eAAA,WACA,GAAA,GAAA,IAYA,OAXA,GAAA,MAAA,UAAA,MAAA,KAAA,KAAA,IAAA,GAAA,WAAA,KAAA,WACA,EAAA,EAAA,KACA,IAAA,GAAA,EAAA,KAAA,OACA,aAAA,KAAA,SAAA,gBACA,KAAA,UAAA,UAAA,GAAA,SAAA,GAAA,UAAA,IACA,SAAA,GAAA,YAAA,GAAA,KAAA,UACA,EAAA,MACA,KAAA,EAAA,KAAA,QACA,MAAA,EAAA,UAGA,GAGA,EAAA,GAAA,UAAA,WACA,GAAA,KAIA,OAHA,MAAA,iBAAA,QAAA,SAAA,GACA,EAAA,KAAA,mBAAA,EAAA,MAAA,IAAA,mBAAA,EAAA,UAEA,EAAA,KAAA,MAGA,EAAA,GAAA,OAAA,SAAA,GACA,GAAA,EAAA,KAAA,KAAA,SAAA,OACA,IAAA,KAAA,OAAA,CACA,GAAA,GAAA,EAAA,MAAA,SACA,MAAA,GAAA,GAAA,QAAA,GACA,EAAA,kBAAA,KAAA,IAAA,GAAA,SAEA,MAAA,QAGA,GAMA,SAAA,EAAA,GAUA,QAAA,GAAA,GAAA,MAAA,GAAA,EAAA,QAAA,iBAAA,UACA,QAAA,GAAA,GAAA,MAAA,GAAA,cACA,QAAA,GAAA,GAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAXA,GAAA,GAIA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,EANA,EAAA,GACA,GAAA,OAAA,SAAA,IAAA,GAAA,EAAA,IAAA,GAAA,MACA,EAAA,OAAA,SAAA,EAAA,EAAA,cAAA,OACA,EAAA,8EAIA,IAMA,GAAA,KAAA,EAAA,SAAA,EAAA,GACA,MAAA,GAAA,MAAA,EAAA,wBAAA,GACA,EAAA,IAAA,EAAA,GAAA,IACA,EAAA,GACA,GAHA,SAOA,EAAA,EAAA,YACA,EAAA,EAAA,EAAA,uBACA,EAAA,EAAA,EAAA,uBACA,EAAA,EAAA,EAAA,8BACA,EAAA,EAAA,EAAA,kBACA,EAAA,EAAA,EAAA,sBACA,EAAA,EAAA,EAAA,6BAAA,GAEA,EAAA,IACA,IAAA,IAAA,GAAA,EAAA,MAAA,qBAAA,EACA,QAAA,SAAA,IAAA,KAAA,IAAA,KAAA,KACA,UAAA,EACA,cAAA,EAAA,iBACA,aAAA,EAAA,iBAGA,EAAA,GAAA,QAAA,SAAA,EAAA,EAAA,EAAA,GAKA,MAJA,GAAA,cAAA,KACA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UACA,IAAA,GAAA,gBAAA,GAAA,EACA,EAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,UAAA,KACA,KAAA,KAAA,EAAA,EAAA,EAAA,IAGA,EAAA,GAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EACA,EADA,KAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,GAAA,aAKA,IAHA,IAAA,IAAA,EAAA,IACA,EAAA,GAAA,MAAA,EAAA,GAEA,gBAAA,GAEA,EAAA,GAAA,EACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAAA,SACA,EAAA,EAAA,GAAA,iBACA,CACA,IAEA,KAAA,IAAA,GACA,EAAA,KAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,MACA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAEA,KAAA,EAAA,GAAA,EAAA,EAAA,KAAA,IACA,EAAA,GAAA,gBAAA,KACA,EAAA,GAAA,EAAA,KAAA,MACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAAA,UAuBA,MAnBA,GAAA,SAAA,GACA,GAAA,mBAAA,GAAA,CACA,GAAA,EAAA,SAAA,EAAA,cAAA,MACA,GAAA,EAAA,QAAA,OAAA,EAAA,GAEA,EAAA,MAAA,IAAA,GACA,GAAA,EAAA,KAAA,OAEA,EAAA,GAAA,KAAA,KAAA,EAAA,GAGA,KAAA,QAAA,KAAA,IAAA,GAAA,WAEA,KAAA,IAAA,GAEA,GAAA,GAAA,WAAA,WACA,EAAA,KAAA,WAAA,EAAA,KAAA,SACA,GAEA,MAGA,EAAA,MACA,GAEA,EAAA,SAAA,SAAA,GACA,MAAA,YACA,GAAA,EACA,OAAA,IAAA,EAAA,IC3jDA,OAUA,SAAA,EAAA,GAEA,mBAAA,SAEA,EAAA,EAAA,QAAA,EAAA,eACA,kBAAA,IAAA,EAAA,IAEA,EAAA,YAAA,aAAA,SAAA,WAAA,SAAA,EAAA,EAAA,GAGA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,KAIA,EAAA,SAAA,EAAA,KAAA,EAAA,EAAA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,EAAA,IAEA,KAAA,SAAA,EAAA,EAAA,EAAA,GAOA,GAAA,GAAA,EAAA,SAGA,IACA,GAAA,IACA,IAAA,GAAA,EAAA,KACA,GAAA,OAGA,EAAA,QAAA,QAGA,EAAA,EAAA,EAIA,EAAA,WAAA,WAEA,MADA,GAAA,SAAA,EACA,MAMA,EAAA,aAAA,EAMA,EAAA,aAAA,CAeA,IAAA,GAAA,EAAA,QAIA,GAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,KAAA,GAAA,EAAA,MAAA,EAAA,MAAA,KACA,MAAA,UAAA,KAAA,WACA,IAAA,GAAA,KAAA,QAAA,KAAA,KAAA,QAAA,MAEA,OADA,GAAA,MAAA,SAAA,EAAA,QAAA,EAAA,IAAA,GAAA,OACA,MAKA,KAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,OAAA,GAAA,EAAA,MAAA,EAAA,MAAA,KACA,IAAA,GAAA,KACA,EAAA,EAAA,KAAA,WACA,EAAA,IAAA,EAAA,GACA,EAAA,MAAA,KAAA,YAGA,OADA,GAAA,UAAA,EACA,KAAA,GAAA,EAAA,EAAA,IAOA,IAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CACA,KAAA,KAAA,UAAA,EAAA,KAAA,MAAA,GAAA,EAAA,IAAA,MAAA,KACA,KAAA,IAAA,IAAA,EAEA,MADA,MAAA,WACA,IAGA,KADA,EAAA,GAAA,GAAA,EAAA,KAAA,KAAA,SACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAEA,GADA,EAAA,EAAA,GACA,EAAA,KAAA,QAAA,GAAA,CAEA,GADA,KAAA,QAAA,GAAA,KACA,GAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,EAAA,IACA,GAAA,IAAA,EAAA,UAAA,IAAA,EAAA,SAAA,WACA,GAAA,IAAA,EAAA,UACA,EAAA,KAAA,EAIA,GAAA,cAAA,MAAA,QAAA,GAIA,MAAA,OAOA,QAAA,SAAA,GACA,IAAA,KAAA,QAAA,MAAA,KACA,IAAA,GAAA,EAAA,KAAA,UAAA,EACA,KAAA,EAAA,KAAA,UAAA,EAAA,GAAA,MAAA,KACA,IAAA,GAAA,KAAA,QAAA,GACA,EAAA,KAAA,QAAA,GAGA,OAFA,IAAA,EAAA,EAAA,GACA,GAAA,EAAA,EAAA,WACA,MAKA,cAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,KAAA,YACA,KAAA,EAAA,MAAA,KACA,IAAA,IAAA,IAAA,CACA,IAAA,gBAAA,KAAA,EAAA,MACA,KAAA,MAAA,EAAA,WAAA,EACA,KAAA,GAAA,KAAA,GACA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,EAAA,OACA,GAAA,EAAA,QAAA,EAAA,iBAAA,MAAA,aAAA,EAEA,OAAA,QAMA,EAAA,MAKA,EAAA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,OAAA,CAGA,IAAA,gBAAA,GAAA,CACA,IAAA,GAAA,KAAA,GACA,EAAA,GAAA,MAAA,GAAA,EAAA,EAAA,IAAA,OAAA,GAEA,QAAA,EAIA,GAAA,EAAA,KAAA,GAAA,CAEA,IAAA,GADA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,MAAA,GAAA,EAAA,IAAA,OAAA,GAEA,QAAA,EAGA,OAAA,GAMA,EAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EACA,QAAA,EAAA,QACA,IAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,SAAA,KAAA,EAAA,IAAA,OACA,KAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,SAAA,KAAA,EAAA,IAAA,EAAA,OACA,KAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,SAAA,KAAA,EAAA,IAAA,EAAA,EAAA,OACA,KAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,SAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OACA,SAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,SAAA,MAAA,EAAA,IAAA,KAIA,GAAA,SAAA,KAAA,aAAA,OAKA,GAAA,KAAA,EAAA,SAAA,EAAA,GACA,EAAA,GAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,KAAA,eAAA,KAAA,iBACA,EAAA,EAAA,YAAA,EAAA,UAAA,EAAA,SAAA,KAIA,OAHA,GAAA,GAAA,EACA,GAAA,gBAAA,KAAA,EAAA,MACA,EAAA,GAAA,EAAA,EAAA,MACA,QAKA,EAAA,KAAA,EAAA,GACA,EAAA,OAAA,EAAA,IAIA,EAAA,OAAA,EAAA,EAYA,IAAA,GAAA,EAAA,MAAA,SAAA,EAAA,GACA,GAAA,GAAA,KACA,KAAA,MACA,KAAA,IAAA,EAAA,SAAA,KACA,KAAA,cACA,EAAA,aAAA,KAAA,WAAA,EAAA,YACA,EAAA,QAAA,EAAA,KAAA,MAAA,EAAA,QACA,EAAA,EAAA,YAAA,EAAA,EAAA,OAAA,KAAA,aACA,KAAA,IAAA,EAAA,GACA,KAAA,WACA,KAAA,WAAA,MAAA,KAAA,WAIA,GAAA,OAAA,EAAA,UAAA,GAGA,QAAA,KAGA,gBAAA,KAIA,YAAA,KAIA,WAAA,aAGA,OAAA,WACA,MAAA,GAAA,MAAA,KAAA,aAKA,KAAA,WACA,MAAA,GAAA,KAAA,MAAA,KAAA,YAIA,IAAA,SAAA,GACA,MAAA,MAAA,WAAA,IAIA,OAAA,SAAA,GACA,MAAA,GAAA,OAAA,KAAA,IAAA,KAKA,IAAA,SAAA,GACA,MAAA,OAAA,KAAA,IAAA,IAMA,IAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CACA,IAAA,MAAA,EAAA,MAAA,KAaA,IAVA,gBAAA,IACA,EAAA,EACA,EAAA,IAEA,MAAA,GAAA,EAGA,IAAA,OAGA,KAAA,UAAA,EAAA,GAAA,OAAA,CAGA,GAAA,EAAA,MACA,EAAA,EAAA,OACA,KACA,EAAA,KAAA,UACA,KAAA,WAAA,EAEA,IACA,KAAA,oBAAA,EAAA,MAAA,KAAA,YACA,KAAA,YAEA,EAAA,KAAA,WAAA,EAAA,KAAA,oBAGA,KAAA,cAAA,KAAA,KAAA,GAAA,EAAA,KAAA,aAGA,KAAA,IAAA,GACA,EAAA,EAAA,GACA,EAAA,QAAA,EAAA,GAAA,IAAA,EAAA,KAAA,GACA,EAAA,QAAA,EAAA,GAAA,SAGA,MAAA,QAAA,GAFA,KAAA,QAAA,GAAA,EAIA,QAAA,GAAA,GAAA,EAAA,GAAA,CAIA,KAAA,EAAA,CACA,EAAA,SAAA,KAAA,UAAA,EACA,KAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,KAAA,QAAA,UAAA,EAAA,GAAA,KAAA,EAAA,EAAA,IAAA,GAMA,GAAA,EAAA,MAAA,KACA,KAAA,EACA,KAAA,KAAA,UACA,KAAA,UAAA,EACA,KAAA,QAAA,SAAA,KAAA,EAKA,OAFA,MAAA,UAAA,EACA,KAAA,WAAA,EACA,MAKA,MAAA,SAAA,EAAA,GACA,MAAA,MAAA,IAAA,EAAA,OAAA,EAAA,UAAA,GAAA,OAAA,MAIA,MAAA,SAAA,GACA,GAAA,KACA,KAAA,GAAA,KAAA,MAAA,WAAA,EAAA,GAAA,MACA,OAAA,MAAA,IAAA,EAAA,EAAA,UAAA,GAAA,OAAA,MAKA,WAAA,SAAA,GACA,MAAA,OAAA,GAAA,EAAA,QAAA,KAAA,SACA,EAAA,IAAA,KAAA,QAAA,IASA,kBAAA,SAAA,GACA,IAAA,EAAA,MAAA,MAAA,aAAA,EAAA,MAAA,KAAA,UAAA,CACA,IAAA,GAAA,GAAA,EACA,EAAA,KAAA,UAAA,KAAA,oBAAA,KAAA,UACA,KAAA,GAAA,KAAA,GACA,EAAA,QAAA,EAAA,GAAA,EAAA,EAAA,OACA,IAAA,OAAA,GAAA,EAEA,OAAA,IAKA,SAAA,SAAA,GACA,MAAA,OAAA,GAAA,KAAA,oBACA,KAAA,oBAAA,GADA,MAMA,mBAAA,WACA,MAAA,GAAA,MAAA,KAAA,sBAMA,MAAA,SAAA,GACA,EAAA,EAAA,EAAA,MAAA,MACA,SAAA,EAAA,QAAA,EAAA,OAAA,EACA,IAAA,GAAA,KACA,EAAA,EAAA,OAOA,OANA,GAAA,QAAA,SAAA,GACA,MAAA,GAAA,IAAA,EAAA,MAAA,EAAA,GAAA,IACA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,QAAA,OAAA,EAAA,EAAA,GADA,SADA,GAIA,EAAA,KAAA,GACA,KAAA,KAAA,OAAA,KAAA,IAMA,KAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,UAeA,IAZA,MAAA,GAAA,gBAAA,IACA,EAAA,EACA,EAAA,IAEA,MAAA,GAAA,EAGA,EAAA,EAAA,QAAA,UAAA,GAAA,GAKA,IAAA,EAAA,MACA,IAAA,KAAA,IAAA,EAAA,GAAA,OAAA,MAEA,KAAA,KAAA,UAAA,EAAA,GAAA,OAAA,CAIA,IAAA,EAAA,OACA,KAAA,WAAA,EAAA,UAAA,EAAA,IAKA,SAAA,EAAA,QAAA,EAAA,OAAA,EACA,IAAA,GAAA,KACA,EAAA,EAAA,OAqBA,OApBA,GAAA,QAAA,SAAA,GAEA,EAAA,WAAA,CACA,IAAA,GAAA,EAAA,MAAA,EAAA,EAEA,OADA,GAAA,OAAA,EAAA,EAAA,OAAA,MAAA,IACA,EAAA,SAAA,KAAA,EAAA,IAAA,EAAA,IACA,GAEA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,QAAA,OAAA,EAAA,EAAA,GADA,SAGA,EAAA,KAAA,GAEA,EAAA,KAAA,QAAA,SAAA,EAAA,MAAA,QAAA,SACA,UAAA,IAAA,EAAA,MAAA,GACA,EAAA,KAAA,KAAA,EAAA,KAAA,GAGA,GAAA,EAAA,OAAA,KAAA,WAAA,GAEA,GAMA,QAAA,SAAA,GACA,EAAA,EAAA,EAAA,MAAA,KACA,IAAA,GAAA,KACA,EAAA,EAAA,QAEA,EAAA,WACA,EAAA,QAAA,UAAA,EAAA,EAAA,WAAA,GASA,IANA,EAAA,QAAA,SAAA,IACA,EAAA,MAAA,EAAA,UAAA,IACA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,SAAA,EAAA,QAAA,OAAA,EAAA,EAAA,IAGA,KAAA,QAEA,MADA,GAAA,WACA,CAEA,GAAA,KAAA,EAEA,IAAA,GAAA,KAAA,KAAA,SAAA,KAAA,EAEA,OADA,GAAA,MAAA,IACA,GAMA,IAAA,WACA,GAAA,GAAA,EAAA,OAAA,KAAA,YAAA,EAAA,OAAA,KAAA,WAAA,QAAA,GACA,OAAA,MAAA,QAAA,EACA,GAAA,MAAA,EAAA,OAAA,EAAA,OAAA,GAAA,GAAA,KAAA,mBAAA,KAAA,KAKA,MAAA,SAAA,GACA,MAAA,IAIA,MAAA,WACA,MAAA,IAAA,MAAA,YAAA,KAAA,aAIA,MAAA,WACA,MAAA,OAAA,KAAA,IAIA,QAAA,SAAA,GACA,MAAA,MAAA,aAAA,EAAA,OAAA,OAAA,UAAA,MAKA,UAAA,SAAA,EAAA,GACA,IAAA,EAAA,WAAA,KAAA,SAAA,OAAA,CACA,GAAA,EAAA,UAAA,KAAA,WAAA,EACA,IAAA,GAAA,KAAA,gBAAA,KAAA,SAAA,EAAA,IAAA,IACA,OAAA,IACA,KAAA,QAAA,UAAA,KAAA,EAAA,EAAA,OAAA,GAAA,gBAAA,MACA,IAFA,IAQA,IAAA,IAAA,OAAA,SAAA,QAAA,SAAA,OAAA,OAGA,GAAA,KAAA,EAAA,SAAA,GACA,EAAA,UAAA,GAAA,WACA,GAAA,GAAA,EAAA,KAAA,UAEA,OADA,GAAA,QAAA,KAAA,YACA,EAAA,GAAA,MAAA,EAAA,KAiBA,IAAA,GAAA,EAAA,WAAA,SAAA,EAAA,GACA,IAAA,MACA,EAAA,QAAA,KAAA,MAAA,EAAA,OACA,SAAA,EAAA,aAAA,KAAA,WAAA,EAAA,YACA,KAAA,SACA,KAAA,WAAA,MAAA,KAAA,WACA,GAAA,KAAA,MAAA,EAAA,EAAA,QAAA,QAAA,GAAA,KAIA,GAAA,KAAA,EAAA,QAAA,EAAA,OAAA,GACA,GAAA,KAAA,EAAA,QAAA,EAGA,GAAA,OAAA,EAAA,UAAA,GAIA,MAAA,EAIA,WAAA,aAIA,OAAA,SAAA,GACA,MAAA,MAAA,IAAA,SAAA,GAAA,MAAA,GAAA,OAAA,MAIA,KAAA,WACA,MAAA,GAAA,KAAA,MAAA,KAAA,YAIA,IAAA,SAAA,EAAA,GACA,MAAA,MAAA,IAAA,EAAA,EAAA,QAAA,OAAA,GAAA,EAAA,KAIA,OAAA,SAAA,EAAA,GACA,GAAA,IAAA,EAAA,QAAA,EACA,GAAA,GAAA,GAAA,EAAA,MAAA,GACA,IAAA,KACA,IAAA,GAAA,EAAA,EAAA,CACA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,IACA,UACA,MAAA,MAAA,EAAA,UACA,MAAA,MAAA,EAAA,KACA,EAAA,KAAA,QAAA,GACA,KAAA,OAAA,OAAA,EAAA,GACA,KAAA,SACA,EAAA,SACA,EAAA,MAAA,EACA,EAAA,QAAA,SAAA,EAAA,KAAA,IAEA,KAAA,iBAAA,GAEA,OAAA,GAAA,EAAA,GAAA,GAOA,IAAA,SAAA,EAAA,GACA,EAAA,EAAA,YAAA,EAAA,GACA,EAAA,QAAA,EAAA,KAAA,MAAA,EAAA,GACA,IAAA,IAAA,EAAA,QAAA,EACA,GAAA,EAAA,GAAA,MAAA,EAAA,MAAA,EACA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GACA,EAAA,KAAA,MACA,EAAA,KAAA,YAAA,MAAA,GAAA,EAAA,QAAA,EACA,EAAA,EAAA,SAAA,KAAA,YAAA,KAAA,WAAA,KACA,KAAA,KAAA,KACA,EAAA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,OACA,GAAA,GAAA,GAAA,MAAA,CAIA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAUA,GATA,EAAA,EAAA,GAEA,EADA,YAAA,GACA,EAAA,EAEA,EAAA,EAAA,UAAA,aAKA,EAAA,KAAA,IAAA,GACA,IAAA,EAAA,EAAA,MAAA,GACA,IACA,EAAA,IAAA,EAAA,EAAA,WAAA,EACA,EAAA,QAAA,EAAA,EAAA,MAAA,EAAA,IACA,EAAA,IAAA,EAAA,GACA,IAAA,GAAA,EAAA,WAAA,KAAA,GAAA,IAEA,EAAA,GAAA,MAGA,IAAA,EAAA,CAEA,GADA,EAAA,EAAA,GAAA,KAAA,cAAA,EAAA,IACA,EAAA,QACA,GAAA,KAAA,GAIA,EAAA,GAAA,MAAA,KAAA,cAAA,MACA,KAAA,MAAA,EAAA,KAAA,EACA,MAAA,EAAA,KAAA,KAAA,MAAA,EAAA,IAAA,GAEA,GAAA,EAAA,KAAA,GAAA,GAIA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,EAAA,KAAA,OAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,OAAA,IAAA,MAAA,EAAA,KAAA,EAEA,GAAA,QAAA,KAAA,OAAA,EAAA,GAIA,GAAA,EAAA,QAAA,GAAA,EAAA,OAGA,GAFA,IAAA,GAAA,GACA,KAAA,QAAA,EAAA,OACA,MAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,KAAA,OAAA,OAAA,EAAA,EAAA,EAAA,EAAA,QAEA,CACA,IAAA,KAAA,OAAA,OAAA,EACA,IAAA,GAAA,GAAA,CACA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,KAAA,OAAA,KAAA,EAAA,IASA,GAHA,GAAA,KAAA,MAAA,QAAA,KAGA,EAAA,OAAA,CACA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KACA,EAAA,EAAA,IAAA,QAAA,MAAA,EAAA,KAAA,IAEA,GAAA,GAAA,EAAA,SAAA,KAAA,QAAA,OAAA,KAAA,GAIA,MAAA,GAAA,EAAA,GAAA,GAOA,MAAA,SAAA,EAAA,GACA,IAAA,KACA,KAAA,GAAA,GAAA,EAAA,EAAA,KAAA,OAAA,OAAA,EAAA,EAAA,IACA,KAAA,iBAAA,KAAA,OAAA,GAMA,OAJA,GAAA,eAAA,KAAA,OACA,KAAA,SACA,EAAA,KAAA,IAAA,EAAA,EAAA,QAAA,QAAA,GAAA,IACA,EAAA,QAAA,KAAA,QAAA,QAAA,KAAA,GACA,GAIA,KAAA,SAAA,EAAA,GACA,MAAA,MAAA,IAAA,EAAA,EAAA,QAAA,GAAA,KAAA,QAAA,KAIA,IAAA,SAAA,GACA,GAAA,GAAA,KAAA,GAAA,KAAA,OAAA,EAEA,OADA,MAAA,OAAA,EAAA,GACA,GAIA,QAAA,SAAA,EAAA,GACA,MAAA,MAAA,IAAA,EAAA,EAAA,QAAA,GAAA,GAAA,KAIA,MAAA,SAAA,GACA,GAAA,GAAA,KAAA,GAAA,EAEA,OADA,MAAA,OAAA,EAAA,GACA,GAIA,MAAA,WACA,MAAA,GAAA,MAAA,KAAA,OAAA,YAIA,IAAA,SAAA,GACA,MAAA,OAAA,EAAA,OACA,KAAA,MAAA,EAAA,KAAA,KAAA,MAAA,EAAA,MAAA,KAAA,MAAA,IAIA,GAAA,SAAA,GACA,MAAA,MAAA,OAAA,IAKA,MAAA,SAAA,EAAA,GACA,MAAA,GAAA,QAAA,GAAA,EAAA,UACA,KAAA,EAAA,OAAA,UAAA,SAAA,GACA,IAAA,GAAA,KAAA,GACA,GAAA,EAAA,KAAA,EAAA,IAAA,GAAA,OAAA,CAEA,QAAA,KAMA,UAAA,SAAA,GACA,MAAA,MAAA,MAAA,GAAA,IAMA,KAAA,SAAA,GACA,IAAA,KAAA,WAAA,KAAA,IAAA,OAAA,yCAWA,OAVA,KAAA,MAGA,EAAA,SAAA,KAAA,aAAA,IAAA,KAAA,WAAA,OACA,KAAA,OAAA,KAAA,OAAA,KAAA,WAAA,MAEA,KAAA,OAAA,KAAA,EAAA,KAAA,KAAA,WAAA,OAGA,EAAA,QAAA,KAAA,QAAA,OAAA,KAAA,GACA,MAIA,MAAA,SAAA,GACA,MAAA,GAAA,OAAA,KAAA,OAAA,MAAA,IAMA,MAAA,SAAA,GACA,EAAA,EAAA,EAAA,MAAA,MACA,SAAA,EAAA,QAAA,EAAA,OAAA,EACA,IAAA,GAAA,EAAA,QACA,EAAA,IAQA,OAPA,GAAA,QAAA,SAAA,GACA,GAAA,GAAA,EAAA,MAAA,QAAA,KACA,GAAA,GAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,QAAA,OAAA,EAAA,EAAA,IAEA,EAAA,KAAA,GACA,KAAA,KAAA,OAAA,KAAA,IAMA,OAAA,SAAA,EAAA,GAEA,GADA,EAAA,EAAA,EAAA,MAAA,QACA,EAAA,KAAA,cAAA,EAAA,IAAA,OAAA,CACA,GAAA,MAAA,KAAA,IAAA,EAAA,EACA,IAAA,GAAA,KACA,EAAA,EAAA,OAMA,OALA,GAAA,QAAA,SAAA,EAAA,EAAA,GACA,EAAA,MAAA,EAAA,IAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,IAEA,EAAA,KAAA,KAAA,GACA,GAKA,MAAA,SAAA,GACA,MAAA,IAIA,MAAA,WACA,MAAA,IAAA,MAAA,YAAA,KAAA,SAKA,OAAA,WACA,KAAA,OAAA,EACA,KAAA,UACA,KAAA,UAKA,cAAA,SAAA,EAAA,GACA,GAAA,YAAA,GAEA,MADA,GAAA,aAAA,EAAA,WAAA,MACA,CAEA,GAAA,EAAA,EAAA,MAAA,MACA,EAAA,WAAA,IACA,IAAA,GAAA,GAAA,MAAA,MAAA,EAAA,EACA,OAAA,GAAA,iBACA,KAAA,QAAA,UAAA,KAAA,EAAA,gBAAA,IACA,GAFA,GAMA,iBAAA,SAAA,GACA,OAAA,EAAA,kBAAA,GAAA,WACA,EAAA,IAAA,MAAA,KAAA,cAAA,OAOA,cAAA,SAAA,EAAA,EAAA,EAAA,IACA,QAAA,GAAA,WAAA,GAAA,IAAA,QACA,YAAA,GAAA,KAAA,OAAA,EAAA,GACA,GAAA,IAAA,UAAA,EAAA,oBACA,MAAA,MAAA,EAAA,SAAA,EAAA,cACA,MAAA,EAAA,KAAA,KAAA,MAAA,EAAA,IAAA,IAEA,KAAA,QAAA,MAAA,KAAA,cAQA,IAAA,IAAA,UAAA,OAAA,MAAA,UAAA,SAAA,QACA,SAAA,cAAA,QAAA,OAAA,SAAA,SAAA,SACA,SAAA,QAAA,MAAA,OAAA,MAAA,UAAA,WAAA,SACA,MAAA,MAAA,UAAA,OAAA,QAAA,OAAA,OAAA,UAAA,OACA,OAAA,OAAA,OAAA,UAAA,aAAA,UAAA,UACA,cAAA,UAAA,QAGA,GAAA,KAAA,EAAA,SAAA,GACA,EAAA,UAAA,GAAA,WACA,GAAA,GAAA,EAAA,KAAA,UAEA,OADA,GAAA,QAAA,KAAA,QACA,EAAA,GAAA,MAAA,EAAA,KAKA,IAAA,IAAA,UAAA,UAAA,SAGA,GAAA,KAAA,EAAA,SAAA,GACA,EAAA,UAAA,GAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,WAAA,GAAA,EAAA,SAAA,GACA,MAAA,GAAA,IAAA,GAEA,OAAA,GAAA,GAAA,KAAA,OAAA,EAAA,KAiBA,IAAA,GAAA,EAAA,KAAA,SAAA,GACA,KAAA,IAAA,EAAA,SAAA,QACA,IAAA,MACA,EAAA,OAAA,KAAA,EAAA,KAAA,EAAA,IACA,KAAA,iBACA,KAAA,WAAA,MAAA,KAAA,WACA,KAAA,kBAIA,EAAA,iBAGA,GAAA,QAAA,aAAA,KAAA,KAAA,aAAA,YAAA,UAAA,SAGA,GAAA,OAAA,EAAA,UAAA,GAGA,QAAA,MAIA,EAAA,SAAA,GACA,MAAA,MAAA,IAAA,KAAA,IAKA,WAAA,aAKA,OAAA,WACA,MAAA,OAKA,OAAA,WAGA,MAFA,MAAA,IAAA,SACA,KAAA,gBACA,MAKA,WAAA,SAAA,EAAA,GAKA,MAJA,MAAA,KAAA,KAAA,mBACA,KAAA,IAAA,YAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,GAAA,KAAA,IAAA,GACA,KAAA,GAAA,KAAA,iBACA,MAkBA,eAAA,SAAA,GACA,IAAA,KAAA,EAAA,EAAA,OAAA,KAAA,WAAA,MAAA,KACA,MAAA,kBACA,KAAA,GAAA,KAAA,GAAA,CACA,GAAA,GAAA,EAAA,EAEA,IADA,EAAA,WAAA,KAAA,EAAA,KAAA,EAAA,KACA,EAAA,CAEA,GAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,GAAA,EAAA,EAAA,EACA,GAAA,EAAA,KAAA,EAAA,MACA,GAAA,kBAAA,KAAA,IACA,KAAA,EACA,KAAA,IAAA,GAAA,EAAA,GAEA,KAAA,IAAA,GAAA,EAAA,EAAA,IAGA,MAAA,OAMA,iBAAA,WAEA,MADA,MAAA,IAAA,IAAA,kBAAA,KAAA,KACA,MAOA,eAAA,WACA,GAAA,KAAA,GAOA,KAAA,WAAA,EAAA,OAAA,KAAA,OAAA,OAPA,CACA,GAAA,GAAA,EAAA,UAAA,EAAA,OAAA,KAAA,cACA,MAAA,KAAA,EAAA,GAAA,EAAA,OAAA,KAAA,OACA,KAAA,YAAA,EAAA,SAAA,EAAA,OAAA,KAAA,aACA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,KAAA,WAAA,KAAA,KAAA,EACA,MAAA,WAAA,GAAA,OA0BA,EAAA,KAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,EAGA,GAAA,SAAA,IAAA,OACA,YAAA,EAAA,YACA,YAAA,EAAA,aAIA,IAAA,IAAA,KAAA,EAAA,SAAA,OAqBA,IAlBA,EAAA,MACA,EAAA,IAAA,EAAA,OAAA,EAAA,QAAA,KAIA,MAAA,EAAA,OAAA,GAAA,WAAA,GAAA,WAAA,GAAA,UAAA,IACA,EAAA,YAAA,mBACA,EAAA,KAAA,KAAA,UAAA,EAAA,OAAA,EAAA,OAAA,KAIA,EAAA,cACA,EAAA,YAAA,oCACA,EAAA,KAAA,EAAA,MAAA,MAAA,EAAA,UAKA,EAAA,cAAA,QAAA,GAAA,WAAA,GAAA,UAAA,GAAA,CACA,EAAA,KAAA,OACA,EAAA,cAAA,EAAA,KAAA,QAAA,EACA,IAAA,GAAA,EAAA,UACA,GAAA,WAAA,SAAA,GAEA,MADA,GAAA,iBAAA,yBAAA,GACA,EAAA,EAAA,MAAA,KAAA,WAAA,QAKA,QAAA,EAAA,MAAA,EAAA,cACA,EAAA,aAAA,GAMA,UAAA,EAAA,MAAA,IACA,EAAA,IAAA,WACA,MAAA,IAAA,eAAA,sBAKA,IAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAA,GAEA,OADA,GAAA,QAAA,UAAA,EAAA,EAAA,GACA,EAGA,IAAA,KAAA,mBAAA,UAAA,OAAA,eAAA,OAAA,iBAAA,GAAA,iBAAA,eAGA,GACA,OAAA,OACA,OAAA,MACA,MAAA,QACA,SAAA,SACA,KAAA,MAKA,GAAA,KAAA,WACA,MAAA,GAAA,EAAA,KAAA,MAAA,EAAA,EAAA,WAQA,IAAA,GAAA,EAAA,OAAA,SAAA,GACA,IAAA,MACA,EAAA,SAAA,KAAA,OAAA,EAAA,QACA,KAAA,cACA,KAAA,WAAA,MAAA,KAAA,YAKA,EAAA,aACA,EAAA,eACA,EAAA,SACA,EAAA,0BAGA,GAAA,OAAA,EAAA,UAAA,GAIA,WAAA,aAQA,MAAA,SAAA,EAAA,EAAA,GACA,EAAA,SAAA,KAAA,EAAA,KAAA,eAAA,IACA,EAAA,WAAA,KACA,EAAA,EACA,EAAA,IAEA,IAAA,EAAA,KAAA,GACA,IAAA,GAAA,IAQA,OAPA,GAAA,QAAA,MAAA,EAAA,SAAA,GACA,GAAA,GAAA,EAAA,mBAAA,EAAA,EACA,IAAA,EAAA,MAAA,EAAA,GACA,EAAA,QAAA,MAAA,GAAA,SAAA,GAAA,OAAA,IACA,EAAA,QAAA,QAAA,EAAA,GACA,EAAA,QAAA,QAAA,QAAA,EAAA,EAAA,KAEA,MAIA,SAAA,SAAA,EAAA,GAEA,MADA,GAAA,QAAA,SAAA,EAAA,GACA,MAMA,YAAA,WACA,GAAA,KAAA,OAAA,CACA,KAAA,OAAA,EAAA,OAAA,KAAA,SAEA,KADA,GAAA,GAAA,EAAA,EAAA,KAAA,KAAA,QACA,OAAA,EAAA,EAAA,QACA,KAAA,MAAA,EAAA,KAAA,OAAA,MAMA,eAAA,SAAA,GAOA,MANA,GAAA,EAAA,QAAA,EAAA,QACA,QAAA,EAAA,WACA,QAAA,EAAA,SAAA,EAAA,GACA,MAAA,GAAA,EAAA,YAEA,QAAA,EAAA,SACA,GAAA,QAAA,IAAA,EAAA,MAMA,mBAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,KAAA,GAAA,MAAA,EACA,OAAA,GAAA,IAAA,EAAA,SAAA,GACA,MAAA,GAAA,mBAAA,GAAA,SAcA,IAAA,GAAA,EAAA,QAAA,WACA,KAAA,YACA,EAAA,QAAA,KAAA,YAGA,mBAAA,UACA,KAAA,SAAA,OAAA,SACA,KAAA,QAAA,OAAA,UAKA,EAAA,eAGA,EAAA,aAGA,EAAA,cAGA,EAAA,MAGA,EAAA,SAGA,GAAA,SAAA,EAGA,EAAA,OAAA,EAAA,UAAA,GAIA,SAAA,GAIA,QAAA,SAAA,GACA,GAAA,IAAA,GAAA,MAAA,SAAA,KAAA,MAAA,SACA,OAAA,GAAA,EAAA,GAAA,IAKA,YAAA,SAAA,EAAA,GACA,GAAA,MAAA,EACA,GAAA,KAAA,gBAAA,KAAA,kBAAA,EAAA,CACA,EAAA,KAAA,SAAA,QACA,IAAA,GAAA,KAAA,KAAA,QAAA,EAAA,GACA,GAAA,QAAA,KAAA,EAAA,EAAA,MAAA,EAAA,aAEA,GAAA,KAAA,SAGA,OAAA,GAAA,QAAA,EAAA,KAKA,MAAA,SAAA,GACA,GAAA,EAAA,QAAA,KAAA,IAAA,OAAA,4CACA,GAAA,SAAA,EAIA,KAAA,QAAA,EAAA,QAAA,KAAA,KAAA,KAAA,QAAA,GACA,KAAA,KAAA,KAAA,QAAA,KACA,KAAA,iBAAA,KAAA,QAAA,cAAA,EACA,KAAA,kBAAA,KAAA,QAAA,UACA,KAAA,iBAAA,KAAA,QAAA,WAAA,KAAA,SAAA,KAAA,QAAA,UACA,IAAA,GAAA,KAAA,cACA,EAAA,SAAA,aACA,EAAA,EAAA,KAAA,UAAA,UAAA,kBAAA,GAAA,GAAA,EAGA,MAAA,MAAA,IAAA,KAAA,KAAA,KAAA,QAAA,EAAA,KAEA,GAAA,KAAA,mBACA,KAAA,OAAA,EAAA,EAAA,+CAAA,OAAA,SAAA,QAAA,GAAA,cACA,KAAA,SAAA,IAKA,KAAA,cACA,EAAA,EAAA,QAAA,GAAA,WAAA,KAAA,UACA,KAAA,kBAAA,gBAAA,UAAA,EACA,EAAA,EAAA,QAAA,GAAA,aAAA,KAAA,UACA,KAAA,mBACA,KAAA,kBAAA,YAAA,KAAA,SAAA,KAAA,WAKA,KAAA,SAAA,CACA,IAAA,GAAA,KAAA,SACA,EAAA,EAAA,SAAA,QAAA,SAAA,SAAA,KAAA,IAIA,IAAA,KAAA,kBAAA,KAAA,gBAAA,CAIA,IAAA,KAAA,gBAAA,EAIA,MAHA,MAAA,SAAA,KAAA,YAAA,MAAA,GACA,KAAA,SAAA,QAAA,KAAA,KAAA,KAAA,SAAA,OAAA,IAAA,KAAA,WAEA,CAIA,MAAA,eAAA,GAAA,EAAA,OACA,KAAA,SAAA,KAAA,UAAA,QAAA,EAAA,IACA,KAAA,QAAA,gBAAA,SAAA,MAAA,KAAA,KAAA,KAAA,SAAA,EAAA,SAKA,MAAA,MAAA,QAAA,OAAA,OAAA,KAAA,WAKA,KAAA,WACA,EAAA,EAAA,QAAA,IAAA,WAAA,KAAA,UAAA,IAAA,aAAA,KAAA,UACA,cAAA,KAAA,mBACA,EAAA,SAAA,GAKA,MAAA,SAAA,EAAA,GACA,KAAA,SAAA,SAAA,MAAA,EAAA,SAAA,KAKA,SAAA,WACA,GAAA,GAAA,KAAA,aAIA,OAHA,KAAA,KAAA,UAAA,KAAA,SACA,EAAA,KAAA,YAAA,KAAA,QAAA,KAAA,UAEA,IAAA,KAAA,UAAA,GACA,KAAA,QAAA,KAAA,SAAA,GACA,KAAA,UADA;EAOA,QAAA,SAAA,GAEA,MADA,GAAA,KAAA,SAAA,KAAA,YAAA,GACA,EAAA,IAAA,KAAA,SAAA,SAAA,GACA,MAAA,GAAA,MAAA,KAAA,IACA,EAAA,SAAA,IACA,GAFA,UAcA,SAAA,SAAA,EAAA,GACA,IAAA,EAAA,QAAA,OAAA,CACA,IAAA,KAAA,IAAA,GAAA,UAAA,GAEA,IAAA,GAAA,KAAA,MAAA,EAAA,KAAA,YAAA,GAAA,IAKA,IAFA,EAAA,EAAA,QAAA,EAAA,IAEA,KAAA,WAAA,EAAA,CAOA,GANA,KAAA,SAAA,EAGA,KAAA,GAAA,MAAA,IAAA,EAAA,EAAA,MAAA,EAAA,KAGA,KAAA,cACA,KAAA,QAAA,EAAA,QAAA,eAAA,gBAAA,SAAA,MAAA,OAIA,CAAA,IAAA,KAAA,iBAaA,MAAA,MAAA,SAAA,OAAA,EAZA,MAAA,YAAA,KAAA,SAAA,EAAA,EAAA,SACA,KAAA,QAAA,IAAA,KAAA,YAAA,KAAA,QAAA,KAAA,WAIA,EAAA,SAAA,KAAA,OAAA,SAAA,OAAA,QACA,KAAA,YAAA,KAAA,OAAA,SAAA,EAAA,EAAA,UAQA,MAAA,GAAA,QAAA,KAAA,QAAA,GAAA,SAKA,YAAA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,CACA,GAAA,GAAA,EAAA,KAAA,QAAA,qBAAA,GACA,GAAA,QAAA,EAAA,IAAA,OAGA,GAAA,KAAA,IAAA,KAOA,EAAA,QAAA,GAAA,EAQA,IAAA,GAAA,SAAA,EAAA,GACA,GACA,GADA,EAAA,IAOA,GADA,GAAA,EAAA,IAAA,EAAA,eACA,EAAA,YAEA,WAAA,MAAA,GAAA,MAAA,KAAA,YAIA,EAAA,OAAA,EAAA,EAAA,EAIA,IAAA,GAAA,WAAA,KAAA,YAAA,EAYA,OAXA,GAAA,UAAA,EAAA,UACA,EAAA,UAAA,GAAA,GAIA,GAAA,EAAA,OAAA,EAAA,UAAA,GAIA,EAAA,UAAA,EAAA,UAEA,EAIA,GAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,CAGA,IAAA,GAAA,WACA,KAAA,IAAA,OAAA,mDAIA,EAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,KACA,GAAA,MAAA,SAAA,GACA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,QAAA,QAAA,EAAA,EAAA,ICziDA,OAAA,KASA,SAAA,EAAA,GA4EA,QAAA,KACA,IAAA,EAAA,MAAA,CAKA,EAAA,MAAA,qBAGA,KAAA,GAAA,KAAA,GAAA,SACA,EAAA,SAAA,eAAA,IACA,EAAA,UAAA,SAAA,EAAA,SAAA,GAKA,GAAA,MAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,QACA,EAAA,MAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,QAGA,EAAA,OAAA,GArFA,GAAA,GAAA,SAAA,EAAA,GACA,MAAA,IAAA,GAAA,SAAA,EAAA,OAIA,GAAA,UAKA,uBAEA,WAAA,OAGA,YAAA,OACA,aAAA,OACA,eAAA,OACA,SAAA,OACA,kBAAA,kBAOA,EAAA,kBAAA,UAAA,gBAAA,UAAA,iBACA,EAAA,gBAAA,gBAAA,GAGA,EAAA,aAAA,wCACA,EAAA,eAAA,EAAA,iBAAA,UAAA,UAAA,MAAA,EAAA,cAIA,EAAA,eAGA,EAAA,eAAA,OACA,EAAA,eAAA,OACA,EAAA,aAAA,KACA,EAAA,gBAAA,QAGA,EAAA,cAAA,QACA,EAAA,cAAA,QACA,EAAA,YAAA,MAGA,EAAA,YAAA,QACA,EAAA,WAAA,OACA,EAAA,UAAA,MAGA,EAAA,SAAA,SAGA,EAAA,WAGA,EAAA,OAAA,EAoCA,EAAA,SAAA,SAAA,EAAA,GACA,GAAA,GAAA,IA6BA,OAzBA,KAEA,KAAA,QAAA,EAGA,KAAA,SAAA,EAGA,KAAA,QAAA,EAAA,MAAA,OACA,EAAA,MAAA,UAAA,EAAA,UACA,OAGA,KAAA,QAAA,uBACA,EAAA,MAAA,2BAAA,KAAA,QAAA,KAAA,QAAA,uBAIA,EAAA,MAAA,QAAA,EAAA,EAAA,YAAA,SAAA,GACA,EAAA,SACA,EAAA,UAAA,YAAA,EAAA,KAKA,MAIA,EAAA,SAAA,WAOA,GAAA,SAAA,EAAA,GAEA,IAAA,GADA,GAAA,EAAA,MAAA,KACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,KAAA,QAAA,iBAAA,EAAA,GAAA,GAAA,EAEA,OAAA,OAUA,IAAA,SAAA,EAAA,GAEA,IAAA,GADA,GAAA,EAAA,MAAA,KACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,KAAA,QAAA,oBAAA,EAAA,GAAA,GAAA,EAEA,OAAA,OAUA,QAAA,SAAA,EAAA,GAEA,GAAA,GAAA,EAAA,SAAA,YAAA,QACA,GAAA,UAAA,GAAA,GAAA,GACA,EAAA,QAAA,CAIA,IAAA,GAAA,KAAA,OAMA,OALA,GAAA,MAAA,UAAA,EAAA,OAAA,KACA,EAAA,EAAA,QAGA,EAAA,cAAA,GACA,MASA,OAAA,SAAA,GAEA,MADA,MAAA,QAAA,EACA,MAUA,IAAA,GAAA,KAOA,GAAA,EAOA,GAAA,CAGA,GAAA,OAOA,QAAA,SAAA,EAAA,EAAA,GAEA,IAAA,GADA,GAAA,EAAA,MAAA,KACA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,iBAAA,EAAA,GAAA,GAAA,IAWA,QAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,IAEA,MAAA,QAAA,EAAA,EAAA,YAAA,GAAA,SAAA,GACA,GAAA,GAAA,EAAA,KAAA,aAIA,KAAA,EAAA,MAAA,WAAA,EAAA,EAKA,EAAA,MAAA,UACA,EAAA,MAAA,gBACA,EAAA,MAAA,UAAA,IAAA,EAAA,SAEA,GAAA,GAKA,EAAA,MAAA,mBACA,GAAA,EAIA,IAAA,GAAA,CAIA,KAEA,EAAA,mBAAA,GAAA,EAAA,UACA,EAAA,EAAA,aAAA,cAAA,EAAA,GAGA,EAAA,MAAA,SACA,EAAA,EAAA,QAAA,OAGA,IACA,EAAA,EAAA,MAAA,MAAA,EAAA,GAKA,EAAA,GAAA,GAAA,EAAA,UACA,EAAA,EAAA,WAGA,IACA,EAAA,EAAA,WAKA,GAAA,OAAA,EAKA,EAAA,EAJA,EAAA,EAQA,EAAA,KAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,EAAA,IAGA,EAAA,mBAAA,GAAA,EAAA,YACA,EAAA,EAAA,aAAA,cAAA,EAAA,KAOA,IACA,EAAA,KACA,GAAA,EACA,GAAA,EACA,EAAA,aAAA,aAUA,oBAAA,WAEA,GAAA,EAIA,GADA,EAAA,kBACA,EAAA,aAAA,YAGA,EAAA,gBAEA,aACA,YACA,yBAMA,uBACA,sBACA,gCAGA,EAAA,YAAA,EAAA,aAAA,EAAA,GACA,EAAA,YAAA,EAAA,YAAA,EAAA,GACA,EAAA,YAAA,EAAA,WAAA,EAAA,IASA,aAAA,SAAA,GAEA,MAAA,GAAA,kBACA,EAAA,aAAA,eAGA,EAAA,QACA,EAAA,UAKA,WAAA,EACA,MAAA,EAAA,MACA,MAAA,EAAA,MACA,OAAA,EAAA,UAYA,iBAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,KAAA,aAAA,EAAA,GAGA,EAAA,EAAA,aAKA,QAJA,EAAA,KAAA,MAAA,UAAA,EAAA,aAAA,UAAA,EAAA,cAAA,MACA,EAAA,EAAA,gBAIA,OAAA,EAAA,MAAA,UAAA,GACA,WAAA,GAAA,OAAA,UACA,OAAA,EAAA,OACA,QAAA,EACA,UAAA,EACA,YAAA,EACA,SAAA,EAMA,eAAA,WACA,KAAA,SAAA,qBACA,KAAA,SAAA,sBAGA,KAAA,SAAA,gBACA,KAAA,SAAA,kBAOA,gBAAA,WACA,KAAA,SAAA,mBAQA,WAAA,WACA,MAAA,GAAA,UAAA,iBAMA,EAAA,cAKA,YAMA,aAAA,WACA,GAAA,GAAA,KACA,IAMA,OAHA,QAAA,KAAA,EAAA,UAAA,OAAA,QAAA,SAAA,GACA,EAAA,KAAA,EAAA,SAAA,MAEA,GAQA,cAAA,SAAA,EAAA,GASA,MARA,IAAA,EAAA,UACA,KAAA,aAGA,EAAA,WAAA,EAAA,UACA,KAAA,SAAA,EAAA,WAAA,GAGA,OAAA,KAAA,KAAA,UAAA,QAQA,UAAA,SAAA,EAAA,GACA,IAAA,EAAA,YACA,OAAA,CAGA,IAAA,KAIA,OAHA,GAAA,EAAA,eAAA,EAAA,aAAA,EAAA,sBAAA,EAAA,aAAA,EAAA,cACA,EAAA,EAAA,eAAA,EAAA,aAAA,EAAA,sBAAA,EAAA,aAAA,EAAA,cACA,EAAA,EAAA,aAAA,EAAA,aAAA,EAAA,oBAAA,EAAA,aAAA,EAAA,YACA,EAAA,IAOA,UAAA,WACA,OACA,4BACA,4BACA,wDAOA,MAAA,WACA,KAAA,cAKA,EAAA,OASA,OAAA,SAAA,EAAA,EAAA,GACA,IAAA,GAAA,KAAA,GACA,EAAA,KAAA,GAAA,IAGA,EAAA,GAAA,EAAA,GAEA,OAAA,IAWA,UAAA,SAAA,EAAA,GACA,KAAA,GAAA,CACA,GAAA,GAAA,EACA,OAAA,CAEA,GAAA,EAAA,WAEA,OAAA,GASA,UAAA,SAAA,GAGA,IAAA,GAFA,MAAA,KAEA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,KAAA,EAAA,GAAA,OACA,EAAA,KAAA,EAAA,GAAA,MAGA,QACA,OAAA,KAAA,IAAA,MAAA,KAAA,GAAA,KAAA,IAAA,MAAA,KAAA,IAAA,EACA,OAAA,KAAA,IAAA,MAAA,KAAA,GAAA,KAAA,IAAA,MAAA,KAAA,IAAA,IAYA,YAAA,SAAA,EAAA,EAAA,GACA,OACA,EAAA,KAAA,IAAA,EAAA,IAAA,EACA,EAAA,KAAA,IAAA,EAAA,IAAA,IAWA,SAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,MAAA,EAAA,MACA,EAAA,EAAA,MAAA,EAAA,KACA,OAAA,KAAA,KAAA,MAAA,EAAA,GAAA,KAAA,IAUA,aAAA,SAAA,EAAA,GACA,GAAA,GAAA,KAAA,IAAA,EAAA,MAAA,EAAA,OACA,EAAA,KAAA,IAAA,EAAA,MAAA,EAAA,MAEA,OAAA,IAAA,EACA,EAAA,MAAA,EAAA,MAAA,EAAA,EAAA,eAAA,EAAA,gBAGA,EAAA,MAAA,EAAA,MAAA,EAAA,EAAA,aAAA,EAAA,gBAWA,YAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,MAAA,EAAA,MACA,EAAA,EAAA,MAAA,EAAA,KACA,OAAA,MAAA,KAAA,EAAA,EAAA,EAAA,IAWA,SAAA,SAAA,EAAA,GAEA,MAAA,GAAA,QAAA,GAAA,EAAA,QAAA,EACA,KAAA,YAAA,EAAA,GAAA,EAAA,IACA,KAAA,YAAA,EAAA,GAAA,EAAA,IAEA,GAUA,YAAA,SAAA,EAAA,GAEA,MAAA,GAAA,QAAA,GAAA,EAAA,QAAA,EACA,KAAA,SAAA,EAAA,GAAA,EAAA,IACA,KAAA,SAAA,EAAA,GAAA,EAAA,IAEA,GASA,WAAA,SAAA,GACA,MAAA,IAAA,EAAA,cAAA,GAAA,EAAA,gBASA,2BAAA,SAAA,EAAA,GACA,GAAA,GACA,GAAA,SAAA,QAAA,MAAA,KAAA,IAAA,GAEA,IAAA,GAAA,EAAA,MAAA,CAKA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IACA,IAAA,GAAA,KAAA,GACA,EAAA,eAAA,KACA,EAAA,EAGA,EAAA,KACA,EAAA,EAAA,GAAA,EAAA,UAAA,EAAA,GAAA,cAAA,EAAA,UAAA,IAIA,EAAA,MAAA,GAAA,EAAA,GAMA,SAAA,EAAA,aACA,EAAA,cAAA,WACA,OAAA,OAMA,EAAA,WAEA,YAGA,QAAA,KAIA,SAAA,KAGA,SAAA,EAQA,YAAA,SAAA,EAAA,GAEA,KAAA,UAIA,KAAA,SAAA,EAEA,KAAA,SACA,KAAA,EACA,WAAA,EAAA,MAAA,UAAA,GACA,WAAA,EACA,KAAA,IAGA,KAAA,OAAA,KASA,OAAA,SAAA,GACA,GAAA,KAAA,UAAA,KAAA,QAAA,CAKA,EAAA,KAAA,gBAAA,EAMA,KAAA,GAHA,GAAA,KAAA,QAAA,KAAA,QAGA,EAAA,EAAA,EAAA,KAAA,SAAA,OAAA,EAAA,EAAA,IAAA,CACA,GAAA,GAAA,KAAA,SAAA,EAGA,KAAA,KAAA,SAAA,EAAA,EAAA,SAAA,GAEA,EAAA,QAAA,KAAA,EAAA,EAAA,KAAA,QAAA,SAAA,EAAA,CACA,KAAA,YACA,QAeA,MATA,MAAA,UACA,KAAA,QAAA,UAAA,GAIA,EAAA,WAAA,EAAA,YAAA,EAAA,QAAA,OAAA,GACA,KAAA,aAGA,IASA,WAAA,WAGA,KAAA,SAAA,EAAA,MAAA,UAAA,KAAA,SAGA,KAAA,QAAA,KAGA,KAAA,SAAA,GASA,gBAAA,SAAA,GACA,GAAA,GAAA,KAAA,QAAA,UAMA,IAAA,IAAA,EAAA,QAAA,QAAA,EAAA,QAAA,QAAA,EAAA,UAAA,EAAA,SAAA,CAEA,EAAA,UACA,KAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,OAAA,EAAA,EAAA,IACA,EAAA,QAAA,KAAA,EAAA,MAAA,UAAA,EAAA,QAAA,KAIA,GAAA,GAAA,EAAA,UAAA,EAAA,UACA,EAAA,EAAA,OAAA,MAAA,EAAA,OAAA,MACA,EAAA,EAAA,OAAA,MAAA,EAAA,OAAA,MACA,EAAA,EAAA,MAAA,YAAA,EAAA,EAAA,EAqBA,OAnBA,GAAA,MAAA,OAAA,GACA,UAAA,EAEA,OAAA,EACA,OAAA,EAEA,UAAA,EAAA,EACA,UAAA,EAAA,EAEA,SAAA,EAAA,MAAA,YAAA,EAAA,OAAA,EAAA,QACA,MAAA,EAAA,MAAA,SAAA,EAAA,OAAA,EAAA,QACA,UAAA,EAAA,MAAA,aAAA,EAAA,OAAA,EAAA,QAEA,MAAA,EAAA,MAAA,SAAA,EAAA,QAAA,EAAA,SACA,SAAA,EAAA,MAAA,YAAA,EAAA,QAAA,EAAA,SAEA,WAAA,IAGA,GASA,SAAA,SAAA,GAEA,GAAA,GAAA,EAAA,YAyBA,OAxBA,GAAA,EAAA,QAAA,IACA,EAAA,EAAA,OAAA,GAIA,EAAA,MAAA,OAAA,EAAA,SAAA,GAAA,GAGA,EAAA,MAAA,EAAA,OAAA,IAGA,KAAA,SAAA,KAAA,GAGA,KAAA,SAAA,KAAA,SAAA,EAAA,GACA,MAAA,GAAA,MAAA,EAAA,MACA,GAEA,EAAA,MAAA,EAAA,MACA,EAEA,IAGA,KAAA,WAKA,EAAA,SAAA,EAAA,aAkHA,EAAA,SAAA,MACA,KAAA,OACA,MAAA,GACA,UACA,aAAA,IACA,eAAA,GAEA,MAAA,KACA,QAAA,SAAA,EAAA,GACA,OAAA,EAAA,WACA,IAAA,GAAA,YAEA,aAAA,KAAA,OAGA,EAAA,UAAA,QAAA,KAAA,KAAA,KAIA,KAAA,MAAA,WAAA,WACA,QAAA,EAAA,UAAA,QAAA,MACA,EAAA,QAAA,OAAA,IAEA,EAAA,QAAA,aACA,MAGA,KAAA,GAAA,WACA,EAAA,SAAA,EAAA,QAAA,gBACA,aAAA,KAAA,MAEA,MAEA,KAAA,GAAA,UACA,aAAA,KAAA,UAYA,EAAA,SAAA,KACA,KAAA,MACA,MAAA,IACA,UACA,kBAAA,IACA,iBAAA,GACA,YAAA,EACA,mBAAA,GACA,mBAAA,KAEA,QAAA,SAAA,EAAA,GACA,GAAA,EAAA,WAAA,EAAA,UAAA,CAEA,GAAA,GAAA,EAAA,UAAA,SACA,GAAA,CAIA,IAAA,EAAA,UAAA,EAAA,QAAA,mBACA,EAAA,SAAA,EAAA,QAAA,iBACA,MAIA,IAAA,OAAA,EAAA,MACA,EAAA,UAAA,EAAA,UAAA,UAAA,EAAA,QAAA,oBACA,EAAA,SAAA,EAAA,QAAA,qBACA,EAAA,QAAA,YAAA,GACA,GAAA,KAIA,GAAA,EAAA,QAAA,cACA,EAAA,UAAA,QAAA,KAAA,MACA,EAAA,QAAA,EAAA,UAAA,QAAA,KAAA,OAYA,EAAA,SAAA,OACA,KAAA,QACA,MAAA,GACA,UAEA,kBAAA,EACA,eAAA,IAEA,QAAA,SAAA,EAAA,GACA,GAAA,EAAA,WAAA,EAAA,UAAA,CAEA,GAAA,EAAA,QAAA,kBAAA,GACA,EAAA,QAAA,OAAA,EAAA,QAAA,kBACA,QAKA,EAAA,UAAA,EAAA,QAAA,gBACA,EAAA,UAAA,EAAA,QAAA,kBAEA,EAAA,QAAA,KAAA,KAAA,GACA,EAAA,QAAA,KAAA,KAAA,EAAA,UAAA,OAcA,EAAA,SAAA,MACA,KAAA,OACA,MAAA,GACA,UACA,kBAAA,GAEA,iBAAA,EAIA,uBAAA,EACA,qBAAA,EAGA,mBAAA,EAGA,uBAAA,IAEA,WAAA,EACA,QAAA,SAAA,EAAA,GAGA,GAAA,EAAA,UAAA,QAAA,MAAA,KAAA,MAAA,KAAA,UAGA,MAFA,GAAA,QAAA,KAAA,KAAA,MAAA,GACA,KAAA,WAAA,EACA,MAIA,MAAA,EAAA,QAAA,iBAAA,GACA,EAAA,QAAA,OAAA,EAAA,QAAA,kBAIA,OAAA,EAAA,WACA,IAAA,GAAA,YACA,KAAA,WAAA,CACA,MAEA,KAAA,GAAA,WAGA,GAAA,EAAA,SAAA,EAAA,QAAA,mBACA,EAAA,UAAA,QAAA,MAAA,KAAA,KACA,MAIA,GAAA,UAAA,QAAA,KAAA,KAAA,MAGA,EAAA,UAAA,QAAA,UAAA,qBAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,wBAAA,EAAA,YACA,EAAA,qBAAA,EAEA,IAAA,GAAA,EAAA,UAAA,QAAA,UAAA,SACA,GAAA,qBAAA,IAAA,EAAA,YAGA,EAAA,UADA,EAAA,MAAA,WAAA,GACA,EAAA,OAAA,EAAA,EAAA,aAAA,EAAA,eAGA,EAAA,OAAA,EAAA,EAAA,eAAA,EAAA,iBAKA,KAAA,YACA,EAAA,QAAA,KAAA,KAAA,QAAA,GACA,KAAA,WAAA,GAIA,EAAA,QAAA,KAAA,KAAA,GAGA,EAAA,QAAA,KAAA,KAAA,EAAA,UAAA,IAGA,EAAA,QAAA,qBAAA,EAAA,MAAA,WAAA,EAAA,YACA,EAAA,QAAA,wBAAA,EAAA,MAAA,WAAA,EAAA,aACA,EAAA,gBAEA,MAEA,KAAA,GAAA,UAEA,KAAA,WACA,EAAA,QAAA,KAAA,KAAA,MAAA,GAGA,KAAA,WAAA,KAYA,EAAA,SAAA,WACA,KAAA,YACA,MAAA,GACA,UAEA,oBAAA,IAEA,uBAAA,EAIA,wBAAA,GAEA,WAAA,EACA,QAAA,SAAA,EAAA,GAGA,GAAA,EAAA,UAAA,QAAA,MAAA,KAAA,MAAA,KAAA,UAGA,MAFA,GAAA,QAAA,KAAA,KAAA,MAAA,GACA,KAAA,WAAA,EACA,MAIA,MAAA,EAAA,QAAA,OAAA,GASA,OAJA,EAAA,QAAA,wBACA,EAAA,iBAGA,EAAA,WACA,IAAA,GAAA,YACA,KAAA,WAAA,CACA,MAEA,KAAA,GAAA,WACA,GAAA,GAAA,KAAA,IAAA,EAAA,EAAA,OACA,EAAA,KAAA,IAAA,EAAA,SAIA,IAAA,EAAA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,uBACA,MAIA,GAAA,UAAA,QAAA,KAAA,KAAA,KAGA,KAAA,YACA,EAAA,QAAA,KAAA,KAAA,QAAA,GACA,KAAA,WAAA,GAGA,EAAA,QAAA,KAAA,KAAA,GAGA,EAAA,EAAA,QAAA,wBACA,EAAA,QAAA,SAAA,GAIA,EAAA,EAAA,QAAA,sBACA,EAAA,QAAA,QAAA,GACA,EAAA,QAAA,SAAA,EAAA,MAAA,EAAA,KAAA,OAAA,GAEA,MAEA,KAAA,GAAA,UAEA,KAAA,WACA,EAAA,QAAA,KAAA,KAAA,MAAA,GAGA,KAAA,WAAA,KAYA,EAAA,SAAA,OACA,KAAA,QACA,OAAA,IACA,UAMA,iBAAA,EAGA,qBAAA,GAEA,QAAA,SAAA,EAAA,GACA,MAAA,GAAA,QAAA,qBAAA,EAAA,aAAA,EAAA,eACA,EAAA,aACA,SAGA,EAAA,QAAA,iBACA,EAAA,iBAGA,EAAA,WAAA,EAAA,aACA,EAAA,QAAA,KAAA,KAAA,GALA,UAgBA,EAAA,SAAA,SACA,KAAA,UACA,MAAA,IACA,QAAA,SAAA,EAAA,GACA,EAAA,WAAA,EAAA,WACA,EAAA,QAAA,KAAA,KAAA,KAMA,gBAAA,SAAA,gBAAA,QAAA,QACA,OAAA,QAAA,GAIA,EAAA,OAAA,EAGA,kBAAA,GAAA,QAAA,EAAA,OAAA,KACA,EAAA,OAAA,YAAA,WACA,MAAA,OAIA,MACA,EAAA,SAAA,SAAA,GACA,MAAA,YACA,GAAA,EACA,OAAA,IAAA,EAAA,SCl5CA,OAEA,SAAA,EAAA,GAIA,IAAA,IAWA,OAAA,MAAA,QAAA,SAAA,EAAA,EAAA,GACA,EAAA,GAAA,GAAA,EAAA,SAAA,GACA,GAAA,GAAA,EAAA,eAAA,CAGA,GAAA,QAAA,IACA,EAAA,MAAA,EAAA,MACA,EAAA,MAAA,EAAA,OAIA,EAAA,SACA,EAAA,OAAA,EAAA,QAIA,EAAA,QAAA,IACA,EAAA,MAAA,EAAA,QAIA,EAAA,iBACA,EAAA,eAAA,EAAA,gBAIA,EAAA,kBACA,EAAA,gBAAA,EAAA,iBAGA,EAAA,KAAA,KAAA,MAUA,OAAA,SAAA,UAAA,GAAA,SAAA,EAAA,GACA,MAAA,GAAA,KAAA,SAAA,GAAA,EAAA,IAEA,OAAA,SAAA,UAAA,IAAA,SAAA,EAAA,GACA,MAAA,GAAA,KAAA,SAAA,IAAA,EAAA,IAYA,OAAA,SAAA,UAAA,QAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,KAAA,QAKA,OAJA,GAAA,IAAA,EAAA,QAAA,SACA,EAAA,EAAA,EAAA,SAGA,EAAA,SACA,KAAA,EACA,QAAA,KAYA,EAAA,GAAA,OAAA,SAAA,GACA,MAAA,MAAA,KAAA,WACA,GAAA,GAAA,EAAA,MACA,EAAA,EAAA,KAAA,SAEA,GAIA,GAAA,GACA,OAAA,MAAA,OAAA,EAAA,QAAA,GAJA,EAAA,KAAA,SAAA,GAAA,QAAA,KAAA,aASA,OAAA,QAAA,OAAA,OC5GA,EAAA,iBAAA,SAAA,UAAA,cCDA,EAAA,aAAA,WACA,WAEA,WACA,EAAA,6BAAA,WACA,GAAA,EAiGA,OA/FA,IACA,MAAA,EACA,WAAA,OACA,sBAAA,EACA,SAAA,SAAA,EAAA,EAAA,EAAA,GAGA,MAFA,MAAA,MAAA,EACA,KAAA,aAAA,WAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,GACA,MAEA,WAAA,SAAA,GAEA,MADA,MAAA,IAAA,IAAA,UAAA,GACA,MAEA,cAAA,WAIA,MAHA,MAAA,aACA,KAAA,WAAA,KAAA,IAAA,IAAA,eAEA,KAAA,YAEA,cAAA,SAAA,GAKA,MAJA,MAAA,aAAA,IACA,KAAA,WAAA,EACA,KAAA,IAAA,IAAA,aAAA,IAEA,MAEA,gBAAA,WAEA,MADA,MAAA,cAAA,IACA,MAEA,gBAAA,WAEA,MADA,MAAA,cAAA,IACA,MAEA,SAAA,WAEA,MADA,MAAA,IAAA,WAAA,SACA,MAEA,MAAA,WAGA,MAFA,MAAA,kBACA,KAAA,iBACA,KAAA,YAEA,aAAA,WACA,MAAA,MAAA,IAAA,IAAA,sBAEA,aAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAgBA,OAdA,GAAA,OACA,KAAA,EACA,KAAA,uBACA,KAAA,sBAAA,EACA,KAAA,cAAA,UAGA,KAAA,uBACA,KAAA,kBACA,KAAA,sBAAA,GAEA,KAAA,yBAAA,EAAA,EAAA,IAEA,KAAA,IAAA,IAAA,oBAAA,GACA,MAEA,eAAA,SAAA,EAAA,EAAA,GACA,MAAA,MAAA,aAAA,GAAA,EAAA,EAAA,IAEA,SAAA,SAAA,EAAA,EAAA,EAAA,GAGA,MAFA,MAAA,yBAAA,EAAA,EAAA,GACA,KAAA,IAAA,SAAA,GACA,MAEA,YAAA,SAAA,EAAA,EAAA,EAAA,GAGA,MAFA,MAAA,yBAAA,EAAA,EAAA,GACA,KAAA,IAAA,YAAA,GACA,MAEA,YAAA,SAAA,EAAA,EAAA,EAAA,GAGA,MAFA,MAAA,yBAAA,EAAA,EAAA,GACA,KAAA,IAAA,YAAA,GACA,MAEA,yBAAA,SAAA,EAAA,EAAA,GACA,GAAA,EAGA,OADA,GAAA,KACA,EACA,KAAA,IAAA,KAAA,mEAAA,WAEA,MADA,GAAA,IAAA,OAAA,oEACA,GAAA,EAAA,KAAA,EAAA,KAHA,YC7FA,KAAA,MAEA,WACA,GAAA,MAAA,eACA,EAAA,SAAA,EAAA,GAAA,QAAA,KAAA,KAAA,YAAA,EAAA,IAAA,GAAA,KAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,UAAA,EAAA,UAAA,EAAA,UAAA,GAAA,GAAA,EAAA,UAAA,EAAA,UAAA,EAEA,GAAA,sBAAA,UAAA,WAAA,2BAAA,SAAA,GACA,GAAA,GAAA,EAAA,EAAA,CAgCA,OA9BA,GAAA,EAAA,YACA,EAAA,EAAA,2BACA,EAAA,SAAA,GAGA,QAAA,KAEA,MADA,GAAA,EAAA,UAAA,YAAA,MAAA,KAAA,WAoBA,MAvBA,GAAA,EAAA,GAOA,EAAA,UAAA,QAAA,MAEA,EAAA,UAAA,UAAA,YAEA,EAAA,UAAA,MAAA,yRAEA,EAAA,UAAA,WAAA,WACA,MAAA,MAAA,SAAA,EAAA,SAAA,KAAA,QAGA,EAAA,UAAA,OAAA,WAGA,MAFA,MAAA,IAAA,KAAA,KAAA,SAAA,KAAA,MAAA,WACA,KAAA,IAAA,IAAA,kBAAA,OAAA,KAAA,MAAA,IAAA,iBAAA,KACA,MAGA,GAEA,EAAA,MACA,EAAA,OAAA,EAAA,UAAA,GACA,KCvCA,KAAA,MAEA,WACA,GAAA,GAAA,SAAA,EAAA,GAAA,MAAA,YAAA,MAAA,GAAA,MAAA,EAAA,aACA,KAAA,eACA,EAAA,SAAA,EAAA,GAAA,QAAA,KAAA,KAAA,YAAA,EAAA,IAAA,GAAA,KAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,UAAA,EAAA,UAAA,EAAA,UAAA,GAAA,GAAA,EAAA,UAAA,EAAA,UAAA,EAEA,GAAA,gBAAA,UAAA,WAAA,gBAAA,UAAA,qBAAA,2BAAA,SAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,CAsHA,OApHA,GAAA,EAAA,YACA,EAAA,OAAA,EAAA,iBACA,EAAA,EAAA,WACA,EAAA,EAAA,sBACA,EAAA,EAAA,2BACA,EAAA,SAAA,GAGA,QAAA,KAKA,MAJA,MAAA,UAAA,EAAA,KAAA,UAAA,MACA,KAAA,SAAA,EAAA,KAAA,SAAA,MACA,KAAA,cAAA,EAAA,KAAA,cAAA,MACA,KAAA,cAAA,EAAA,KAAA,cAAA,MAAA,EAAA,EAAA,UAAA,YAAA,MAAA,KAAA,WAoGA,MA1GA,GAAA,EAAA,GAUA,EAAA,UAAA,GAAA,OAEA,EAAA,UAAA,WAAA,WAIA,MAHA,MAAA,SAAA,EAAA,WAAA,MAAA,KAAA,QACA,KAAA,kBACA,KAAA,IAAA,SAAA,GAAA,YAAA,KAAA,UACA,KAAA,IAAA,SAAA,GAAA,aAAA,KAAA,YAGA,EAAA,UAAA,OAAA,SAAA,GACA,GAAA,EAgBA,OAdA,GAAA,GAAA,IACA,MAAA,IAEA,EAAA,SACA,KAAA,eAAA,KAAA,GACA,KAAA,cAAA,GACA,EAAA,SAAA,WACA,KAAA,WAAA,GACA,EAAA,SAAA,QACA,KAAA,WAAA,GACA,EAAA,SAAA,QAEA,EAAA,SAAA,UAEA,KAAA,IAAA,OAAA,EAAA,KAGA,EAAA,UAAA,eAAA,WACA,GAAA,EAEA,OAAA,QAAA,EAAA,KAAA,aAAA,EAAA,KAAA,YAAA,KAAA,eAAA,IAGA,EAAA,UAAA,YAAA,WACA,GAAA,EAGA,OADA,GAAA,KAAA,eAAA,QAAA,KAAA,kBACA,EAAA,KAAA,eAAA,OACA,KAAA,eAAA,EAAA,GAEA,MAIA,EAAA,UAAA,YAAA,WACA,GAAA,EAGA,OADA,GAAA,KAAA,eAAA,QAAA,KAAA,kBACA,EAAA,EACA,KAAA,eAAA,EAAA,GAEA,MAIA,EAAA,UAAA,cAAA,SAAA,GACA,MAAA,KAAA,KAAA,kBAGA,EAAA,UAAA,WAAA,SAAA,GACA,MAAA,MAAA,eAAA,QAAA,KAAA,KAAA,eAAA,QAAA,KAAA,kBAAA,GAGA,EAAA,UAAA,cAAA,WACA,MAAA,MAAA,cAAA,SAAA,UAAA,YAAA,SAGA,EAAA,UAAA,cAAA,WACA,MAAA,MAAA,cAAA,SAAA,UAAA,YAAA,SAGA,EAAA,UAAA,MAAA,SAAA,GAIA,MAHA,OAAA,IACA,GAAA,GAEA,GAAA,KAAA,eACA,KAAA,YAAA,YAAA,WAAA,SAAA,QACA,KAAA,cAAA,YAAA,QAAA,SAAA,UAAA,KAAA,cAAA,MACA,KAAA,YAAA,KAAA,gBACA,GAAA,KAAA,eACA,KAAA,YAAA,YAAA,WAAA,SAAA,QACA,KAAA,cAAA,YAAA,QAAA,SAAA,UAAA,KAAA,cAAA,MACA,KAAA,YAAA,KAAA,eAHA,QAOA,EAAA,UAAA,SAAA,WACA,MAAA,MAAA,OAAA,IAGA,EAAA,UAAA,UAAA,WACA,MAAA,MAAA,OAAA,IAGA,GAEA,EAAA,MACA,EAAA,OAAA,EAAA,UAAA,GACA,KC9HA,KAAA,MAEA,WACA,GAAA,MAAA,eACA,EAAA,SAAA,EAAA,GAAA,QAAA,KAAA,KAAA,YAAA,EAAA,IAAA,GAAA,KAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,UAAA,EAAA,UAAA,EAAA,UAAA,GAAA,GAAA,EAAA,UAAA,EAAA,UAAA,EAEA,GAAA,uBAAA,UAAA,YAAA,SAAA,GACA,GAAA,GAAA,EAAA,CAGA,OADA,GAAA,EAAA,YACA,EAAA,SAAA,GAGA,QAAA,KAEA,MADA,GAAA,EAAA,UAAA,YAAA,MAAA,KAAA,WAeA,MAlBA,GAAA,EAAA,GAOA,EAAA,UAAA,UACA,KAAA,iBACA,cAAA,GACA,QAAA,GACA,YAAA,yBAGA,EAAA,UAAA,WAAA,WACA,MAAA,MAAA,IAAA,YAGA,GAEA,EAAA,UC/BA,KAAA,MAEA,WACA,GAAA,MAAA,eACA,EAAA,SAAA,EAAA,GAAA,QAAA,KAAA,KAAA,YAAA,EAAA,IAAA,GAAA,KAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,UAAA,EAAA,UAAA,EAAA,UAAA,GAAA,GAAA,EAAA,UAAA,EAAA,UAAA,EAEA,GAAA,6BAAA,UAAA,WAAA,uBAAA,SAAA,GACA,GAAA,GAAA,EAAA,EAAA,CAIA,OAFA,GAAA,EAAA,YACA,EAAA,EAAA,uBACA,EAAA,SAAA,GAGA,QAAA,KAEA,MADA,GAAA,EAAA,UAAA,YAAA,MAAA,KAAA,WAMA,MATA,GAAA,EAAA,GAOA,EAAA,UAAA,MAAA,EAEA,GAEA,EAAA,eCvBA,KAAA,MAEA,WACA,EAAA,YAAA,UAAA,eAAA,4BAAA,WAAA,SAAA,GACA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAgBA,OAdA,GAAA,EAAA,gBACA,EAAA,EAAA,6BACA,EAAA,EAAA,WACA,GACA,UACA,eACA,UAEA,EAAA,GAAA,GACA,EAAA,WAAA,EACA,EAAA,EAAA,MAAA,IAAA,GAAA,GACA,EAAA,SACA,EAAA,OAAA,WACA,EAAA,IAAA,GACA,KCpBA,KAAA,MAIA,GAAA,YAAA,SAAA,GACA,MAAA,KAEA,EAAA,MAAA,cAAA,EAAA","sourcesContent":["\n/**\n * almond 0.2.6 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n\n                name = baseParts.concat(name.split(\"/\"));\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (typeof callback === 'function') {\n\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback.apply(defined[name], args);\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        config = cfg;\n        if (config.deps) {\n            req(config.deps, config.callback);\n        }\n        return req;\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../bower_components/almond/almond\", function(){});\n","\n/**\n * @license\n * Lo-Dash 2.2.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash underscore exports=\"amd,commonjs,global,node\" -o ./dist/lodash.underscore.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used internally to indicate various things */\n  var indicatorObject = {};\n\n  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\n  var keyPrefix = +new Date + '';\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports` */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = objectTypes[typeof global] && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ac = a.criteria,\n        bc = b.criteria;\n\n    // ensure a stable sort in V8 and other engines\n    // http://code.google.com/p/v8/issues/detail?id=90\n    if (ac !== bc) {\n      if (ac > bc || typeof ac == 'undefined') {\n        return 1;\n      }\n      if (ac < bc || typeof bc == 'undefined') {\n        return -1;\n      }\n    }\n    // The JS engine embedded in Adobe applications like InDesign has a buggy\n    // `Array#sort` implementation that causes it, under certain circumstances,\n    // to return the same value for `a` and `b`.\n    // See https://github.com/jashkenas/underscore/pull/1247\n    return a.index - b.index;\n  }\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @private\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to restore the original `_` reference in `noConflict` */\n  var oldDash = root._;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    String(objectProto.valueOf)\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/valueOf|for [^\\]]+/g, '.+?') + '$'\n  );\n\n  /** Native method shortcuts */\n  var ceil = Math.ceil,\n      floor = Math.floor,\n      hasOwnProperty = objectProto.hasOwnProperty,\n      now = reNative.test(now = Date.now) && now || function() { return +new Date; },\n      push = arrayRef.push,\n      toString = objectProto.toString,\n      unshift = arrayRef.unshift;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeBind = reNative.test(nativeBind = toString.bind) && nativeBind,\n      nativeCreate = reNative.test(nativeCreate = Object.create) && nativeCreate,\n      nativeIsArray = reNative.test(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeIsFinite = root.isFinite,\n      nativeIsNaN = root.isNaN,\n      nativeKeys = reNative.test(nativeKeys = Object.keys) && nativeKeys,\n      nativeMax = Math.max,\n      nativeMin = Math.min,\n      nativeRandom = Math.random,\n      nativeSlice = arrayRef.slice;\n\n  /** Detect various environments */\n  var isIeOpera = reNative.test(root.attachEvent),\n      isV8 = nativeBind && !/\\n|true/.test(nativeBind + isIeOpera);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps the given value to enable intuitive\n   * method chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * Chaining is supported in custom builds as long as the `value` method is\n   * implicitly or explicitly included in the build.\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n   * `compose`, `concat`, `countBy`, `createCallback`, `curry`, `debounce`,\n   * `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`, `forEach`,\n   * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n   * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n   * `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`, `once`, `pairs`,\n   * `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`, `range`, `reject`,\n   * `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`,\n   * `tap`, `throttle`, `times`, `toArray`, `transform`, `union`, `uniq`, `unshift`,\n   * `unzip`, `values`, `where`, `without`, `wrap`, and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n   * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n   * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n   * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n   * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n   * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n   * `template`, `unescape`, `uniqueId`, and `value`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * provided, otherwise they return unwrapped values.\n   *\n   * Explicit chaining can be enabled by using the `_.chain` method.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   * @example\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // returns an unwrapped value\n   * wrapped.reduce(function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * // returns a wrapped value\n   * var squares = wrapped.map(function(num) {\n   *   return num * num;\n   * });\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return (value instanceof lodash)\n      ? value\n      : new lodashWrapper(value);\n  }\n\n  /**\n   * A fast path for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @param {boolean} chainAll A flag to enable chaining for all methods\n   * @returns {Object} Returns a `lodash` instance.\n   */\n  function lodashWrapper(value, chainAll) {\n    this.__chain__ = !!chainAll;\n    this.__wrapped__ = value;\n  }\n  // ensure `new lodashWrapper` is an instance of `lodash`\n  lodashWrapper.prototype = lodash.prototype;\n\n  /**\n   * An object used to flag environments features.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  var support = {};\n\n  (function() {\n    var object = { '0': 1, 'length': 1 };\n\n    /**\n     * Detect if `Function#bind` exists and is inferred to be fast (all but V8).\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.fastBind = nativeBind && !isV8;\n\n    /**\n     * Detect if `Array#shift` and `Array#splice` augment array-like objects correctly.\n     *\n     * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n     * and `splice()` functions that fail to remove the last element, `value[0]`,\n     * of array-like objects even though the `length` property is set to `0`.\n     * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n     * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n     *\n     * @memberOf _.support\n     * @type boolean\n     */\n    support.spliceObjects = (arrayRef.splice.call(object, 0, 1), !object[0]);\n  }(1));\n\n  /**\n   * By default, the template delimiters used by Lo-Dash are similar to those in\n   * embedded Ruby (ERB). Change the following template settings to use alternative\n   * delimiters.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  lodash.templateSettings = {\n\n    /**\n     * Used to detect `data` property values to be HTML-escaped.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'escape': /<%-([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect code to be evaluated.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'evaluate': /<%([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect `data` property values to inject.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'interpolate': reInterpolate,\n\n    /**\n     * Used to reference the data object in the template text.\n     *\n     * @memberOf _.templateSettings\n     * @type string\n     */\n    'variable': ''\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `_.createCallback` without support for creating\n   * \"_.pluck\" or \"_.where\" style callbacks.\n   *\n   * @private\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    }\n    // exit early if there is no `thisArg`\n    if (typeof thisArg == 'undefined') {\n      return func;\n    }\n    switch (argCount) {\n      case 1: return function(value) {\n        return func.call(thisArg, value);\n      };\n      case 2: return function(a, b) {\n        return func.call(thisArg, a, b);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(thisArg, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(thisArg, accumulator, value, index, collection);\n      };\n    }\n    return bind(func, thisArg);\n  }\n\n  /**\n   * The base implementation of `_.flatten` without support for callback\n   * shorthands or `thisArg` binding.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n   * @param {boolean} [isArgArrays=false] A flag to restrict flattening to arrays and `arguments` objects.\n   * @param {number} [fromIndex=0] The index to start from.\n   * @returns {Array} Returns a new flattened array.\n   */\n  function baseFlatten(array, isShallow, isArgArrays, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      if (value && typeof value == 'object' && typeof value.length == 'number'\n          && (isArray(value) || isArguments(value))) {\n        // recursively flatten arrays (susceptible to call stack limits)\n        if (!isShallow) {\n          value = baseFlatten(value, isShallow, isArgArrays);\n        }\n        var valIndex = -1,\n            valLength = value.length,\n            resIndex = result.length;\n\n        result.length += valLength;\n        while (++valIndex < valLength) {\n          result[resIndex++] = value[valIndex];\n        }\n      } else if (!isArgArrays) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n   * that allows partial \"_.where\" style comparisons.\n   *\n   * @private\n   * @param {*} a The value to compare.\n   * @param {*} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n   * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n   * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(a, b, stackA, stackB) {\n    if (a === b) {\n      return a !== 0 || (1 / a == 1 / b);\n    }\n    var type = typeof a,\n        otherType = typeof b;\n\n    if (a === a &&\n        !(a && objectTypes[type]) &&\n        !(b && objectTypes[otherType])) {\n      return false;\n    }\n    if (a == null || b == null) {\n      return a === b;\n    }\n    var className = toString.call(a),\n        otherClass = toString.call(b);\n\n    if (className != otherClass) {\n      return false;\n    }\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        return +a == +b;\n\n      case numberClass:\n        return a != +a\n          ? b != +b\n          : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n      case regexpClass:\n      case stringClass:\n        return a == String(b);\n    }\n    var isArr = className == arrayClass;\n    if (!isArr) {\n      if (hasOwnProperty.call(a, '__wrapped__ ') || b instanceof lodash) {\n        return baseIsEqual(a.__wrapped__ || a, b.__wrapped__ || b, stackA, stackB);\n      }\n      if (className != objectClass) {\n        return false;\n      }\n      var ctorA = a.constructor,\n          ctorB = b.constructor;\n\n      if (ctorA != ctorB && !(\n            isFunction(ctorA) && ctorA instanceof ctorA &&\n            isFunction(ctorB) && ctorB instanceof ctorB\n          )) {\n        return false;\n      }\n    }\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == a) {\n        return stackB[length] == b;\n      }\n    }\n    var result = true,\n        size = 0;\n\n    stackA.push(a);\n    stackB.push(b);\n\n    if (isArr) {\n      size = b.length;\n      result = size == a.length;\n\n      if (result) {\n        while (size--) {\n          if (!(result = baseIsEqual(a[size], b[size], stackA, stackB))) {\n            break;\n          }\n        }\n      }\n      return result;\n    }\n    forIn(b, function(value, key, b) {\n      if (hasOwnProperty.call(b, key)) {\n        size++;\n        return !(result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, stackA, stackB)) && indicatorObject;\n      }\n    });\n\n    if (result) {\n      forIn(a, function(value, key, a) {\n        if (hasOwnProperty.call(a, key)) {\n          return !(result = --size > -1) && indicatorObject;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.uniq` without support for callback shorthands\n   * or `thisArg` binding.\n   *\n   * @private\n   * @param {Array} array The array to process.\n   * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n   * @param {Function} [callback] The function called per iteration.\n   * @returns {Array} Returns a duplicate-value-free array.\n   */\n  function baseUniq(array, isSorted, callback) {\n    var index = -1,\n        indexOf = getIndexOf(),\n        length = array ? array.length : 0,\n        result = [],\n        seen = callback ? [] : result;\n\n    while (++index < length) {\n      var value = array[index],\n          computed = callback ? callback(value, index, array) : value;\n\n      if (isSorted\n            ? !index || seen[seen.length - 1] !== computed\n            : indexOf(seen, computed) < 0\n          ) {\n        if (callback) {\n          seen.push(computed);\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates a function that aggregates a collection, creating an object composed\n   * of keys generated from the results of running each element of the collection\n   * through a callback. The given `setter` function sets the keys and values\n   * of the composed object.\n   *\n   * @private\n   * @param {Function} setter The setter function.\n   * @returns {Function} Returns the new aggregator function.\n   */\n  function createAggregator(setter) {\n    return function(collection, callback, thisArg) {\n      var result = {};\n      callback = createCallback(callback, thisArg, 3);\n\n      var index = -1,\n          length = collection ? collection.length : 0;\n\n      if (typeof length == 'number') {\n        while (++index < length) {\n          var value = collection[index];\n          setter(result, value, callback(value, index, collection), collection);\n        }\n      } else {\n        forOwn(collection, function(value, key, collection) {\n          setter(result, value, callback(value, key, collection), collection);\n        });\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that, when called, either curries or invokes `func`\n   * with an optional `this` binding and partially applied arguments.\n   *\n   * @private\n   * @param {Function|string} func The function or method name to reference.\n   * @param {number} bitmask The bitmask of method flags to compose.\n   *  The bitmask may be composed of the following flags:\n   *  1 - `_.bind`\n   *  2 - `_.bindKey`\n   *  4 - `_.curry`\n   *  8 - `_.curry` (bound)\n   *  16 - `_.partial`\n   *  32 - `_.partialRight`\n   * @param {Array} [partialArgs] An array of arguments to prepend to those\n   *  provided to the new function.\n   * @param {Array} [partialRightArgs] An array of arguments to append to those\n   *  provided to the new function.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {number} [arity] The arity of `func`.\n   * @returns {Function} Returns the new bound function.\n   */\n  function createBound(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        isPartial = bitmask & 16,\n        isPartialRight = bitmask & 32,\n        key = func;\n\n    if (!isBindKey && !isFunction(func)) {\n      throw new TypeError;\n    }\n    if (isPartial && !partialArgs.length) {\n      bitmask &= ~16;\n      isPartial = partialArgs = false;\n    }\n    if (isPartialRight && !partialRightArgs.length) {\n      bitmask &= ~32;\n      isPartialRight = partialRightArgs = false;\n    }\n    // use `Function#bind` if it exists and is fast\n    // (in V8 `Function#bind` is slower except when partially applied)\n    if (isBind && !(isBindKey || isCurry || isPartialRight) &&\n        (support.fastBind || (nativeBind && isPartial))) {\n      if (isPartial) {\n        var args = [thisArg];\n        push.apply(args, partialArgs);\n      }\n      var bound = isPartial\n        ? nativeBind.apply(func, args)\n        : nativeBind.call(func, thisArg);\n    }\n    else {\n      bound = function() {\n        // `Function#bind` spec\n        // http://es5.github.io/#x15.3.4.5\n        var args = arguments,\n            thisBinding = isBind ? thisArg : this;\n\n        if (isCurry || isPartial || isPartialRight) {\n          args = nativeSlice.call(args);\n          if (isPartial) {\n            unshift.apply(args, partialArgs);\n          }\n          if (isPartialRight) {\n            push.apply(args, partialRightArgs);\n          }\n          if (isCurry && args.length < arity) {\n            bitmask |= 16 & ~32;\n            return createBound(func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity);\n          }\n        }\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (this instanceof bound) {\n          // ensure `new bound` is an instance of `func`\n          thisBinding = createObject(func.prototype);\n\n          // mimic the constructor's `return` behavior\n          // http://es5.github.io/#x13.2.2\n          var result = func.apply(thisBinding, args);\n          return isObject(result) ? result : thisBinding;\n        }\n        return func.apply(thisBinding, args);\n      };\n    }\n    return bound;\n  }\n\n  /**\n   * Creates a new object with the specified `prototype`.\n   *\n   * @private\n   * @param {Object} prototype The prototype object.\n   * @returns {Object} Returns the new object.\n   */\n  function createObject(prototype) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n  }\n  // fallback for browsers without `Object.create`\n  if (!nativeCreate) {\n    createObject = function(prototype) {\n      if (isObject(prototype)) {\n        noop.prototype = prototype;\n        var result = new noop;\n        noop.prototype = null;\n      }\n      return result || {};\n    };\n  }\n\n  /**\n   * Used by `escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(match) {\n    return htmlEscapes[match];\n  }\n\n  /**\n   * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n   * customized, this method returns the custom method, otherwise it returns\n   * the `baseIndexOf` function.\n   *\n   * @private\n   * @returns {Function} Returns the \"indexOf\" function.\n   */\n  function getIndexOf() {\n    var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;\n    return result;\n  }\n\n  /**\n   * Used by `unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} match The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(match) {\n    return htmlUnescapes[match];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == argsClass || false;\n  }\n  // fallback for browsers that can't detect `arguments` objects by [[Class]]\n  if (!isArguments(arguments)) {\n    isArguments = function(value) {\n      return value && typeof value == 'object' && typeof value.length == 'number' &&\n        hasOwnProperty.call(value, 'callee') || false;\n    };\n  }\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == arrayClass || false;\n  };\n\n  /**\n   * A fallback implementation of `Object.keys` which produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @type Function\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   */\n  var shimKeys = function(object) {\n    var index, iterable = object, result = [];\n    if (!iterable) return result;\n    if (!(objectTypes[typeof object])) return result;\n      for (index in iterable) {\n        if (hasOwnProperty.call(iterable, index)) {\n          result.push(index);\n        }\n      }\n    return result\n  };\n\n  /**\n   * Creates an array composed of the own enumerable property names of an object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    return nativeKeys(object);\n  };\n\n  /**\n   * Used to convert characters to HTML entities:\n   *\n   * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n   * don't require escaping in HTML and have no special meaning unless they're part\n   * of a tag or an unquoted attribute value.\n   * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n   */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;'\n  };\n\n  /** Used to convert HTML entities to characters */\n  var htmlUnescapes = invert(htmlEscapes);\n\n  /** Used to match HTML entities and HTML characters */\n  var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),\n      reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite property assignments of previous\n   * sources. If a callback is provided it will be executed to produce the\n   * assigned values. The callback is bound to `thisArg` and invoked with two\n   * arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'moe' }, { 'age': 40 });\n   * // => { 'name': 'moe', 'age': 40 }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var food = { 'name': 'apple' };\n   * defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */\n  function assign(object) {\n    if (!object) {\n      return object;\n    }\n    for (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\n      var iterable = arguments[argsIndex];\n      if (iterable) {\n        for (var key in iterable) {\n          object[key] = iterable[key];\n        }\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a clone of `value`. If `deep` is `true` nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a callback\n   * is provided it will be executed to produce the cloned values. If the\n   * callback returns `undefined` cloning will be handled by the method instead.\n   * The callback is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to clone.\n   * @param {boolean} [deep=false] Specify a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the cloned value.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var shallow = _.clone(stooges);\n   * shallow[0] === stooges[0];\n   * // => true\n   *\n   * var deep = _.clone(stooges, true);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n  function clone(value) {\n    return isObject(value)\n      ? (isArray(value) ? nativeSlice.call(value) : assign({}, value))\n      : value;\n  }\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object for all destination properties that resolve to `undefined`. Once a\n   * property is set, additional defaults of the same property will be ignored.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param- {Object} [guard] Allows working with `_.reduce` without using its\n   *  `key` and `object` arguments as sources.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var food = { 'name': 'apple' };\n   * _.defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */\n  function defaults(object) {\n    if (!object) {\n      return object;\n    }\n    for (var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++) {\n      var iterable = arguments[argsIndex];\n      if (iterable) {\n        for (var key in iterable) {\n          if (typeof object[key] == 'undefined') {\n            object[key] = iterable[key];\n          }\n        }\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Iterates over own and inherited enumerable properties of an object,\n   * executing the callback for each property. The callback is bound to `thisArg`\n   * and invoked with three arguments; (value, key, object). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Dog(name) {\n   *   this.name = name;\n   * }\n   *\n   * Dog.prototype.bark = function() {\n   *   console.log('Woof, woof!');\n   * };\n   *\n   * _.forIn(new Dog('Dagny'), function(value, key) {\n   *   console.log(key);\n   * });\n   * // => logs 'bark' and 'name' (property order is not guaranteed across environments)\n   */\n  var forIn = function(collection, callback) {\n    var index, iterable = collection, result = iterable;\n    if (!iterable) return result;\n    if (!objectTypes[typeof iterable]) return result;\n      for (index in iterable) {\n        if (callback(iterable[index], index, collection) === indicatorObject) return result;\n      }\n    return result\n  };\n\n  /**\n   * Iterates over own enumerable properties of an object, executing the callback\n   * for each property. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   console.log(key);\n   * });\n   * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n   */\n  var forOwn = function(collection, callback) {\n    var index, iterable = collection, result = iterable;\n    if (!iterable) return result;\n    if (!objectTypes[typeof iterable]) return result;\n      for (index in iterable) {\n        if (hasOwnProperty.call(iterable, index)) {\n          if (callback(iterable[index], index, collection) === indicatorObject) return result;\n        }\n      }\n    return result\n  };\n\n  /**\n   * Creates a sorted array of property names of all enumerable properties,\n   * own and inherited, of `object` that have function values.\n   *\n   * @static\n   * @memberOf _\n   * @alias methods\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names that have function values.\n   * @example\n   *\n   * _.functions(_);\n   * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n   */\n  function functions(object) {\n    var result = [];\n    forIn(object, function(value, key) {\n      if (isFunction(value)) {\n        result.push(key);\n      }\n    });\n    return result.sort();\n  }\n\n  /**\n   * Checks if the specified object `property` exists and is a direct property,\n   * instead of an inherited property.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to check.\n   * @param {string} property The property to check for.\n   * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n   * @example\n   *\n   * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n   * // => true\n   */\n  function has(object, property) {\n    return object ? hasOwnProperty.call(object, property) : false;\n  }\n\n  /**\n   * Creates an object composed of the inverted keys and values of the given object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to invert.\n   * @returns {Object} Returns the created inverted object.\n   * @example\n   *\n   *  _.invert({ 'first': 'moe', 'second': 'larry' });\n   * // => { 'moe': 'first', 'larry': 'second' }\n   */\n  function invert(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = {};\n\n    while (++index < length) {\n      var key = props[index];\n      result[object[key]] = key;\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a boolean value.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n   * @example\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false || toString.call(value) == boolClass;\n  }\n\n  /**\n   * Checks if `value` is a date.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   */\n  function isDate(value) {\n    return value ? (typeof value == 'object' && toString.call(value) == dateClass) : false;\n  }\n\n  /**\n   * Checks if `value` is a DOM element.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n   * @example\n   *\n   * _.isElement(document.body);\n   * // => true\n   */\n  function isElement(value) {\n    return value ? value.nodeType === 1 : false;\n  }\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|string} value The value to inspect.\n   * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    if (!value) {\n      return true;\n    }\n    if (isArray(value) || isString(value)) {\n      return !value.length;\n    }\n    for (var key in value) {\n      if (hasOwnProperty.call(value, key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent to each other. If a callback is provided it will be executed\n   * to compare values. If the callback returns `undefined` comparisons will\n   * be handled by the method instead. The callback is bound to `thisArg` and\n   * invoked with two arguments; (a, b).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} a The value to compare.\n   * @param {*} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var moe = { 'name': 'moe', 'age': 40 };\n   * var copy = { 'name': 'moe', 'age': 40 };\n   *\n   * moe == copy;\n   * // => false\n   *\n   * _.isEqual(moe, copy);\n   * // => true\n   *\n   * var words = ['hello', 'goodbye'];\n   * var otherWords = ['hi', 'goodbye'];\n   *\n   * _.isEqual(words, otherWords, function(a, b) {\n   *   var reGreet = /^(?:hello|hi)$/i,\n   *       aGreet = _.isString(a) && reGreet.test(a),\n   *       bGreet = _.isString(b) && reGreet.test(b);\n   *\n   *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n   * });\n   * // => true\n   */\n  function isEqual(a, b) {\n    return baseIsEqual(a, b);\n  }\n\n  /**\n   * Checks if `value` is, or can be coerced to, a finite number.\n   *\n   * Note: This is not the same as native `isFinite` which will return true for\n   * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n   * @example\n   *\n   * _.isFinite(-101);\n   * // => true\n   *\n   * _.isFinite('10');\n   * // => true\n   *\n   * _.isFinite(true);\n   * // => false\n   *\n   * _.isFinite('');\n   * // => false\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   */\n  function isFinite(value) {\n    return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function(value) {\n      return typeof value == 'function' && toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.io/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return !!(value && objectTypes[typeof value]);\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * Note: This is not the same as native `isNaN` which will return `true` for\n   * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // `NaN` as a primitive is the only value that is not equal to itself\n    // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(undefined);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is a number.\n   *\n   * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(8.4 * 5);\n   * // => true\n   */\n  function isNumber(value) {\n    return typeof value == 'number' || toString.call(value) == numberClass;\n  }\n\n  /**\n   * Checks if `value` is a regular expression.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n   * @example\n   *\n   * _.isRegExp(/moe/);\n   * // => true\n   */\n  function isRegExp(value) {\n    return (value && objectTypes[typeof value]) ? toString.call(value) == regexpClass : false;\n  }\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('moe');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' || toString.call(value) == stringClass;\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   */\n  function isUndefined(value) {\n    return typeof value == 'undefined';\n  }\n\n  /**\n   * Creates a shallow clone of `object` excluding the specified properties.\n   * Property names may be specified as individual arguments or as arrays of\n   * property names. If a callback is provided it will be executed for each\n   * property of `object` omitting the properties the callback returns truey\n   * for. The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Function|...string|string[]} [callback] The properties to omit or the\n   *  function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object without the omitted properties.\n   * @example\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, 'age');\n   * // => { 'name': 'moe' }\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, function(value) {\n   *   return typeof value == 'number';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function omit(object) {\n    var indexOf = getIndexOf(),\n        props = baseFlatten(arguments, true, false, 1),\n        result = {};\n\n    forIn(object, function(value, key) {\n      if (indexOf(props, key) < 0) {\n        result[key] = value;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Creates a two dimensional array of an object's key-value pairs,\n   * i.e. `[[key1, value1], [key2, value2]]`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns new array of key-value pairs.\n   * @example\n   *\n   * _.pairs({ 'moe': 30, 'larry': 40 });\n   * // => [['moe', 30], ['larry', 40]] (property order is not guaranteed across environments)\n   */\n  function pairs(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      var key = props[index];\n      result[index] = [key, object[key]];\n    }\n    return result;\n  }\n\n  /**\n   * Creates a shallow clone of `object` composed of the specified properties.\n   * Property names may be specified as individual arguments or as arrays of\n   * property names. If a callback is provided it will be executed for each\n   * property of `object` picking the properties the callback returns truey\n   * for. The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Function|...string|string[]} [callback] The function called per\n   *  iteration or property names to pick, specified as individual property\n   *  names or arrays of property names.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object composed of the picked properties.\n   * @example\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, 'name');\n   * // => { 'name': 'moe' }\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, function(value, key) {\n   *   return key.charAt(0) != '_';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function pick(object) {\n    var index = -1,\n        props = baseFlatten(arguments, true, false, 1),\n        length = props.length,\n        result = {};\n\n    while (++index < length) {\n      var prop = props[index];\n      if (prop in object) {\n        result[prop] = object[prop];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3] (property order is not guaranteed across environments)\n   */\n  function values(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = object[props[index]];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if a given value is present in a collection using strict equality\n   * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n   * offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {*} target The value to check for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 1);\n   * // => true\n   *\n   * _.contains([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.contains({ 'name': 'moe', 'age': 40 }, 'moe');\n   * // => true\n   *\n   * _.contains('curly', 'ur');\n   * // => true\n   */\n  function contains(collection, target) {\n    var indexOf = getIndexOf(),\n        length = collection ? collection.length : 0,\n        result = false;\n    if (length && typeof length == 'number') {\n      result = indexOf(collection, target) > -1;\n    } else {\n      forOwn(collection, function(value) {\n        return (result = value === target) && indicatorObject;\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Creates an object composed of keys generated from the results of running\n   * each element of `collection` through the callback. The corresponding value\n   * of each key is the number of times the key was returned by the callback.\n   * The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy(['one', 'two', 'three'], 'length');\n   * // => { '3': 2, '5': 1 }\n   */\n  var countBy = createAggregator(function(result, value, key) {\n    (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n  });\n\n  /**\n   * Checks if the given callback returns truey value for **all** elements of\n   * a collection. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias all\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {boolean} Returns `true` if all elements passed the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.every(stooges, 'age');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.every(stooges, { 'age': 50 });\n   * // => false\n   */\n  function every(collection, callback, thisArg) {\n    var result = true;\n    callback = createCallback(callback, thisArg, 3);\n\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (typeof length == 'number') {\n      while (++index < length) {\n        if (!(result = !!callback(collection[index], index, collection))) {\n          break;\n        }\n      }\n    } else {\n      forOwn(collection, function(value, index, collection) {\n        return !(result = !!callback(value, index, collection)) && indicatorObject;\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Iterates over elements of a collection, returning an array of all elements\n   * the callback returns truey for. The callback is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias select\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that passed the callback check.\n   * @example\n   *\n   * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [2, 4, 6]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.filter(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.filter(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   */\n  function filter(collection, callback, thisArg) {\n    var result = [];\n    callback = createCallback(callback, thisArg, 3);\n\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (typeof length == 'number') {\n      while (++index < length) {\n        var value = collection[index];\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      }\n    } else {\n      forOwn(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Iterates over elements of a collection, returning the first element that\n   * the callback returns truey for. The callback is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias detect, findWhere\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the found element, else `undefined`.\n   * @example\n   *\n   * _.find([1, 2, 3, 4], function(num) {\n   *   return num % 2 == 0;\n   * });\n   * // => 2\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'banana', 'organic': true,  'type': 'fruit' },\n   *   { 'name': 'beet',   'organic': false, 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.find(food, { 'type': 'vegetable' });\n   * // => { 'name': 'beet', 'organic': false, 'type': 'vegetable' }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.find(food, 'organic');\n   * // => { 'name': 'banana', 'organic': true, 'type': 'fruit' }\n   */\n  function find(collection, callback, thisArg) {\n    callback = createCallback(callback, thisArg, 3);\n\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (typeof length == 'number') {\n      while (++index < length) {\n        var value = collection[index];\n        if (callback(value, index, collection)) {\n          return value;\n        }\n      }\n    } else {\n      var result;\n      forOwn(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result = value;\n          return indicatorObject;\n        }\n      });\n      return result;\n    }\n  }\n\n  /**\n   * Examines each element in a `collection`, returning the first that\n   * has the given properties. When checking `properties`, this method\n   * performs a deep comparison between values to determine if they are\n   * equivalent to each other.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Object} properties The object of property values to filter by.\n   * @returns {*} Returns the found element, else `undefined`.\n   * @example\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'banana', 'organic': true,  'type': 'fruit' },\n   *   { 'name': 'beet',   'organic': false, 'type': 'vegetable' }\n   * ];\n   *\n   * _.findWhere(food, { 'type': 'vegetable' });\n   * // => { 'name': 'beet', 'organic': false, 'type': 'vegetable' }\n   */\n  function findWhere(object, properties) {\n    return where(object, properties, true);\n  }\n\n  /**\n   * Iterates over elements of a collection, executing the callback for each\n   * element. The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n   * // => logs each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n   * // => logs each number and returns the object (property order is not guaranteed across environments)\n   */\n  function forEach(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n    if (typeof length == 'number') {\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === indicatorObject) {\n          break;\n        }\n      }\n    } else {\n      forOwn(collection, callback);\n    }\n  }\n\n  /**\n   * This method is like `_.forEach` except that it iterates over elements\n   * of a `collection` from right to left.\n   *\n   * @static\n   * @memberOf _\n   * @alias eachRight\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|string} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n   * // => logs each number from right to left and returns '3,2,1'\n   */\n  function forEachRight(collection, callback) {\n    var length = collection ? collection.length : 0;\n    if (typeof length == 'number') {\n      while (length--) {\n        if (callback(collection[length], length, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      var props = keys(collection);\n      length = props.length;\n      forOwn(collection, function(value, key, collection) {\n        key = props ? props[--length] : --length;\n        return callback(collection[key], key, collection) === false && indicatorObject;\n      });\n    }\n  }\n\n  /**\n   * Creates an object composed of keys generated from the results of running\n   * each element of a collection through the callback. The corresponding value\n   * of each key is an array of the elements responsible for generating the key.\n   * The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.groupBy(['one', 'two', 'three'], 'length');\n   * // => { '3': ['one', 'two'], '5': ['three'] }\n   */\n  var groupBy = createAggregator(function(result, value, key) {\n    (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n  });\n\n  /**\n   * Creates an object composed of keys generated from the results of running\n   * each element of the collection through the given callback. The corresponding\n   * value of each key is the last element responsible for generating the key.\n   * The callback is bound to `thisArg` and invoked with three arguments;\n   * (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * var keys = [\n   *   { 'dir': 'left', 'code': 97 },\n   *   { 'dir': 'right', 'code': 100 }\n   * ];\n   *\n   * _.indexBy(keys, 'dir');\n   * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n   *\n   * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n   * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n   *\n   * _.indexBy(stooges, function(key) { this.fromCharCode(key.code); }, String);\n   * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n   */\n  var indexBy = createAggregator(function(result, value, key) {\n    result[key] = value;\n  });\n\n  /**\n   * Invokes the method named by `methodName` on each element in the `collection`\n   * returning an array of the results of each invoked method. Additional arguments\n   * will be provided to each invoked method. If `methodName` is a function it\n   * will be invoked for, and `this` bound to, each element in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|string} methodName The name of the method to invoke or\n   *  the function invoked per iteration.\n   * @param {...*} [arg] Arguments to invoke the method with.\n   * @returns {Array} Returns a new array of the results of each invoked method.\n   * @example\n   *\n   * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n   * // => [[1, 5, 7], [1, 2, 3]]\n   *\n   * _.invoke([123, 456], String.prototype.split, '');\n   * // => [['1', '2', '3'], ['4', '5', '6']]\n   */\n  function invoke(collection, methodName) {\n    var args = nativeSlice.call(arguments, 2),\n        index = -1,\n        isFunc = typeof methodName == 'function',\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function(value) {\n      result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n    });\n    return result;\n  }\n\n  /**\n   * Creates an array of values by running each element in the collection\n   * through the callback. The callback is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (property order is not guaranteed across environments)\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(stooges, 'name');\n   * // => ['moe', 'larry']\n   */\n  function map(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    callback = createCallback(callback, thisArg, 3);\n    if (typeof length == 'number') {\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = callback(collection[index], index, collection);\n      }\n    } else {\n      result = [];\n      forOwn(collection, function(value, key, collection) {\n        result[++index] = callback(value, key, collection);\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the maximum value of a collection. If the collection is empty or\n   * falsey `-Infinity` is returned. If a callback is provided it will be executed\n   * for each value in the collection to generate the criterion by which the value\n   * is ranked. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.max(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'larry', 'age': 50 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.max(stooges, 'age');\n   * // => { 'name': 'larry', 'age': 50 };\n   */\n  function max(collection, callback, thisArg) {\n    var computed = -Infinity,\n        result = computed;\n\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (!callback && typeof length == 'number') {\n      while (++index < length) {\n        var value = collection[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      callback = createCallback(callback, thisArg, 3);\n\n      forEach(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current > computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the minimum value of a collection. If the collection is empty or\n   * falsey `Infinity` is returned. If a callback is provided it will be executed\n   * for each value in the collection to generate the criterion by which the value\n   * is ranked. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.min(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'moe', 'age': 40 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.min(stooges, 'age');\n   * // => { 'name': 'moe', 'age': 40 };\n   */\n  function min(collection, callback, thisArg) {\n    var computed = Infinity,\n        result = computed;\n\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (!callback && typeof length == 'number') {\n      while (++index < length) {\n        var value = collection[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      callback = createCallback(callback, thisArg, 3);\n\n      forEach(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current < computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the value of a specified property from all elements in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {string} property The property to pluck.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.pluck(stooges, 'name');\n   * // => ['moe', 'larry']\n   */\n  function pluck(collection, property) {\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (typeof length == 'number') {\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = collection[index][property];\n      }\n    }\n    return result || map(collection, property);\n  }\n\n  /**\n   * Reduces a collection to a value which is the accumulated result of running\n   * each element in the collection through the callback, where each successive\n   * callback execution consumes the return value of the previous execution. If\n   * `accumulator` is not provided the first element of the collection will be\n   * used as the initial `accumulator` value. The callback is bound to `thisArg`\n   * and invoked with four arguments; (accumulator, value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias foldl, inject\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [accumulator] Initial value of the accumulator.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the accumulated value.\n   * @example\n   *\n   * var sum = _.reduce([1, 2, 3], function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n   *   result[key] = num * 3;\n   *   return result;\n   * }, {});\n   * // => { 'a': 3, 'b': 6, 'c': 9 }\n   */\n  function reduce(collection, callback, accumulator, thisArg) {\n    if (!collection) return accumulator;\n    var noaccum = arguments.length < 3;\n    callback = baseCreateCallback(callback, thisArg, 4);\n\n    var index = -1,\n        length = collection.length;\n\n    if (typeof length == 'number') {\n      if (noaccum) {\n        accumulator = collection[++index];\n      }\n      while (++index < length) {\n        accumulator = callback(accumulator, collection[index], index, collection);\n      }\n    } else {\n      forOwn(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection)\n      });\n    }\n    return accumulator;\n  }\n\n  /**\n   * This method is like `_.reduce` except that it iterates over elements\n   * of a `collection` from right to left.\n   *\n   * @static\n   * @memberOf _\n   * @alias foldr\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [accumulator] Initial value of the accumulator.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the accumulated value.\n   * @example\n   *\n   * var list = [[0, 1], [2, 3], [4, 5]];\n   * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n   * // => [4, 5, 2, 3, 0, 1]\n   */\n  function reduceRight(collection, callback, accumulator, thisArg) {\n    var noaccum = arguments.length < 3;\n    callback = baseCreateCallback(callback, thisArg, 4);\n    forEachRight(collection, function(value, index, collection) {\n      accumulator = noaccum\n        ? (noaccum = false, value)\n        : callback(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The opposite of `_.filter` this method returns the elements of a\n   * collection that the callback does **not** return truey for.\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that failed the callback check.\n   * @example\n   *\n   * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [1, 3, 5]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.reject(food, 'organic');\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.reject(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   */\n  function reject(collection, callback, thisArg) {\n    callback = createCallback(callback, thisArg, 3);\n    return filter(collection, function(value, index, collection) {\n      return !callback(value, index, collection);\n    });\n  }\n\n  /**\n   * Retrieves a random element or `n` random elements from a collection.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to sample.\n   * @param {number} [n] The number of elements to sample.\n   * @param- {Object} [guard] Allows working with functions, like `_.map`,\n   *  without using their `key` and `object` arguments as sources.\n   * @returns {Array} Returns the random sample(s) of `collection`.\n   * @example\n   *\n   * _.sample([1, 2, 3, 4]);\n   * // => 2\n   *\n   * _.sample([1, 2, 3, 4], 2);\n   * // => [3, 1]\n   */\n  function sample(collection, n, guard) {\n    var length = collection ? collection.length : 0;\n    if (typeof length != 'number') {\n      collection = values(collection);\n    }\n    if (n == null || guard) {\n      return collection ? collection[random(length - 1)] : undefined;\n    }\n    var result = shuffle(collection);\n    result.length = nativeMin(nativeMax(0, n), result.length);\n    return result;\n  }\n\n  /**\n   * Creates an array of shuffled values, using a version of the Fisher-Yates\n   * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to shuffle.\n   * @returns {Array} Returns a new shuffled collection.\n   * @example\n   *\n   * _.shuffle([1, 2, 3, 4, 5, 6]);\n   * // => [4, 1, 6, 3, 5, 2]\n   */\n  function shuffle(collection) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function(value) {\n      var rand = random(++index);\n      result[index] = result[rand];\n      result[rand] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the size of the `collection` by returning `collection.length` for arrays\n   * and array-like objects or the number of own enumerable properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns `collection.length` or number of own enumerable properties.\n   * @example\n   *\n   * _.size([1, 2]);\n   * // => 2\n   *\n   * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => 3\n   *\n   * _.size('curly');\n   * // => 5\n   */\n  function size(collection) {\n    var length = collection ? collection.length : 0;\n    return typeof length == 'number' ? length : keys(collection).length;\n  }\n\n  /**\n   * Checks if the callback returns a truey value for **any** element of a\n   * collection. The function returns as soon as it finds a passing value and\n   * does not iterate over the entire collection. The callback is bound to\n   * `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias any\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {boolean} Returns `true` if any element passed the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.some(food, 'organic');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.some(food, { 'type': 'meat' });\n   * // => false\n   */\n  function some(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg, 3);\n\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (typeof length == 'number') {\n      while (++index < length) {\n        if ((result = callback(collection[index], index, collection))) {\n          break;\n        }\n      }\n    } else {\n      forOwn(collection, function(value, index, collection) {\n        return (result = callback(value, index, collection)) && indicatorObject;\n      });\n    }\n    return !!result;\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection through the callback. This method\n   * performs a stable sort, that is, it will preserve the original sort order\n   * of equal elements. The callback is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of sorted elements.\n   * @example\n   *\n   * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n   * // => [3, 1, 2]\n   *\n   * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n   * // => [3, 1, 2]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortBy(['banana', 'strawberry', 'apple'], 'length');\n   * // => ['apple', 'banana', 'strawberry']\n   */\n  function sortBy(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = createCallback(callback, thisArg, 3);\n    forEach(collection, function(value, key, collection) {\n      result[++index] = {\n        'criteria': callback(value, key, collection),\n        'index': index,\n        'value': value\n      };\n    });\n\n    length = result.length;\n    result.sort(compareAscending);\n    while (length--) {\n      result[length] = result[length].value;\n    }\n    return result;\n  }\n\n  /**\n   * Converts the `collection` to an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to convert.\n   * @returns {Array} Returns the new converted array.\n   * @example\n   *\n   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n   * // => [2, 3, 4]\n   */\n  function toArray(collection) {\n    if (isArray(collection)) {\n      return nativeSlice.call(collection);\n    }\n    if (collection && typeof collection.length == 'number') {\n      return map(collection);\n    }\n    return values(collection);\n  }\n\n  /**\n   * Performs a deep comparison of each element in a `collection` to the given\n   * `properties` object, returning an array of all elements that have equivalent\n   * property values.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Object} properties The object of property values to filter by.\n   * @returns {Array} Returns a new array of elements that have the given properties.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'curly', 'age': 30, 'quotes': ['Oh, a wise guy, eh?', 'Poifect!'] },\n   *   { 'name': 'moe', 'age': 40, 'quotes': ['Spread out!', 'You knucklehead!'] }\n   * ];\n   *\n   * _.where(stooges, { 'age': 40 });\n   * // => [{ 'name': 'moe', 'age': 40, 'quotes': ['Spread out!', 'You knucklehead!'] }]\n   *\n   * _.where(stooges, { 'quotes': ['Poifect!'] });\n   * // => [{ 'name': 'curly', 'age': 30, 'quotes': ['Oh, a wise guy, eh?', 'Poifect!'] }]\n   */\n  function where(collection, properties, first) {\n    return (first && isEmpty(properties))\n      ? undefined\n      : (first ? find : filter)(collection, properties);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array excluding all values of the provided arrays using strict\n   * equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {...Array} [array] The arrays of values to exclude.\n   * @returns {Array} Returns a new array of filtered values.\n   * @example\n   *\n   * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n   * // => [1, 3, 4]\n   */\n  function difference(array) {\n    var index = -1,\n        indexOf = getIndexOf(),\n        length = array.length,\n        flattened = baseFlatten(arguments, true, true, 1),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (indexOf(flattened, value) < 0) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the first element or first `n` elements of an array. If a callback\n   * is provided elements at the beginning of the array are returned as long\n   * as the callback returns truey. The callback is bound to `thisArg` and\n   * invoked with three arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias head, take\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|number|string} [callback] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the first element(s) of `array`.\n   * @example\n   *\n   * _.first([1, 2, 3]);\n   * // => 1\n   *\n   * _.first([1, 2, 3], 2);\n   * // => [1, 2]\n   *\n   * _.first([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [1, 2]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.first(food, 'organic');\n   * // => [{ 'name': 'banana', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.first(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'type': 'fruit' }, { 'name': 'banana', 'type': 'fruit' }]\n   */\n  function first(array, callback, thisArg) {\n    var n = 0,\n        length = array ? array.length : 0;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = -1;\n      callback = createCallback(callback, thisArg, 3);\n      while (++index < length && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = callback;\n      if (n == null || thisArg) {\n        return array ? array[0] : undefined;\n      }\n    }\n    return nativeSlice.call(array, 0, nativeMin(nativeMax(0, n), length));\n  }\n\n  /**\n   * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n   * is truey, the array will only be flattened a single level. If a callback\n   * is provided each element of the array is passed through the callback before\n   * flattening. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to flatten.\n   * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   *\n   * var stooges = [\n   *   { 'name': 'curly', 'quotes': ['Oh, a wise guy, eh?', 'Poifect!'] },\n   *   { 'name': 'moe', 'quotes': ['Spread out!', 'You knucklehead!'] }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.flatten(stooges, 'quotes');\n   * // => ['Oh, a wise guy, eh?', 'Poifect!', 'Spread out!', 'You knucklehead!']\n   */\n  function flatten(array, isShallow) {\n    return baseFlatten(array, isShallow);\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found using\n   * strict equality for comparisons, i.e. `===`. If the array is already sorted\n   * providing `true` for `fromIndex` will run a faster binary search.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n   *  to perform a binary search on a sorted array.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 1\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 4\n   *\n   * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n   * // => 2\n   */\n  function indexOf(array, value, fromIndex) {\n    if (typeof fromIndex == 'number') {\n      var length = array ? array.length : 0;\n      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n    } else if (fromIndex) {\n      var index = sortedIndex(array, value);\n      return array[index] === value ? index : -1;\n    }\n    return baseIndexOf(array, value, fromIndex);\n  }\n\n  /**\n   * Gets all but the last element or last `n` elements of an array. If a\n   * callback is provided elements at the end of the array are excluded from\n   * the result as long as the callback returns truey. The callback is bound\n   * to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|number|string} [callback=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.initial([1, 2, 3]);\n   * // => [1, 2]\n   *\n   * _.initial([1, 2, 3], 2);\n   * // => [1]\n   *\n   * _.initial([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [1]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.initial(food, 'organic');\n   * // => [{ 'name': 'beet',   'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.initial(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'banana', 'type': 'fruit' }]\n   */\n  function initial(array, callback, thisArg) {\n    var n = 0,\n        length = array ? array.length : 0;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = length;\n      callback = createCallback(callback, thisArg, 3);\n      while (index-- && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = (callback == null || thisArg) ? 1 : callback || n;\n    }\n    return nativeSlice.call(array, 0, nativeMin(nativeMax(0, length - n), length));\n  }\n\n  /**\n   * Creates an array of unique values present in all provided arrays using\n   * strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {...Array} [array] The arrays to inspect.\n   * @returns {Array} Returns an array of composite values.\n   * @example\n   *\n   * _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2]\n   */\n  function intersection(array) {\n    var args = arguments,\n        argsLength = args.length,\n        index = -1,\n        indexOf = getIndexOf(),\n        length = array ? array.length : 0,\n        result = [];\n\n    outer:\n    while (++index < length) {\n      var value = array[index];\n      if (indexOf(result, value) < 0) {\n        var argsIndex = argsLength;\n        while (--argsIndex) {\n          if (indexOf(args[argsIndex], value) < 0) {\n            continue outer;\n          }\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the last element or last `n` elements of an array. If a callback is\n   * provided elements at the end of the array are returned as long as the\n   * callback returns truey. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|number|string} [callback] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the last element(s) of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   *\n   * _.last([1, 2, 3], 2);\n   * // => [2, 3]\n   *\n   * _.last([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [2, 3]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.last(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.last(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }, { 'name': 'carrot', 'type': 'vegetable' }]\n   */\n  function last(array, callback, thisArg) {\n    var n = 0,\n        length = array ? array.length : 0;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = length;\n      callback = createCallback(callback, thisArg, 3);\n      while (index-- && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = callback;\n      if (n == null || thisArg) {\n        return array ? array[length - 1] : undefined;\n      }\n    }\n    return nativeSlice.call(array, nativeMax(0, length - n));\n  }\n\n  /**\n   * Gets the index at which the last occurrence of `value` is found using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=array.length-1] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 4\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 1\n   */\n  function lastIndexOf(array, value, fromIndex) {\n    var index = array ? array.length : 0;\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n    }\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Creates an array of numbers (positive and/or negative) progressing from\n   * `start` up to but not including `end`. If `start` is less than `stop` a\n   * zero-length range is created unless a negative `step` is specified.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {number} [start=0] The start of the range.\n   * @param {number} end The end of the range.\n   * @param {number} [step=1] The value to increment or decrement by.\n   * @returns {Array} Returns a new range array.\n   * @example\n   *\n   * _.range(10);\n   * // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n   *\n   * _.range(1, 11);\n   * // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n   *\n   * _.range(0, 30, 5);\n   * // => [0, 5, 10, 15, 20, 25]\n   *\n   * _.range(0, -10, -1);\n   * // => [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n   *\n   * _.range(1, 4, 0);\n   * // => [1, 1, 1]\n   *\n   * _.range(0);\n   * // => []\n   */\n  function range(start, end, step) {\n    start = +start || 0;\n    step =  (+step || 1);\n\n    if (end == null) {\n      end = start;\n      start = 0;\n    }\n    // use `Array(length)` so engines, like Chakra and V8, avoid slower modes\n    // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n    var index = -1,\n        length = nativeMax(0, ceil((end - start) / step)),\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = start;\n      start += step;\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.initial` this method gets all but the first element or\n   * first `n` elements of an array. If a callback function is provided elements\n   * at the beginning of the array are excluded from the result as long as the\n   * callback returns truey. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias drop, tail\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|number|string} [callback=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.rest([1, 2, 3]);\n   * // => [2, 3]\n   *\n   * _.rest([1, 2, 3], 2);\n   * // => [3]\n   *\n   * _.rest([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [3]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.rest(food, 'organic');\n   * // => [{ 'name': 'beet', 'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.rest(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }]\n   */\n  function rest(array, callback, thisArg) {\n    if (typeof callback != 'number' && callback != null) {\n      var n = 0,\n          index = -1,\n          length = array ? array.length : 0;\n\n      callback = createCallback(callback, thisArg, 3);\n      while (++index < length && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n    }\n    return nativeSlice.call(array, n);\n  }\n\n  /**\n   * Uses a binary search to determine the smallest index at which a value\n   * should be inserted into a given sorted array in order to maintain the sort\n   * order of the array. If a callback is provided it will be executed for\n   * `value` and each element of `array` to compute their sort ranking. The\n   * callback is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to evaluate.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {number} Returns the index at which `value` should be inserted\n   *  into `array`.\n   * @example\n   *\n   * _.sortedIndex([20, 30, 50], 40);\n   * // => 2\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n   * // => 2\n   *\n   * var dict = {\n   *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n   * };\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return dict.wordToNumber[word];\n   * });\n   * // => 2\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return this.wordToNumber[word];\n   * }, dict);\n   * // => 2\n   */\n  function sortedIndex(array, value, callback, thisArg) {\n    var low = 0,\n        high = array ? array.length : low;\n\n    // explicitly reference `identity` for better inlining in Firefox\n    callback = callback ? createCallback(callback, thisArg, 1) : identity;\n    value = callback(value);\n\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      (callback(array[mid]) < value)\n        ? low = mid + 1\n        : high = mid;\n    }\n    return low;\n  }\n\n  /**\n   * Creates an array of unique values, in order, of the provided arrays using\n   * strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {...Array} [array] The arrays to inspect.\n   * @returns {Array} Returns an array of composite values.\n   * @example\n   *\n   * _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2, 3, 101, 10]\n   */\n  function union(array) {\n    return baseUniq(baseFlatten(arguments, true, true));\n  }\n\n  /**\n   * Creates a duplicate-value-free version of an array using strict equality\n   * for comparisons, i.e. `===`. If the array is sorted, providing\n   * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n   * each element of `array` is passed through the callback before uniqueness\n   * is computed. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias unique\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a duplicate-value-free array.\n   * @example\n   *\n   * _.uniq([1, 2, 1, 3, 1]);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 1, 2, 2, 3], true);\n   * // => [1, 2, 3]\n   *\n   * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n   * // => ['A', 'b', 'C']\n   *\n   * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n   * // => [1, 2.5, 3]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n   * // => [{ 'x': 1 }, { 'x': 2 }]\n   */\n  function uniq(array, isSorted, callback, thisArg) {\n    // juggle arguments\n    if (typeof isSorted != 'boolean' && isSorted != null) {\n      thisArg = callback;\n      callback = !(thisArg && thisArg[isSorted] === array) ? isSorted : null;\n      isSorted = false;\n    }\n    if (callback != null) {\n      callback = createCallback(callback, thisArg, 3);\n    }\n    return baseUniq(array, isSorted, callback);\n  }\n\n  /**\n   * Creates an array excluding all provided values using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to filter.\n   * @param {...*} [value] The values to exclude.\n   * @returns {Array} Returns a new array of filtered values.\n   * @example\n   *\n   * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n   * // => [2, 3, 4]\n   */\n  function without(array) {\n    return difference(array, nativeSlice.call(arguments, 1));\n  }\n\n  /**\n   * Creates an array of grouped elements, the first of which contains the first\n   * elements of the given arrays, the second of which contains the second\n   * elements of the given arrays, and so on.\n   *\n   * @static\n   * @memberOf _\n   * @alias unzip\n   * @category Arrays\n   * @param {...Array} [array] Arrays to process.\n   * @returns {Array} Returns a new array of grouped elements.\n   * @example\n   *\n   * _.zip(['moe', 'larry'], [30, 40], [true, false]);\n   * // => [['moe', 30, true], ['larry', 40, false]]\n   */\n  function zip() {\n    var index = -1,\n        length = max(pluck(arguments, 'length')),\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = pluck(arguments, index);\n    }\n    return result;\n  }\n\n  /**\n   * Creates an object composed from arrays of `keys` and `values`. Provide\n   * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n   * or two arrays, one of `keys` and one of corresponding `values`.\n   *\n   * @static\n   * @memberOf _\n   * @alias object\n   * @category Arrays\n   * @param {Array} keys The array of keys.\n   * @param {Array} [values=[]] The array of values.\n   * @returns {Object} Returns an object composed of the given keys and\n   *  corresponding values.\n   * @example\n   *\n   * _.zipObject(['moe', 'larry'], [30, 40]);\n   * // => { 'moe': 30, 'larry': 40 }\n   */\n  function zipObject(keys, values) {\n    var index = -1,\n        length = keys ? keys.length : 0,\n        result = {};\n\n    while (++index < length) {\n      var key = keys[index];\n      if (values) {\n        result[key] = values[index];\n      } else if (key) {\n        result[key[0]] = key[1];\n      }\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that executes `func`, with  the `this` binding and\n   * arguments of the created function, only after being called `n` times.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {number} n The number of times the function must be called before\n   *  `func` is executed.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var saves = ['profile', 'settings'];\n   *\n   * var done = _.after(saves.length, function() {\n   *   console.log('Done saving!');\n   * });\n   *\n   * _.forEach(saves, function(type) {\n   *   asyncSave({ 'type': type, 'complete': done });\n   * });\n   * // => logs 'Done saving!', after all saves have completed\n   */\n  function after(n, func) {\n    if (!isFunction(func)) {\n      throw new TypeError;\n    }\n    return function() {\n      if (--n < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * provided to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'moe' }, 'hi');\n   * func();\n   * // => 'hi moe'\n   */\n  function bind(func, thisArg) {\n    return arguments.length > 2\n      ? createBound(func, 17, nativeSlice.call(arguments, 2), null, thisArg)\n      : createBound(func, 1, null, null, thisArg);\n  }\n\n  /**\n   * Binds methods of an object to the object itself, overwriting the existing\n   * method. Method names may be specified as individual arguments or as arrays\n   * of method names. If no method names are provided all the function properties\n   * of `object` will be bound.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object to bind and assign the bound methods to.\n   * @param {...string} [methodName] The object method names to\n   *  bind, specified as individual method names or arrays of method names.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * var view = {\n   *  'label': 'docs',\n   *  'onClick': function() { console.log('clicked ' + this.label); }\n   * };\n   *\n   * _.bindAll(view);\n   * jQuery('#docs').on('click', view.onClick);\n   * // => logs 'clicked docs', when the button is clicked\n   */\n  function bindAll(object) {\n    var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n        index = -1,\n        length = funcs.length;\n\n    while (++index < length) {\n      var key = funcs[index];\n      object[key] = createBound(object[key], 1, null, null, object);\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function that is the composition of the provided functions,\n   * where each function consumes the return value of the function that follows.\n   * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n   * Each function is executed with the `this` binding of the composed function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {...Function} [func] Functions to compose.\n   * @returns {Function} Returns the new composed function.\n   * @example\n   *\n   * var realNameMap = {\n   *   'curly': 'jerome'\n   * };\n   *\n   * var format = function(name) {\n   *   name = realNameMap[name.toLowerCase()] || name;\n   *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n   * };\n   *\n   * var greet = function(formatted) {\n   *   return 'Hiya ' + formatted + '!';\n   * };\n   *\n   * var welcome = _.compose(greet, format);\n   * welcome('curly');\n   * // => 'Hiya Jerome!'\n   */\n  function compose() {\n    var funcs = arguments,\n        length = funcs.length;\n\n    while (length--) {\n      if (!isFunction(funcs[length])) {\n        throw new TypeError;\n      }\n    }\n    return function() {\n      var args = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        args = [funcs[length].apply(this, args)];\n      }\n      return args[0];\n    };\n  }\n\n  /**\n   * Produces a callback bound to an optional `thisArg`. If `func` is a property\n   * name the created callback will return the property value for a given element.\n   * If `func` is an object the created callback will return `true` for elements\n   * that contain the equivalent object properties, otherwise it will return `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // wrap to create custom callback shorthands\n   * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n   *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n   *   return !match ? func(callback, thisArg) : function(object) {\n   *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n   *   };\n   * });\n   *\n   * _.filter(stooges, 'age__gt45');\n   * // => [{ 'name': 'larry', 'age': 50 }]\n   */\n  function createCallback(func, thisArg, argCount) {\n    var type = typeof func;\n    if (func == null || type == 'function') {\n      return baseCreateCallback(func, thisArg, argCount);\n    }\n    // handle \"_.pluck\" style callback shorthands\n    if (type != 'object') {\n      return function(object) {\n        return object[func];\n      };\n    }\n    var props = keys(func);\n    return function(object) {\n      var length = props.length,\n          result = false;\n\n      while (length--) {\n        if (!(result = object[props[length]] === func[props[length]])) {\n          break;\n        }\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that will delay the execution of `func` until after\n   * `wait` milliseconds have elapsed since the last time it was invoked.\n   * Provide an options object to indicate that `func` should be invoked on\n   * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n   * to the debounced function will return the result of the last `func` call.\n   *\n   * Note: If `leading` and `trailing` options are `true` `func` will be called\n   * on the trailing edge of the timeout only if the the debounced function is\n   * invoked more than once during the `wait` timeout.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to debounce.\n   * @param {number} wait The number of milliseconds to delay.\n   * @param {Object} [options] The options object.\n   * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n   * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n   * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n   * @returns {Function} Returns the new debounced function.\n   * @example\n   *\n   * // avoid costly calculations while the window size is in flux\n   * var lazyLayout = _.debounce(calculateLayout, 150);\n   * jQuery(window).on('resize', lazyLayout);\n   *\n   * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n   * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n   *   'leading': true,\n   *   'trailing': false\n   * });\n   *\n   * // ensure `batchLog` is executed once after 1 second of debounced calls\n   * var source = new EventSource('/stream');\n   * source.addEventListener('message', _.debounce(batchLog, 250, {\n   *   'maxWait': 1000\n   * }, false);\n   */\n  function debounce(func, wait, options) {\n    var args,\n        maxTimeoutId,\n        result,\n        stamp,\n        thisArg,\n        timeoutId,\n        trailingCall,\n        lastCalled = 0,\n        maxWait = false,\n        trailing = true;\n\n    if (!isFunction(func)) {\n      throw new TypeError;\n    }\n    wait = nativeMax(0, wait) || 0;\n    if (options === true) {\n      var leading = true;\n      trailing = false;\n    } else if (isObject(options)) {\n      leading = options.leading;\n      maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n      trailing = 'trailing' in options ? options.trailing : trailing;\n    }\n    var delayed = function() {\n      var remaining = wait - (now() - stamp);\n      if (remaining <= 0) {\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        var isCalled = trailingCall;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n        }\n      } else {\n        timeoutId = setTimeout(delayed, remaining);\n      }\n    };\n\n    var maxDelayed = function() {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      maxTimeoutId = timeoutId = trailingCall = undefined;\n      if (trailing || (maxWait !== wait)) {\n        lastCalled = now();\n        result = func.apply(thisArg, args);\n      }\n    };\n\n    return function() {\n      args = arguments;\n      stamp = now();\n      thisArg = this;\n      trailingCall = trailing && (timeoutId || !leading);\n\n      if (maxWait === false) {\n        var leadingCall = leading && !timeoutId;\n      } else {\n        if (!maxTimeoutId && !leading) {\n          lastCalled = stamp;\n        }\n        var remaining = maxWait - (stamp - lastCalled);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            maxTimeoutId = clearTimeout(maxTimeoutId);\n          }\n          lastCalled = stamp;\n          result = func.apply(thisArg, args);\n        }\n        else if (!maxTimeoutId) {\n          maxTimeoutId = setTimeout(maxDelayed, remaining);\n        }\n      }\n      if (!timeoutId && wait !== maxWait) {\n        timeoutId = setTimeout(delayed, wait);\n      }\n      if (leadingCall) {\n        result = func.apply(thisArg, args);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Defers executing the `func` function until the current call stack has cleared.\n   * Additional arguments will be provided to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to defer.\n   * @param {...*} [arg] Arguments to invoke the function with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function() { console.log('deferred'); });\n   * // returns from the function before 'deferred' is logged\n   */\n  function defer(func) {\n    if (!isFunction(func)) {\n      throw new TypeError;\n    }\n    var args = nativeSlice.call(arguments, 1);\n    return setTimeout(function() { func.apply(undefined, args); }, 1);\n  }\n\n  /**\n   * Executes the `func` function after `wait` milliseconds. Additional arguments\n   * will be provided to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay execution.\n   * @param {...*} [arg] Arguments to invoke the function with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * var log = _.bind(console.log, console);\n   * _.delay(log, 1000, 'logged later');\n   * // => 'logged later' (Appears after one second.)\n   */\n  function delay(func, wait) {\n    if (!isFunction(func)) {\n      throw new TypeError;\n    }\n    var args = nativeSlice.call(arguments, 2);\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * Creates a function that memoizes the result of `func`. If `resolver` is\n   * provided it will be used to determine the cache key for storing the result\n   * based on the arguments provided to the memoized function. By default, the\n   * first argument provided to the memoized function is used as the cache key.\n   * The `func` is executed with the `this` binding of the memoized function.\n   * The result cache is exposed as the `cache` property on the memoized function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to have its output memoized.\n   * @param {Function} [resolver] A function used to resolve the cache key.\n   * @returns {Function} Returns the new memoizing function.\n   * @example\n   *\n   * var fibonacci = _.memoize(function(n) {\n   *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n   * });\n   *\n   * var data = {\n   *   'moe': { 'name': 'moe', 'age': 40 },\n   *   'curly': { 'name': 'curly', 'age': 60 }\n   * };\n   *\n   * // modifying the result cache\n   * var stooge = _.memoize(function(name) { return data[name]; }, _.identity);\n   * stooge('curly');\n   * // => { 'name': 'curly', 'age': 60 }\n   *\n   * stooge.cache.curly.name = 'jerome';\n   * stooge('curly');\n   * // => { 'name': 'jerome', 'age': 60 }\n   */\n  function memoize(func, resolver) {\n    var cache = {};\n    return function() {\n      var key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n      return hasOwnProperty.call(cache, key)\n        ? cache[key]\n        : (cache[key] = func.apply(this, arguments));\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to execute `func` once. Repeat calls to\n   * the function will return the value of the first call. The `func` is executed\n   * with the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // `initialize` executes `createApplication` once\n   */\n  function once(func) {\n    var ran,\n        result;\n\n    if (!isFunction(func)) {\n      throw new TypeError;\n    }\n    return function() {\n      if (ran) {\n        return result;\n      }\n      ran = true;\n      result = func.apply(this, arguments);\n\n      // clear the `func` variable so the function may be garbage collected\n      func = null;\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with any additional\n   * `partial` arguments prepended to those provided to the new function. This\n   * method is similar to `_.bind` except it does **not** alter the `this` binding.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var greet = function(greeting, name) { return greeting + ' ' + name; };\n   * var hi = _.partial(greet, 'hi');\n   * hi('moe');\n   * // => 'hi moe'\n   */\n  function partial(func) {\n    return createBound(func, 16, nativeSlice.call(arguments, 1));\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the `func` function\n   * at most once per every `wait` milliseconds. Provide an options object to\n   * indicate that `func` should be invoked on the leading and/or trailing edge\n   * of the `wait` timeout. Subsequent calls to the throttled function will\n   * return the result of the last `func` call.\n   *\n   * Note: If `leading` and `trailing` options are `true` `func` will be called\n   * on the trailing edge of the timeout only if the the throttled function is\n   * invoked more than once during the `wait` timeout.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to throttle.\n   * @param {number} wait The number of milliseconds to throttle executions to.\n   * @param {Object} [options] The options object.\n   * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n   * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n   * @returns {Function} Returns the new throttled function.\n   * @example\n   *\n   * // avoid excessively updating the position while scrolling\n   * var throttled = _.throttle(updatePosition, 100);\n   * jQuery(window).on('scroll', throttled);\n   *\n   * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n   * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n   *   'trailing': false\n   * }));\n   */\n  function throttle(func, wait, options) {\n    var leading = true,\n        trailing = true;\n\n    if (!isFunction(func)) {\n      throw new TypeError;\n    }\n    if (options === false) {\n      leading = false;\n    } else if (isObject(options)) {\n      leading = 'leading' in options ? options.leading : leading;\n      trailing = 'trailing' in options ? options.trailing : trailing;\n    }\n    options = {};\n    options.leading = leading;\n    options.maxWait = wait;\n    options.trailing = trailing;\n\n    return debounce(func, wait, options);\n  }\n\n  /**\n   * Creates a function that provides `value` to the wrapper function as its\n   * first argument. Additional arguments provided to the function are appended\n   * to those provided to the wrapper function. The wrapper is executed with\n   * the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {*} value The value to wrap.\n   * @param {Function} wrapper The wrapper function.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var hello = function(name) { return 'hello ' + name; };\n   * hello = _.wrap(hello, function(func) {\n   *   return 'before, ' + func('moe') + ', after';\n   * });\n   * hello();\n   * // => 'before, hello moe, after'\n   */\n  function wrap(value, wrapper) {\n    if (!isFunction(wrapper)) {\n      throw new TypeError;\n    }\n    return function() {\n      var args = [value];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n   * corresponding HTML entities.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} string The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('Moe, Larry & Curly');\n   * // => 'Moe, Larry &amp; Curly'\n   */\n  function escape(string) {\n    return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n  }\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var moe = { 'name': 'moe' };\n   * moe === _.identity(moe);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Adds function properties of a source object to the `lodash` function and\n   * chainable wrapper.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object of function properties to add to `lodash`.\n   * @param {Object} object The object of function properties to add to `lodash`.\n   * @example\n   *\n   * _.mixin({\n   *   'capitalize': function(string) {\n   *     return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n   *   }\n   * });\n   *\n   * _.capitalize('moe');\n   * // => 'Moe'\n   *\n   * _('moe').capitalize();\n   * // => 'Moe'\n   */\n  function mixin(object) {\n    forEach(functions(object), function(methodName) {\n      var func = lodash[methodName] = object[methodName];\n\n      lodash.prototype[methodName] = function() {\n        var args = [this.__wrapped__];\n        push.apply(args, arguments);\n\n        var result = func.apply(lodash, args);\n        return this.__chain__\n          ? new lodashWrapper(result, true)\n          : result;\n      };\n    });\n  }\n\n  /**\n   * Reverts the '_' variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    root._ = oldDash;\n    return this;\n  }\n\n  /**\n   * Produces a random number between `min` and `max` (inclusive). If only one\n   * argument is provided a number between `0` and the given number will be\n   * returned. If `floating` is truey or either `min` or `max` are floats a\n   * floating-point number will be returned instead of an integer.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {number} [min=0] The minimum possible value.\n   * @param {number} [max=1] The maximum possible value.\n   * @param {boolean} [floating=false] Specify returning a floating-point number.\n   * @returns {number} Returns a random number.\n   * @example\n   *\n   * _.random(0, 5);\n   * // => an integer between 0 and 5\n   *\n   * _.random(5);\n   * // => also an integer between 0 and 5\n   *\n   * _.random(5, true);\n   * // => a floating-point number between 0 and 5\n   *\n   * _.random(1.2, 5.2);\n   * // => a floating-point number between 1.2 and 5.2\n   */\n  function random(min, max) {\n    if (min == null && max == null) {\n      max = 1;\n    }\n    min = +min || 0;\n    if (max == null) {\n      max = min;\n      min = 0;\n    } else {\n      max = +max || 0;\n    }\n    return min + floor(nativeRandom() * (max - min + 1));\n  }\n\n  /**\n   * Resolves the value of `property` on `object`. If `property` is a function\n   * it will be invoked with the `this` binding of `object` and its result returned,\n   * else the property value is returned. If `object` is falsey then `undefined`\n   * is returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object to inspect.\n   * @param {string} property The property to get the value of.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = {\n   *   'cheese': 'crumpets',\n   *   'stuff': function() {\n   *     return 'nonsense';\n   *   }\n   * };\n   *\n   * _.result(object, 'cheese');\n   * // => 'crumpets'\n   *\n   * _.result(object, 'stuff');\n   * // => 'nonsense'\n   */\n  function result(object, property) {\n    if (object) {\n      var value = object[property];\n      return isFunction(value) ? object[property]() : value;\n    }\n  }\n\n  /**\n   * A micro-templating method that handles arbitrary delimiters, preserves\n   * whitespace, and correctly escapes quotes within interpolated code.\n   *\n   * Note: In the development build, `_.template` utilizes sourceURLs for easier\n   * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n   *\n   * For more information on precompiling templates see:\n   * http://lodash.com/#custom-builds\n   *\n   * For more information on Chrome extension sandboxes see:\n   * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} text The template text.\n   * @param {Object} data The data object used to populate the text.\n   * @param {Object} [options] The options object.\n   * @param {RegExp} [options.escape] The \"escape\" delimiter.\n   * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n   * @param {Object} [options.imports] An object to import into the template as local variables.\n   * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n   * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n   * @param {string} [variable] The data object variable name.\n   * @returns {Function|string} Returns a compiled function when no `data` object\n   *  is given, else it returns the interpolated text.\n   * @example\n   *\n   * // using the \"interpolate\" delimiter to create a compiled template\n   * var compiled = _.template('hello <%= name %>');\n   * compiled({ 'name': 'moe' });\n   * // => 'hello moe'\n   *\n   * // using the \"escape\" delimiter to escape HTML in data property values\n   * _.template('<b><%- value %></b>', { 'value': '<script>' });\n   * // => '<b>&lt;script&gt;</b>'\n   *\n   * // using the \"evaluate\" delimiter to generate HTML\n   * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n   * _.template(list, { 'people': ['moe', 'larry'] });\n   * // => '<li>moe</li><li>larry</li>'\n   *\n   * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n   * _.template('hello ${ name }', { 'name': 'curly' });\n   * // => 'hello curly'\n   *\n   * // using the internal `print` function in \"evaluate\" delimiters\n   * _.template('<% print(\"hello \" + name); %>!', { 'name': 'larry' });\n   * // => 'hello larry!'\n   *\n   * // using a custom template delimiters\n   * _.templateSettings = {\n   *   'interpolate': /{{([\\s\\S]+?)}}/g\n   * };\n   *\n   * _.template('hello {{ name }}!', { 'name': 'mustache' });\n   * // => 'hello mustache!'\n   *\n   * // using the `imports` option to import jQuery\n   * var list = '<% $.each(people, function(name) { %><li><%- name %></li><% }); %>';\n   * _.template(list, { 'people': ['moe', 'larry'] }, { 'imports': { '$': jQuery } });\n   * // => '<li>moe</li><li>larry</li>'\n   *\n   * // using the `sourceURL` option to specify a custom sourceURL for the template\n   * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n   * compiled(data);\n   * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n   *\n   * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n   * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n   * compiled.source;\n   * // => function(data) {\n   *   var __t, __p = '', __e = _.escape;\n   *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n   *   return __p;\n   * }\n   *\n   * // using the `source` property to inline compiled templates for meaningful\n   * // line numbers in error messages and a stack trace\n   * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n   *   var JST = {\\\n   *     \"main\": ' + _.template(mainText).source + '\\\n   *   };\\\n   * ');\n   */\n  function template(text, data, options) {\n    var _ = lodash,\n        settings = _.templateSettings;\n\n    text || (text = '');\n    options = defaults({}, options, settings);\n\n    var index = 0,\n        source = \"__p += '\",\n        variable = options.variable;\n\n    var reDelimiters = RegExp(\n      (options.escape || reNoMatch).source + '|' +\n      (options.interpolate || reNoMatch).source + '|' +\n      (options.evaluate || reNoMatch).source + '|$'\n    , 'g');\n\n    text.replace(reDelimiters, function(match, escapeValue, interpolateValue, evaluateValue, offset) {\n      source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n      if (escapeValue) {\n        source += \"' +\\n_.escape(\" + escapeValue + \") +\\n'\";\n      }\n      if (evaluateValue) {\n        source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n      }\n      if (interpolateValue) {\n        source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n\n    source += \"';\\n\";\n    if (!variable) {\n      variable = 'obj';\n      source = 'with (' + variable + ' || {}) {\\n' + source + '\\n}\\n';\n    }\n    source = 'function(' + variable + ') {\\n' +\n      \"var __t, __p = '', __j = Array.prototype.join;\\n\" +\n      \"function print() { __p += __j.call(arguments, '') }\\n\" +\n      source +\n      'return __p\\n}';\n\n    try {\n      var result = Function('_', 'return ' + source)(_);\n    } catch(e) {\n      e.source = source;\n      throw e;\n    }\n    if (data) {\n      return result(data);\n    }\n    result.source = source;\n    return result;\n  }\n\n  /**\n   * Executes the callback `n` times, returning an array of the results\n   * of each callback execution. The callback is bound to `thisArg` and invoked\n   * with one argument; (index).\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {number} n The number of times to execute the callback.\n   * @param {Function} callback The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns an array of the results of each `callback` execution.\n   * @example\n   *\n   * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n   * // => [3, 6, 4]\n   *\n   * _.times(3, function(n) { mage.castSpell(n); });\n   * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n   *\n   * _.times(3, function(n) { this.cast(n); }, mage);\n   * // => also calls `mage.castSpell(n)` three times\n   */\n  function times(n, callback, thisArg) {\n    n = (n = +n) > -1 ? n : 0;\n    var index = -1,\n        result = Array(n);\n\n    callback = baseCreateCallback(callback, thisArg, 1);\n    while (++index < n) {\n      result[index] = callback(index);\n    }\n    return result;\n  }\n\n  /**\n   * The inverse of `_.escape` this method converts the HTML entities\n   * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n   * corresponding characters.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} string The string to unescape.\n   * @returns {string} Returns the unescaped string.\n   * @example\n   *\n   * _.unescape('Moe, Larry &amp; Curly');\n   * // => 'Moe, Larry & Curly'\n   */\n  function unescape(string) {\n    return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} [prefix] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object that wraps the given value with explicit\n   * method chaining enabled.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the wrapper object.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 },\n   *   { 'name': 'curly', 'age': 60 }\n   * ];\n   *\n   * var youngest = _.chain(stooges)\n   *     .sortBy('age')\n   *     .map(function(stooge) { return stooge.name + ' is ' + stooge.age; })\n   *     .first()\n   *     .value();\n   * // => 'moe is 40'\n   */\n  function chain(value) {\n    value = new lodashWrapper(value);\n    value.__chain__ = true;\n    return value;\n  }\n\n  /**\n   * Invokes `interceptor` with the `value` as the first argument and then\n   * returns `value`. The purpose of this method is to \"tap into\" a method\n   * chain in order to perform operations on intermediate results within\n   * the chain.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3, 4])\n   *  .filter(function(num) { return num % 2 == 0; })\n   *  .tap(function(array) { console.log(array); })\n   *  .map(function(num) { return num * num; })\n   *  .value();\n   * // => // [2, 4] (logged)\n   * // => [4, 16]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * Enables explicit method chaining on the wrapper object.\n   *\n   * @name chain\n   * @memberOf _\n   * @category Chaining\n   * @returns {*} Returns the wrapper object.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // without explicit chaining\n   * _(stooges).first();\n   * // => { 'name': 'moe', 'age': 40 }\n   *\n   * // with explicit chaining\n   * _(stooges).chain()\n   *   .first()\n   *   .pick('age')\n   *   .value()\n   * // => { 'age': 40 }\n   */\n  function wrapperChain() {\n    this.__chain__ = true;\n    return this;\n  }\n\n  /**\n   * Extracts the wrapped value.\n   *\n   * @name valueOf\n   * @memberOf _\n   * @alias value\n   * @category Chaining\n   * @returns {*} Returns the wrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).valueOf();\n   * // => [1, 2, 3]\n   */\n  function wrapperValueOf() {\n    return this.__wrapped__;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return wrapped values when chaining\n  lodash.after = after;\n  lodash.bind = bind;\n  lodash.bindAll = bindAll;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.compose = compose;\n  lodash.countBy = countBy;\n  lodash.debounce = debounce;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.difference = difference;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.forEach = forEach;\n  lodash.functions = functions;\n  lodash.groupBy = groupBy;\n  lodash.indexBy = indexBy;\n  lodash.initial = initial;\n  lodash.intersection = intersection;\n  lodash.invert = invert;\n  lodash.invoke = invoke;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.max = max;\n  lodash.memoize = memoize;\n  lodash.min = min;\n  lodash.omit = omit;\n  lodash.once = once;\n  lodash.pairs = pairs;\n  lodash.partial = partial;\n  lodash.pick = pick;\n  lodash.pluck = pluck;\n  lodash.range = range;\n  lodash.reject = reject;\n  lodash.rest = rest;\n  lodash.shuffle = shuffle;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.throttle = throttle;\n  lodash.times = times;\n  lodash.toArray = toArray;\n  lodash.union = union;\n  lodash.uniq = uniq;\n  lodash.values = values;\n  lodash.where = where;\n  lodash.without = without;\n  lodash.wrap = wrap;\n  lodash.zip = zip;\n\n  // add aliases\n  lodash.collect = map;\n  lodash.drop = rest;\n  lodash.each = forEach;\n  lodash.extend = assign;\n  lodash.methods = functions;\n  lodash.object = zipObject;\n  lodash.select = filter;\n  lodash.tail = rest;\n  lodash.unique = uniq;\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return unwrapped values when chaining\n  lodash.clone = clone;\n  lodash.contains = contains;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.has = has;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isElement = isElement;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.lastIndexOf = lastIndexOf;\n  lodash.mixin = mixin;\n  lodash.noConflict = noConflict;\n  lodash.random = random;\n  lodash.reduce = reduce;\n  lodash.reduceRight = reduceRight;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.sortedIndex = sortedIndex;\n  lodash.template = template;\n  lodash.unescape = unescape;\n  lodash.uniqueId = uniqueId;\n\n  // add aliases\n  lodash.all = every;\n  lodash.any = some;\n  lodash.detect = find;\n  lodash.findWhere = findWhere;\n  lodash.foldl = reduce;\n  lodash.foldr = reduceRight;\n  lodash.include = contains;\n  lodash.inject = reduce;\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions capable of returning wrapped and unwrapped values when chaining\n  lodash.first = first;\n  lodash.last = last;\n  lodash.sample = sample;\n\n  // add aliases\n  lodash.take = first;\n  lodash.head = first;\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions to `lodash.prototype`\n  mixin(lodash);\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type string\n   */\n  lodash.VERSION = '2.2.1';\n\n  // add \"Chaining\" functions to the wrapper\n  lodash.prototype.chain = wrapperChain;\n  lodash.prototype.value = wrapperValueOf;\n\n    // add `Array` mutator functions to the wrapper\n    forEach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__;\n        func.apply(value, arguments);\n\n        // avoid array-like object bugs with `Array#shift` and `Array#splice`\n        // in Firefox < 10 and IE < 9\n        if (!support.spliceObjects && value.length === 0) {\n          delete value[0];\n        }\n        return this;\n      };\n    });\n\n    // add `Array` accessor functions to the wrapper\n    forEach(['concat', 'join', 'slice'], function(methodName) {\n      var func = arrayRef[methodName];\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            result = func.apply(value, arguments);\n\n        if (this.__chain__) {\n          result = new lodashWrapper(result);\n          result.__chain__ = true;\n        }\n        return result;\n      };\n    });\n\n  /*--------------------------------------------------------------------------*/\n\n  // some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash was injected by a third-party script and not intended to be\n    // loaded as a module. The global assignment can be reverted in the Lo-Dash\n    // module by its `noConflict()` method.\n    root._ = lodash;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define('underscore',[],function() {\n      return lodash;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS\n    if (moduleExports) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n    // in Narwhal or Rhino -require\n    else {\n      freeExports._ = lodash;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    root._ = lodash;\n  }\n}.call(this));\n","\ndefine('cs',{load: function(id){throw new Error(\"Dynamic load not allowed: \" + id);}});","\n/* Zepto v1.0 - polyfill zepto detect event ajax form fx - zeptojs.com/license */\n\n;(function(undefined){\n  if (String.prototype.trim === undefined) // fix for iOS 3.2\n    String.prototype.trim = function(){ return this.replace(/^\\s+|\\s+$/g, '') }\n\n  // For iOS 3.x\n  // from https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/reduce\n  if (Array.prototype.reduce === undefined)\n    Array.prototype.reduce = function(fun){\n      if(this === void 0 || this === null) throw new TypeError()\n      var t = Object(this), len = t.length >>> 0, k = 0, accumulator\n      if(typeof fun != 'function') throw new TypeError()\n      if(len == 0 && arguments.length == 1) throw new TypeError()\n\n      if(arguments.length >= 2)\n       accumulator = arguments[1]\n      else\n        do{\n          if(k in t){\n            accumulator = t[k++]\n            break\n          }\n          if(++k >= len) throw new TypeError()\n        } while (true)\n\n      while (k < len){\n        if(k in t) accumulator = fun.call(undefined, accumulator, t[k], k, t)\n        k++\n      }\n      return accumulator\n    }\n\n})()\n\n\n\n\n\nvar Zepto = (function() {\n  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,\n    document = window.document,\n    elementDisplay = {}, classCache = {},\n    getComputedStyle = document.defaultView.getComputedStyle,\n    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n    fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n    rootNodeRE = /^(?:body|html)$/i,\n\n    // special attributes that should be get/set via method calls\n    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n    table = document.createElement('table'),\n    tableRow = document.createElement('tr'),\n    containers = {\n      'tr': document.createElement('tbody'),\n      'tbody': table, 'thead': table, 'tfoot': table,\n      'td': tableRow, 'th': tableRow,\n      '*': document.createElement('div')\n    },\n    readyRE = /complete|loaded|interactive/,\n    classSelectorRE = /^\\.([\\w-]+)$/,\n    idSelectorRE = /^#([\\w-]*)$/,\n    tagSelectorRE = /^[\\w-]+$/,\n    class2type = {},\n    toString = class2type.toString,\n    zepto = {},\n    camelize, uniq,\n    tempParent = document.createElement('div')\n\n  zepto.matches = function(element, selector) {\n    if (!element || element.nodeType !== 1) return false\n    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||\n                          element.oMatchesSelector || element.matchesSelector\n    if (matchesSelector) return matchesSelector.call(element, selector)\n    // fall back to performing a selector:\n    var match, parent = element.parentNode, temp = !parent\n    if (temp) (parent = tempParent).appendChild(element)\n    match = ~zepto.qsa(parent, selector).indexOf(element)\n    temp && tempParent.removeChild(element)\n    return match\n  }\n\n  function type(obj) {\n    return obj == null ? String(obj) :\n      class2type[toString.call(obj)] || \"object\"\n  }\n\n  function isFunction(value) { return type(value) == \"function\" }\n  function isWindow(obj)     { return obj != null && obj == obj.window }\n  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n  function isObject(obj)     { return type(obj) == \"object\" }\n  function isPlainObject(obj) {\n    return isObject(obj) && !isWindow(obj) && obj.__proto__ == Object.prototype\n  }\n  function isArray(value) { return value instanceof Array }\n  function likeArray(obj) { return typeof obj.length == 'number' }\n\n  function compact(array) { return filter.call(array, function(item){ return item != null }) }\n  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n  function dasherize(str) {\n    return str.replace(/::/g, '/')\n           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n           .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n           .replace(/_/g, '-')\n           .toLowerCase()\n  }\n  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n  function classRE(name) {\n    return name in classCache ?\n      classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n  }\n\n  function maybeAddPx(name, value) {\n    return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n  }\n\n  function defaultDisplay(nodeName) {\n    var element, display\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName)\n      document.body.appendChild(element)\n      display = getComputedStyle(element, '').getPropertyValue(\"display\")\n      element.parentNode.removeChild(element)\n      display == \"none\" && (display = \"block\")\n      elementDisplay[nodeName] = display\n    }\n    return elementDisplay[nodeName]\n  }\n\n  function children(element) {\n    return 'children' in element ?\n      slice.call(element.children) :\n      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n  }\n\n  // `$.zepto.fragment` takes a html string and an optional tag name\n  // to generate DOM nodes nodes from the given html string.\n  // The generated DOM nodes are returned as an array.\n  // This function can be overriden in plugins for example to make\n  // it compatible with browsers that don't support the DOM fully.\n  zepto.fragment = function(html, name, properties) {\n    if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n    if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n    if (!(name in containers)) name = '*'\n\n    var nodes, dom, container = containers[name]\n    container.innerHTML = '' + html\n    dom = $.each(slice.call(container.childNodes), function(){\n      container.removeChild(this)\n    })\n    if (isPlainObject(properties)) {\n      nodes = $(dom)\n      $.each(properties, function(key, value) {\n        if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n        else nodes.attr(key, value)\n      })\n    }\n    return dom\n  }\n\n  // `$.zepto.Z` swaps out the prototype of the given `dom` array\n  // of nodes with `$.fn` and thus supplying all the Zepto functions\n  // to the array. Note that `__proto__` is not supported on Internet\n  // Explorer. This method can be overriden in plugins.\n  zepto.Z = function(dom, selector) {\n    dom = dom || []\n    dom.__proto__ = $.fn\n    dom.selector = selector || ''\n    return dom\n  }\n\n  // `$.zepto.isZ` should return `true` if the given object is a Zepto\n  // collection. This method can be overriden in plugins.\n  zepto.isZ = function(object) {\n    return object instanceof zepto.Z\n  }\n\n  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n  // takes a CSS selector and an optional context (and handles various\n  // special cases).\n  // This method can be overriden in plugins.\n  zepto.init = function(selector, context) {\n    // If nothing given, return an empty Zepto collection\n    if (!selector) return zepto.Z()\n    // If a function is given, call it when the DOM is ready\n    else if (isFunction(selector)) return $(document).ready(selector)\n    // If a Zepto collection is given, juts return it\n    else if (zepto.isZ(selector)) return selector\n    else {\n      var dom\n      // normalize array if an array of nodes is given\n      if (isArray(selector)) dom = compact(selector)\n      // Wrap DOM nodes. If a plain object is given, duplicate it.\n      else if (isObject(selector))\n        dom = [isPlainObject(selector) ? $.extend({}, selector) : selector], selector = null\n      // If it's a html fragment, create nodes from it\n      else if (fragmentRE.test(selector))\n        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // And last but no least, if it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n      // create a new Zepto collection from the nodes found\n      return zepto.Z(dom, selector)\n    }\n  }\n\n  // `$` will be the base `Zepto` object. When calling this\n  // function just call `$.zepto.init, which makes the implementation\n  // details of selecting nodes and creating Zepto collections\n  // patchable in plugins.\n  $ = function(selector, context){\n    return zepto.init(selector, context)\n  }\n\n  function extend(target, source, deep) {\n    for (key in source)\n      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n        if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n          target[key] = {}\n        if (isArray(source[key]) && !isArray(target[key]))\n          target[key] = []\n        extend(target[key], source[key], deep)\n      }\n      else if (source[key] !== undefined) target[key] = source[key]\n  }\n\n  // Copy all but undefined properties from one or more\n  // objects to the `target` object.\n  $.extend = function(target){\n    var deep, args = slice.call(arguments, 1)\n    if (typeof target == 'boolean') {\n      deep = target\n      target = args.shift()\n    }\n    args.forEach(function(arg){ extend(target, arg, deep) })\n    return target\n  }\n\n  // `$.zepto.qsa` is Zepto's CSS selector implementation which\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n  // This method can be overriden in plugins.\n  zepto.qsa = function(element, selector){\n    var found\n    return (isDocument(element) && idSelectorRE.test(selector)) ?\n      ( (found = element.getElementById(RegExp.$1)) ? [found] : [] ) :\n      (element.nodeType !== 1 && element.nodeType !== 9) ? [] :\n      slice.call(\n        classSelectorRE.test(selector) ? element.getElementsByClassName(RegExp.$1) :\n        tagSelectorRE.test(selector) ? element.getElementsByTagName(selector) :\n        element.querySelectorAll(selector)\n      )\n  }\n\n  function filtered(nodes, selector) {\n    return selector === undefined ? $(nodes) : $(nodes).filter(selector)\n  }\n\n  $.contains = function(parent, node) {\n    return parent !== node && parent.contains(node)\n  }\n\n  function funcArg(context, arg, idx, payload) {\n    return isFunction(arg) ? arg.call(context, idx, payload) : arg\n  }\n\n  function setAttribute(node, name, value) {\n    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n  }\n\n  // access className property while respecting SVGAnimatedString\n  function className(node, value){\n    var klass = node.className,\n        svg   = klass && klass.baseVal !== undefined\n\n    if (value === undefined) return svg ? klass.baseVal : klass\n    svg ? (klass.baseVal = value) : (node.className = value)\n  }\n\n  // \"true\"  => true\n  // \"false\" => false\n  // \"null\"  => null\n  // \"42\"    => 42\n  // \"42.5\"  => 42.5\n  // JSON    => parse if valid\n  // String  => self\n  function deserializeValue(value) {\n    var num\n    try {\n      return value ?\n        value == \"true\" ||\n        ( value == \"false\" ? false :\n          value == \"null\" ? null :\n          !isNaN(num = Number(value)) ? num :\n          /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n          value )\n        : value\n    } catch(e) {\n      return value\n    }\n  }\n\n  $.type = type\n  $.isFunction = isFunction\n  $.isWindow = isWindow\n  $.isArray = isArray\n  $.isPlainObject = isPlainObject\n\n  $.isEmptyObject = function(obj) {\n    var name\n    for (name in obj) return false\n    return true\n  }\n\n  $.inArray = function(elem, array, i){\n    return emptyArray.indexOf.call(array, elem, i)\n  }\n\n  $.camelCase = camelize\n  $.trim = function(str) { return str.trim() }\n\n  // plugin compatibility\n  $.uuid = 0\n  $.support = { }\n  $.expr = { }\n\n  $.map = function(elements, callback){\n    var value, values = [], i, key\n    if (likeArray(elements))\n      for (i = 0; i < elements.length; i++) {\n        value = callback(elements[i], i)\n        if (value != null) values.push(value)\n      }\n    else\n      for (key in elements) {\n        value = callback(elements[key], key)\n        if (value != null) values.push(value)\n      }\n    return flatten(values)\n  }\n\n  $.each = function(elements, callback){\n    var i, key\n    if (likeArray(elements)) {\n      for (i = 0; i < elements.length; i++)\n        if (callback.call(elements[i], i, elements[i]) === false) return elements\n    } else {\n      for (key in elements)\n        if (callback.call(elements[key], key, elements[key]) === false) return elements\n    }\n\n    return elements\n  }\n\n  $.grep = function(elements, callback){\n    return filter.call(elements, callback)\n  }\n\n  if (window.JSON) $.parseJSON = JSON.parse\n\n  // Populate the class2type map\n  $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n  })\n\n  // Define methods that will be available on all\n  // Zepto collections\n  $.fn = {\n    // Because a collection acts like an array\n    // copy over these useful array functions.\n    forEach: emptyArray.forEach,\n    reduce: emptyArray.reduce,\n    push: emptyArray.push,\n    sort: emptyArray.sort,\n    indexOf: emptyArray.indexOf,\n    concat: emptyArray.concat,\n\n    // `map` and `slice` in the jQuery API work differently\n    // from their array counterparts\n    map: function(fn){\n      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n    },\n    slice: function(){\n      return $(slice.apply(this, arguments))\n    },\n\n    ready: function(callback){\n      if (readyRE.test(document.readyState)) callback($)\n      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n      return this\n    },\n    get: function(idx){\n      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n    },\n    toArray: function(){ return this.get() },\n    size: function(){\n      return this.length\n    },\n    remove: function(){\n      return this.each(function(){\n        if (this.parentNode != null)\n          this.parentNode.removeChild(this)\n      })\n    },\n    each: function(callback){\n      emptyArray.every.call(this, function(el, idx){\n        return callback.call(el, idx, el) !== false\n      })\n      return this\n    },\n    filter: function(selector){\n      if (isFunction(selector)) return this.not(this.not(selector))\n      return $(filter.call(this, function(element){\n        return zepto.matches(element, selector)\n      }))\n    },\n    add: function(selector,context){\n      return $(uniq(this.concat($(selector,context))))\n    },\n    is: function(selector){\n      return this.length > 0 && zepto.matches(this[0], selector)\n    },\n    not: function(selector){\n      var nodes=[]\n      if (isFunction(selector) && selector.call !== undefined)\n        this.each(function(idx){\n          if (!selector.call(this,idx)) nodes.push(this)\n        })\n      else {\n        var excludes = typeof selector == 'string' ? this.filter(selector) :\n          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n        this.forEach(function(el){\n          if (excludes.indexOf(el) < 0) nodes.push(el)\n        })\n      }\n      return $(nodes)\n    },\n    has: function(selector){\n      return this.filter(function(){\n        return isObject(selector) ?\n          $.contains(this, selector) :\n          $(this).find(selector).size()\n      })\n    },\n    eq: function(idx){\n      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n    },\n    first: function(){\n      var el = this[0]\n      return el && !isObject(el) ? el : $(el)\n    },\n    last: function(){\n      var el = this[this.length - 1]\n      return el && !isObject(el) ? el : $(el)\n    },\n    find: function(selector){\n      var result, $this = this\n      if (typeof selector == 'object')\n        result = $(selector).filter(function(){\n          var node = this\n          return emptyArray.some.call($this, function(parent){\n            return $.contains(parent, node)\n          })\n        })\n      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n      else result = this.map(function(){ return zepto.qsa(this, selector) })\n      return result\n    },\n    closest: function(selector, context){\n      var node = this[0], collection = false\n      if (typeof selector == 'object') collection = $(selector)\n      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n        node = node !== context && !isDocument(node) && node.parentNode\n      return $(node)\n    },\n    parents: function(selector){\n      var ancestors = [], nodes = this\n      while (nodes.length > 0)\n        nodes = $.map(nodes, function(node){\n          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n            ancestors.push(node)\n            return node\n          }\n        })\n      return filtered(ancestors, selector)\n    },\n    parent: function(selector){\n      return filtered(uniq(this.pluck('parentNode')), selector)\n    },\n    children: function(selector){\n      return filtered(this.map(function(){ return children(this) }), selector)\n    },\n    contents: function() {\n      return this.map(function() { return slice.call(this.childNodes) })\n    },\n    siblings: function(selector){\n      return filtered(this.map(function(i, el){\n        return filter.call(children(el.parentNode), function(child){ return child!==el })\n      }), selector)\n    },\n    empty: function(){\n      return this.each(function(){ this.innerHTML = '' })\n    },\n    // `pluck` is borrowed from Prototype.js\n    pluck: function(property){\n      return $.map(this, function(el){ return el[property] })\n    },\n    show: function(){\n      return this.each(function(){\n        this.style.display == \"none\" && (this.style.display = null)\n        if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n          this.style.display = defaultDisplay(this.nodeName)\n      })\n    },\n    replaceWith: function(newContent){\n      return this.before(newContent).remove()\n    },\n    wrap: function(structure){\n      var func = isFunction(structure)\n      if (this[0] && !func)\n        var dom   = $(structure).get(0),\n            clone = dom.parentNode || this.length > 1\n\n      return this.each(function(index){\n        $(this).wrapAll(\n          func ? structure.call(this, index) :\n            clone ? dom.cloneNode(true) : dom\n        )\n      })\n    },\n    wrapAll: function(structure){\n      if (this[0]) {\n        $(this[0]).before(structure = $(structure))\n        var children\n        // drill down to the inmost element\n        while ((children = structure.children()).length) structure = children.first()\n        $(structure).append(this)\n      }\n      return this\n    },\n    wrapInner: function(structure){\n      var func = isFunction(structure)\n      return this.each(function(index){\n        var self = $(this), contents = self.contents(),\n            dom  = func ? structure.call(this, index) : structure\n        contents.length ? contents.wrapAll(dom) : self.append(dom)\n      })\n    },\n    unwrap: function(){\n      this.parent().each(function(){\n        $(this).replaceWith($(this).children())\n      })\n      return this\n    },\n    clone: function(){\n      return this.map(function(){ return this.cloneNode(true) })\n    },\n    hide: function(){\n      return this.css(\"display\", \"none\")\n    },\n    toggle: function(setting){\n      return this.each(function(){\n        var el = $(this)\n        ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n      })\n    },\n    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n    html: function(html){\n      return html === undefined ?\n        (this.length > 0 ? this[0].innerHTML : null) :\n        this.each(function(idx){\n          var originHtml = this.innerHTML\n          $(this).empty().append( funcArg(this, html, idx, originHtml) )\n        })\n    },\n    text: function(text){\n      return text === undefined ?\n        (this.length > 0 ? this[0].textContent : null) :\n        this.each(function(){ this.textContent = text })\n    },\n    attr: function(name, value){\n      var result\n      return (typeof name == 'string' && value === undefined) ?\n        (this.length == 0 || this[0].nodeType !== 1 ? undefined :\n          (name == 'value' && this[0].nodeName == 'INPUT') ? this.val() :\n          (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result\n        ) :\n        this.each(function(idx){\n          if (this.nodeType !== 1) return\n          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n        })\n    },\n    removeAttr: function(name){\n      return this.each(function(){ this.nodeType === 1 && setAttribute(this, name) })\n    },\n    prop: function(name, value){\n      return (value === undefined) ?\n        (this[0] && this[0][name]) :\n        this.each(function(idx){\n          this[name] = funcArg(this, value, idx, this[name])\n        })\n    },\n    data: function(name, value){\n      var data = this.attr('data-' + dasherize(name), value)\n      return data !== null ? deserializeValue(data) : undefined\n    },\n    val: function(value){\n      return (value === undefined) ?\n        (this[0] && (this[0].multiple ?\n           $(this[0]).find('option').filter(function(o){ return this.selected }).pluck('value') :\n           this[0].value)\n        ) :\n        this.each(function(idx){\n          this.value = funcArg(this, value, idx, this.value)\n        })\n    },\n    offset: function(coordinates){\n      if (coordinates) return this.each(function(index){\n        var $this = $(this),\n            coords = funcArg(this, coordinates, index, $this.offset()),\n            parentOffset = $this.offsetParent().offset(),\n            props = {\n              top:  coords.top  - parentOffset.top,\n              left: coords.left - parentOffset.left\n            }\n\n        if ($this.css('position') == 'static') props['position'] = 'relative'\n        $this.css(props)\n      })\n      if (this.length==0) return null\n      var obj = this[0].getBoundingClientRect()\n      return {\n        left: obj.left + window.pageXOffset,\n        top: obj.top + window.pageYOffset,\n        width: Math.round(obj.width),\n        height: Math.round(obj.height)\n      }\n    },\n    css: function(property, value){\n      if (arguments.length < 2 && typeof property == 'string')\n        return this[0] && (this[0].style[camelize(property)] || getComputedStyle(this[0], '').getPropertyValue(property))\n\n      var css = ''\n      if (type(property) == 'string') {\n        if (!value && value !== 0)\n          this.each(function(){ this.style.removeProperty(dasherize(property)) })\n        else\n          css = dasherize(property) + \":\" + maybeAddPx(property, value)\n      } else {\n        for (key in property)\n          if (!property[key] && property[key] !== 0)\n            this.each(function(){ this.style.removeProperty(dasherize(key)) })\n          else\n            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n      }\n\n      return this.each(function(){ this.style.cssText += ';' + css })\n    },\n    index: function(element){\n      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n    },\n    hasClass: function(name){\n      return emptyArray.some.call(this, function(el){\n        return this.test(className(el))\n      }, classRE(name))\n    },\n    addClass: function(name){\n      return this.each(function(idx){\n        classList = []\n        var cls = className(this), newName = funcArg(this, name, idx, cls)\n        newName.split(/\\s+/g).forEach(function(klass){\n          if (!$(this).hasClass(klass)) classList.push(klass)\n        }, this)\n        classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n      })\n    },\n    removeClass: function(name){\n      return this.each(function(idx){\n        if (name === undefined) return className(this, '')\n        classList = className(this)\n        funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n          classList = classList.replace(classRE(klass), \" \")\n        })\n        className(this, classList.trim())\n      })\n    },\n    toggleClass: function(name, when){\n      return this.each(function(idx){\n        var $this = $(this), names = funcArg(this, name, idx, className(this))\n        names.split(/\\s+/g).forEach(function(klass){\n          (when === undefined ? !$this.hasClass(klass) : when) ?\n            $this.addClass(klass) : $this.removeClass(klass)\n        })\n      })\n    },\n    scrollTop: function(){\n      if (!this.length) return\n      return ('scrollTop' in this[0]) ? this[0].scrollTop : this[0].scrollY\n    },\n    position: function() {\n      if (!this.length) return\n\n      var elem = this[0],\n        // Get *real* offsetParent\n        offsetParent = this.offsetParent(),\n        // Get correct offsets\n        offset       = this.offset(),\n        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n      // Subtract element margins\n      // note: when an element has margin: auto the offsetLeft and marginLeft\n      // are the same in Safari causing offset.left to incorrectly be 0\n      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n      // Add offsetParent borders\n      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n      // Subtract the two offsets\n      return {\n        top:  offset.top  - parentOffset.top,\n        left: offset.left - parentOffset.left\n      }\n    },\n    offsetParent: function() {\n      return this.map(function(){\n        var parent = this.offsetParent || document.body\n        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n          parent = parent.offsetParent\n        return parent\n      })\n    }\n  }\n\n  // for now\n  $.fn.detach = $.fn.remove\n\n  // Generate the `width` and `height` functions\n  ;['width', 'height'].forEach(function(dimension){\n    $.fn[dimension] = function(value){\n      var offset, el = this[0],\n        Dimension = dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n      if (value === undefined) return isWindow(el) ? el['inner' + Dimension] :\n        isDocument(el) ? el.documentElement['offset' + Dimension] :\n        (offset = this.offset()) && offset[dimension]\n      else return this.each(function(idx){\n        el = $(this)\n        el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n      })\n    }\n  })\n\n  function traverseNode(node, fun) {\n    fun(node)\n    for (var key in node.childNodes) traverseNode(node.childNodes[key], fun)\n  }\n\n  // Generate the `after`, `prepend`, `before`, `append`,\n  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n  adjacencyOperators.forEach(function(operator, operatorIndex) {\n    var inside = operatorIndex % 2 //=> prepend, append\n\n    $.fn[operator] = function(){\n      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n      var argType, nodes = $.map(arguments, function(arg) {\n            argType = type(arg)\n            return argType == \"object\" || argType == \"array\" || arg == null ?\n              arg : zepto.fragment(arg)\n          }),\n          parent, copyByClone = this.length > 1\n      if (nodes.length < 1) return this\n\n      return this.each(function(_, target){\n        parent = inside ? target : target.parentNode\n\n        // convert all methods to a \"before\" operation\n        target = operatorIndex == 0 ? target.nextSibling :\n                 operatorIndex == 1 ? target.firstChild :\n                 operatorIndex == 2 ? target :\n                 null\n\n        nodes.forEach(function(node){\n          if (copyByClone) node = node.cloneNode(true)\n          else if (!parent) return $(node).remove()\n\n          traverseNode(parent.insertBefore(node, target), function(el){\n            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n               (!el.type || el.type === 'text/javascript') && !el.src)\n              window['eval'].call(window, el.innerHTML)\n          })\n        })\n      })\n    }\n\n    // after    => insertAfter\n    // prepend  => prependTo\n    // before   => insertBefore\n    // append   => appendTo\n    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n      $(html)[operator](this)\n      return this\n    }\n  })\n\n  zepto.Z.prototype = $.fn\n\n  // Export internal API functions in the `$.zepto` namespace\n  zepto.uniq = uniq\n  zepto.deserializeValue = deserializeValue\n  $.zepto = zepto\n\n  return $\n})()\n\n\nwindow.Zepto = Zepto\n'$' in window || (window.$ = Zepto)\n\n\n\n\n\n;(function($){\n  function detect(ua){\n    var os = this.os = {}, browser = this.browser = {},\n      webkit = ua.match(/WebKit\\/([\\d.]+)/),\n      android = ua.match(/(Android)\\s+([\\d.]+)/),\n      ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/),\n      iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/),\n      webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/),\n      touchpad = webos && ua.match(/TouchPad/),\n      kindle = ua.match(/Kindle\\/([\\d.]+)/),\n      silk = ua.match(/Silk\\/([\\d._]+)/),\n      blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/),\n      bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/),\n      rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/),\n      playbook = ua.match(/PlayBook/),\n      chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/),\n      firefox = ua.match(/Firefox\\/([\\d.]+)/)\n\n    // Todo: clean this up with a better OS/browser seperation:\n    // - discern (more) between multiple browsers on android\n    // - decide if kindle fire in silk mode is android or not\n    // - Firefox on Android doesn't specify the Android version\n    // - possibly devide in os, device and browser hashes\n\n    if (browser.webkit = !!webkit) browser.version = webkit[1]\n\n    if (android) os.android = true, os.version = android[2]\n    if (iphone) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.')\n    if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.')\n    if (webos) os.webos = true, os.version = webos[2]\n    if (touchpad) os.touchpad = true\n    if (blackberry) os.blackberry = true, os.version = blackberry[2]\n    if (bb10) os.bb10 = true, os.version = bb10[2]\n    if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2]\n    if (playbook) browser.playbook = true\n    if (kindle) os.kindle = true, os.version = kindle[1]\n    if (silk) browser.silk = true, browser.version = silk[1]\n    if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true\n    if (chrome) browser.chrome = true, browser.version = chrome[1]\n    if (firefox) browser.firefox = true, browser.version = firefox[1]\n\n    os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) || (firefox && ua.match(/Tablet/)))\n    os.phone  = !!(!os.tablet && (android || iphone || webos || blackberry || bb10 ||\n      (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) || (firefox && ua.match(/Mobile/))))\n  }\n\n  detect.call($, navigator.userAgent)\n  // make available to unit tests\n  $.__detect = detect\n\n})(Zepto)\n\n\n\n\n\n;(function($){\n  var $$ = $.zepto.qsa, handlers = {}, _zid = 1, specialEvents={},\n      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n  function zid(element) {\n    return element._zid || (element._zid = _zid++)\n  }\n  function findHandlers(element, event, fn, selector) {\n    event = parse(event)\n    if (event.ns) var matcher = matcherFor(event.ns)\n    return (handlers[zid(element)] || []).filter(function(handler) {\n      return handler\n        && (!event.e  || handler.e == event.e)\n        && (!event.ns || matcher.test(handler.ns))\n        && (!fn       || zid(handler.fn) === zid(fn))\n        && (!selector || handler.sel == selector)\n    })\n  }\n  function parse(event) {\n    var parts = ('' + event).split('.')\n    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n  }\n  function matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n  }\n\n  function eachEvent(events, fn, iterator){\n    if ($.type(events) != \"string\") $.each(events, iterator)\n    else events.split(/\\s/).forEach(function(type){ iterator(type, fn) })\n  }\n\n  function eventCapture(handler, captureSetting) {\n    return handler.del &&\n      (handler.e == 'focus' || handler.e == 'blur') ||\n      !!captureSetting\n  }\n\n  function realEvent(type) {\n    return hover[type] || type\n  }\n\n  function add(element, events, fn, selector, getDelegate, capture){\n    var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n    eachEvent(events, fn, function(event, fn){\n      var handler   = parse(event)\n      handler.fn    = fn\n      handler.sel   = selector\n      // emulate mouseenter, mouseleave\n      if (handler.e in hover) fn = function(e){\n        var related = e.relatedTarget\n        if (!related || (related !== this && !$.contains(this, related)))\n          return handler.fn.apply(this, arguments)\n      }\n      handler.del   = getDelegate && getDelegate(fn, event)\n      var callback  = handler.del || fn\n      handler.proxy = function (e) {\n        var result = callback.apply(element, [e].concat(e.data))\n        if (result === false) e.preventDefault(), e.stopPropagation()\n        return result\n      }\n      handler.i = set.length\n      set.push(handler)\n      element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n    })\n  }\n  function remove(element, events, fn, selector, capture){\n    var id = zid(element)\n    eachEvent(events || '', fn, function(event, fn){\n      findHandlers(element, event, fn, selector).forEach(function(handler){\n        delete handlers[id][handler.i]\n        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n      })\n    })\n  }\n\n  $.event = { add: add, remove: remove }\n\n  $.proxy = function(fn, context) {\n    if ($.isFunction(fn)) {\n      var proxyFn = function(){ return fn.apply(context, arguments) }\n      proxyFn._zid = zid(fn)\n      return proxyFn\n    } else if (typeof context == 'string') {\n      return $.proxy(fn[context], fn)\n    } else {\n      throw new TypeError(\"expected function\")\n    }\n  }\n\n  $.fn.bind = function(event, callback){\n    return this.each(function(){\n      add(this, event, callback)\n    })\n  }\n  $.fn.unbind = function(event, callback){\n    return this.each(function(){\n      remove(this, event, callback)\n    })\n  }\n  $.fn.one = function(event, callback){\n    return this.each(function(i, element){\n      add(this, event, callback, null, function(fn, type){\n        return function(){\n          var result = fn.apply(element, arguments)\n          remove(element, type, fn)\n          return result\n        }\n      })\n    })\n  }\n\n  var returnTrue = function(){return true},\n      returnFalse = function(){return false},\n      ignoreProperties = /^([A-Z]|layer[XY]$)/,\n      eventMethods = {\n        preventDefault: 'isDefaultPrevented',\n        stopImmediatePropagation: 'isImmediatePropagationStopped',\n        stopPropagation: 'isPropagationStopped'\n      }\n  function createProxy(event) {\n    var key, proxy = { originalEvent: event }\n    for (key in event)\n      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n    $.each(eventMethods, function(name, predicate) {\n      proxy[name] = function(){\n        this[predicate] = returnTrue\n        return event[name].apply(event, arguments)\n      }\n      proxy[predicate] = returnFalse\n    })\n    return proxy\n  }\n\n  // emulates the 'defaultPrevented' property for browsers that have none\n  function fix(event) {\n    if (!('defaultPrevented' in event)) {\n      event.defaultPrevented = false\n      var prevent = event.preventDefault\n      event.preventDefault = function() {\n        this.defaultPrevented = true\n        prevent.call(this)\n      }\n    }\n  }\n\n  $.fn.delegate = function(selector, event, callback){\n    return this.each(function(i, element){\n      add(element, event, callback, selector, function(fn){\n        return function(e){\n          var evt, match = $(e.target).closest(selector, element).get(0)\n          if (match) {\n            evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n            return fn.apply(match, [evt].concat([].slice.call(arguments, 1)))\n          }\n        }\n      })\n    })\n  }\n  $.fn.undelegate = function(selector, event, callback){\n    return this.each(function(){\n      remove(this, event, callback, selector)\n    })\n  }\n\n  $.fn.live = function(event, callback){\n    $(document.body).delegate(this.selector, event, callback)\n    return this\n  }\n  $.fn.die = function(event, callback){\n    $(document.body).undelegate(this.selector, event, callback)\n    return this\n  }\n\n  $.fn.on = function(event, selector, callback){\n    return !selector || $.isFunction(selector) ?\n      this.bind(event, selector || callback) : this.delegate(selector, event, callback)\n  }\n  $.fn.off = function(event, selector, callback){\n    return !selector || $.isFunction(selector) ?\n      this.unbind(event, selector || callback) : this.undelegate(selector, event, callback)\n  }\n\n  $.fn.trigger = function(event, data){\n    if (typeof event == 'string' || $.isPlainObject(event)) event = $.Event(event)\n    fix(event)\n    event.data = data\n    return this.each(function(){\n      // items in the collection might not be DOM elements\n      // (todo: possibly support events on plain old objects)\n      if('dispatchEvent' in this) this.dispatchEvent(event)\n    })\n  }\n\n  // triggers event handlers on current element just as if an event occurred,\n  // doesn't trigger an actual event, doesn't bubble\n  $.fn.triggerHandler = function(event, data){\n    var e, result\n    this.each(function(i, element){\n      e = createProxy(typeof event == 'string' ? $.Event(event) : event)\n      e.data = data\n      e.target = element\n      $.each(findHandlers(element, event.type || event), function(i, handler){\n        result = handler.proxy(e)\n        if (e.isImmediatePropagationStopped()) return false\n      })\n    })\n    return result\n  }\n\n  // shortcut methods for `.bind(event, fn)` for each event type\n  ;('focusin focusout load resize scroll unload click dblclick '+\n  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n  'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n    $.fn[event] = function(callback) {\n      return callback ?\n        this.bind(event, callback) :\n        this.trigger(event)\n    }\n  })\n\n  ;['focus', 'blur'].forEach(function(name) {\n    $.fn[name] = function(callback) {\n      if (callback) this.bind(name, callback)\n      else this.each(function(){\n        try { this[name]() }\n        catch(e) {}\n      })\n      return this\n    }\n  })\n\n  $.Event = function(type, props) {\n    if (typeof type != 'string') props = type, type = props.type\n    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n    event.initEvent(type, bubbles, true, null, null, null, null, null, null, null, null, null, null, null, null)\n    event.isDefaultPrevented = function(){ return this.defaultPrevented }\n    return event\n  }\n\n})(Zepto)\n\n\n\n\n\n;(function($){\n  var jsonpID = 0,\n      document = window.document,\n      key,\n      name,\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\n      jsonType = 'application/json',\n      htmlType = 'text/html',\n      blankRE = /^\\s*$/\n\n  // trigger a custom event and return false if it was cancelled\n  function triggerAndReturn(context, eventName, data) {\n    var event = $.Event(eventName)\n    $(context).trigger(event, data)\n    return !event.defaultPrevented\n  }\n\n  // trigger an Ajax \"global\" event\n  function triggerGlobal(settings, context, eventName, data) {\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\n  }\n\n  // Number of active Ajax requests\n  $.active = 0\n\n  function ajaxStart(settings) {\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n  }\n  function ajaxStop(settings) {\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n  }\n\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n  function ajaxBeforeSend(xhr, settings) {\n    var context = settings.context\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n      return false\n\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n  }\n  function ajaxSuccess(data, xhr, settings) {\n    var context = settings.context, status = 'success'\n    settings.success.call(context, data, status, xhr)\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n    ajaxComplete(status, xhr, settings)\n  }\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n  function ajaxError(error, type, xhr, settings) {\n    var context = settings.context\n    settings.error.call(context, xhr, type, error)\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error])\n    ajaxComplete(type, xhr, settings)\n  }\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n  function ajaxComplete(status, xhr, settings) {\n    var context = settings.context\n    settings.complete.call(context, xhr, status)\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n    ajaxStop(settings)\n  }\n\n  // Empty function, used as default callback\n  function empty() {}\n\n  $.ajaxJSONP = function(options){\n    if (!('type' in options)) return $.ajax(options)\n\n    var callbackName = 'jsonp' + (++jsonpID),\n      script = document.createElement('script'),\n      cleanup = function() {\n        clearTimeout(abortTimeout)\n        $(script).remove()\n        delete window[callbackName]\n      },\n      abort = function(type){\n        cleanup()\n        // In case of manual abort or timeout, keep an empty function as callback\n        // so that the SCRIPT tag that eventually loads won't result in an error.\n        if (!type || type == 'timeout') window[callbackName] = empty\n        ajaxError(null, type || 'abort', xhr, options)\n      },\n      xhr = { abort: abort }, abortTimeout\n\n    if (ajaxBeforeSend(xhr, options) === false) {\n      abort('abort')\n      return false\n    }\n\n    window[callbackName] = function(data){\n      cleanup()\n      ajaxSuccess(data, xhr, options)\n    }\n\n    script.onerror = function() { abort('error') }\n\n    script.src = options.url.replace(/=\\?/, '=' + callbackName)\n    $('head').append(script)\n\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      abort('timeout')\n    }, options.timeout)\n\n    return xhr\n  }\n\n  $.ajaxSettings = {\n    // Default type of request\n    type: 'GET',\n    // Callback that is executed before request\n    beforeSend: empty,\n    // Callback that is executed if the request succeeds\n    success: empty,\n    // Callback that is executed the the server drops error\n    error: empty,\n    // Callback that is executed on request complete (both: error and success)\n    complete: empty,\n    // The context for the callbacks\n    context: null,\n    // Whether to trigger \"global\" Ajax events\n    global: true,\n    // Transport\n    xhr: function () {\n      return new window.XMLHttpRequest()\n    },\n    // MIME types mapping\n    accepts: {\n      script: 'text/javascript, application/javascript',\n      json:   jsonType,\n      xml:    'application/xml, text/xml',\n      html:   htmlType,\n      text:   'text/plain'\n    },\n    // Whether the request is to another domain\n    crossDomain: false,\n    // Default timeout\n    timeout: 0,\n    // Whether data should be serialized to string\n    processData: true,\n    // Whether the browser should be allowed to cache GET responses\n    cache: true,\n  }\n\n  function mimeToDataType(mime) {\n    if (mime) mime = mime.split(';', 2)[0]\n    return mime && ( mime == htmlType ? 'html' :\n      mime == jsonType ? 'json' :\n      scriptTypeRE.test(mime) ? 'script' :\n      xmlTypeRE.test(mime) && 'xml' ) || 'text'\n  }\n\n  function appendQuery(url, query) {\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n  }\n\n  // serialize payload and append it to the URL for GET requests\n  function serializeData(options) {\n    if (options.processData && options.data && $.type(options.data) != \"string\")\n      options.data = $.param(options.data, options.traditional)\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n      options.url = appendQuery(options.url, options.data)\n  }\n\n  $.ajax = function(options){\n    var settings = $.extend({}, options || {})\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n    ajaxStart(settings)\n\n    if (!settings.crossDomain) settings.crossDomain = /^([\\w-]+:)?\\/\\/([^\\/]+)/.test(settings.url) &&\n      RegExp.$2 != window.location.host\n\n    if (!settings.url) settings.url = window.location.toString()\n    serializeData(settings)\n    if (settings.cache === false) settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n    var dataType = settings.dataType, hasPlaceholder = /=\\?/.test(settings.url)\n    if (dataType == 'jsonp' || hasPlaceholder) {\n      if (!hasPlaceholder) settings.url = appendQuery(settings.url, 'callback=?')\n      return $.ajaxJSONP(settings)\n    }\n\n    var mime = settings.accepts[dataType],\n        baseHeaders = { },\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n        xhr = settings.xhr(), abortTimeout\n\n    if (!settings.crossDomain) baseHeaders['X-Requested-With'] = 'XMLHttpRequest'\n    if (mime) {\n      baseHeaders['Accept'] = mime\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\n    }\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n      baseHeaders['Content-Type'] = (settings.contentType || 'application/x-www-form-urlencoded')\n    settings.headers = $.extend(baseHeaders, settings.headers || {})\n\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState == 4) {\n        xhr.onreadystatechange = empty;\n        clearTimeout(abortTimeout)\n        var result, error = false\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n          dataType = dataType || mimeToDataType(xhr.getResponseHeader('content-type'))\n          result = xhr.responseText\n\n          try {\n            // http://perfectionkills.com/global-eval-what-are-the-options/\n            if (dataType == 'script')    (1,eval)(result)\n            else if (dataType == 'xml')  result = xhr.responseXML\n            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n          } catch (e) { error = e }\n\n          if (error) ajaxError(error, 'parsererror', xhr, settings)\n          else ajaxSuccess(result, xhr, settings)\n        } else {\n          ajaxError(null, xhr.status ? 'error' : 'abort', xhr, settings)\n        }\n      }\n    }\n\n    var async = 'async' in settings ? settings.async : true\n    xhr.open(settings.type, settings.url, async)\n\n    for (name in settings.headers) xhr.setRequestHeader(name, settings.headers[name])\n\n    if (ajaxBeforeSend(xhr, settings) === false) {\n      xhr.abort()\n      return false\n    }\n\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n        xhr.onreadystatechange = empty\n        xhr.abort()\n        ajaxError(null, 'timeout', xhr, settings)\n      }, settings.timeout)\n\n    // avoid sending empty string (#319)\n    xhr.send(settings.data ? settings.data : null)\n    return xhr\n  }\n\n  // handle optional data/success arguments\n  function parseArguments(url, data, success, dataType) {\n    var hasData = !$.isFunction(data)\n    return {\n      url:      url,\n      data:     hasData  ? data : undefined,\n      success:  !hasData ? data : $.isFunction(success) ? success : undefined,\n      dataType: hasData  ? dataType || success : success\n    }\n  }\n\n  $.get = function(url, data, success, dataType){\n    return $.ajax(parseArguments.apply(null, arguments))\n  }\n\n  $.post = function(url, data, success, dataType){\n    var options = parseArguments.apply(null, arguments)\n    options.type = 'POST'\n    return $.ajax(options)\n  }\n\n  $.getJSON = function(url, data, success){\n    var options = parseArguments.apply(null, arguments)\n    options.dataType = 'json'\n    return $.ajax(options)\n  }\n\n  $.fn.load = function(url, data, success){\n    if (!this.length) return this\n    var self = this, parts = url.split(/\\s/), selector,\n        options = parseArguments(url, data, success),\n        callback = options.success\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\n    options.success = function(response){\n      self.html(selector ?\n        $('<div>').html(response.replace(rscript, \"\")).find(selector)\n        : response)\n      callback && callback.apply(self, arguments)\n    }\n    $.ajax(options)\n    return this\n  }\n\n  var escape = encodeURIComponent\n\n  function serialize(params, obj, traditional, scope){\n    var type, array = $.isArray(obj)\n    $.each(obj, function(key, value) {\n      type = $.type(value)\n      if (scope) key = traditional ? scope : scope + '[' + (array ? '' : key) + ']'\n      // handle data in serializeArray() format\n      if (!scope && array) params.add(value.name, value.value)\n      // recurse into nested objects\n      else if (type == \"array\" || (!traditional && type == \"object\"))\n        serialize(params, value, traditional, key)\n      else params.add(key, value)\n    })\n  }\n\n  $.param = function(obj, traditional){\n    var params = []\n    params.add = function(k, v){ this.push(escape(k) + '=' + escape(v)) }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n  }\n})(Zepto)\n\n\n\n\n\n;(function ($) {\n  $.fn.serializeArray = function () {\n    var result = [], el\n    $( Array.prototype.slice.call(this.get(0).elements) ).each(function () {\n      el = $(this)\n      var type = el.attr('type')\n      if (this.nodeName.toLowerCase() != 'fieldset' &&\n        !this.disabled && type != 'submit' && type != 'reset' && type != 'button' &&\n        ((type != 'radio' && type != 'checkbox') || this.checked))\n        result.push({\n          name: el.attr('name'),\n          value: el.val()\n        })\n    })\n    return result\n  }\n\n  $.fn.serialize = function () {\n    var result = []\n    this.serializeArray().forEach(function (elm) {\n      result.push( encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value) )\n    })\n    return result.join('&')\n  }\n\n  $.fn.submit = function (callback) {\n    if (callback) this.bind('submit', callback)\n    else if (this.length) {\n      var event = $.Event('submit')\n      this.eq(0).trigger(event)\n      if (!event.defaultPrevented) this.get(0).submit()\n    }\n    return this\n  }\n\n})(Zepto)\n\n\n\n\n\n;(function($, undefined){\n  var prefix = '', eventPrefix, endEventName, endAnimationName,\n    vendors = { Webkit: 'webkit', Moz: '', O: 'o', ms: 'MS' },\n    document = window.document, testEl = document.createElement('div'),\n    supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\n    transform,\n    transitionProperty, transitionDuration, transitionTiming,\n    animationName, animationDuration, animationTiming,\n    cssReset = {}\n\n  function dasherize(str) { return downcase(str.replace(/([a-z])([A-Z])/, '$1-$2')) }\n  function downcase(str) { return str.toLowerCase() }\n  function normalizeEvent(name) { return eventPrefix ? eventPrefix + name : downcase(name) }\n\n  $.each(vendors, function(vendor, event){\n    if (testEl.style[vendor + 'TransitionProperty'] !== undefined) {\n      prefix = '-' + downcase(vendor) + '-'\n      eventPrefix = event\n      return false\n    }\n  })\n\n  transform = prefix + 'transform'\n  cssReset[transitionProperty = prefix + 'transition-property'] =\n  cssReset[transitionDuration = prefix + 'transition-duration'] =\n  cssReset[transitionTiming   = prefix + 'transition-timing-function'] =\n  cssReset[animationName      = prefix + 'animation-name'] =\n  cssReset[animationDuration  = prefix + 'animation-duration'] =\n  cssReset[animationTiming    = prefix + 'animation-timing-function'] = ''\n\n  $.fx = {\n    off: (eventPrefix === undefined && testEl.style.transitionProperty === undefined),\n    speeds: { _default: 400, fast: 200, slow: 600 },\n    cssPrefix: prefix,\n    transitionEnd: normalizeEvent('TransitionEnd'),\n    animationEnd: normalizeEvent('AnimationEnd')\n  }\n\n  $.fn.animate = function(properties, duration, ease, callback){\n    if ($.isPlainObject(duration))\n      ease = duration.easing, callback = duration.complete, duration = duration.duration\n    if (duration) duration = (typeof duration == 'number' ? duration :\n                    ($.fx.speeds[duration] || $.fx.speeds._default)) / 1000\n    return this.anim(properties, duration, ease, callback)\n  }\n\n  $.fn.anim = function(properties, duration, ease, callback){\n    var key, cssValues = {}, cssProperties, transforms = '',\n        that = this, wrappedCallback, endEvent = $.fx.transitionEnd\n\n    if (duration === undefined) duration = 0.4\n    if ($.fx.off) duration = 0\n\n    if (typeof properties == 'string') {\n      // keyframe animation\n      cssValues[animationName] = properties\n      cssValues[animationDuration] = duration + 's'\n      cssValues[animationTiming] = (ease || 'linear')\n      endEvent = $.fx.animationEnd\n    } else {\n      cssProperties = []\n      // CSS transitions\n      for (key in properties)\n        if (supportedTransforms.test(key)) transforms += key + '(' + properties[key] + ') '\n        else cssValues[key] = properties[key], cssProperties.push(dasherize(key))\n\n      if (transforms) cssValues[transform] = transforms, cssProperties.push(transform)\n      if (duration > 0 && typeof properties === 'object') {\n        cssValues[transitionProperty] = cssProperties.join(', ')\n        cssValues[transitionDuration] = duration + 's'\n        cssValues[transitionTiming] = (ease || 'linear')\n      }\n    }\n\n    wrappedCallback = function(event){\n      if (typeof event !== 'undefined') {\n        if (event.target !== event.currentTarget) return // makes sure the event didn't bubble from \"below\"\n        $(event.target).unbind(endEvent, wrappedCallback)\n      }\n      $(this).css(cssReset)\n      callback && callback.call(this)\n    }\n    if (duration > 0) this.bind(endEvent, wrappedCallback)\n\n    // trigger page reflow so new elements can animate\n    this.size() && this.get(0).clientLeft\n\n    this.css(cssValues)\n\n    if (duration <= 0) setTimeout(function() {\n      that.each(function(){ wrappedCallback.call(this) })\n    }, 0)\n\n    return this\n  }\n\n  testEl = null\n})(Zepto)\n;\ndefine(\"jquery\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.$;\n    };\n}(this)));\n","\n//     Backbone.js 1.1.0\n\n//     (c) 2010-2011 Jeremy Ashkenas, DocumentCloud Inc.\n//     (c) 2011-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(root, factory) {\n  // Set up Backbone appropriately for the environment.\n  if (typeof exports !== 'undefined') {\n    // Node/CommonJS, no need for jQuery in that case.\n    factory(root, exports, require('underscore'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define('backbone',['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n  } else {\n    // Browser globals\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n}(this, function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create local references to array methods we'll want to use later.\n  var array = [];\n  var push = array.push;\n  var slice = array.slice;\n  var splice = array.splice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.1.0';\n\n  // For Backbone's purposes, jQuery, Zepto, or Ender owns the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = {};\n        return this;\n      }\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeningTo = this._listeningTo;\n      if (!listeningTo) return this;\n      var remove = !name && !callback;\n      if (!callback && typeof name === 'object') callback = this;\n      if (obj) (listeningTo = {})[obj._listenId] = obj;\n      for (var id in listeningTo) {\n        obj = listeningTo[id];\n        obj.off(name, callback, this);\n        if (remove || _.isEmpty(obj._events)) delete this._listeningTo[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n      listeningTo[id] = obj;\n      if (!callback && typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId('c');\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      var attr, attrs, unset, changes, silent, changing, prev, current;\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      unset           = options.unset;\n      silent          = options.silent;\n      changes         = [];\n      changing        = this._changing;\n      this._changing  = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      current = this.attributes, prev = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          this.changed[attr] = val;\n        } else {\n          delete this.changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = true;\n        for (var i = 0, l = changes.length; i < l; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server. If the server's representation of the\n    // model differs from its current attributes, they will be overridden,\n    // triggering a `\"change\"` event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        if (!model.set(model.parse(resp, options), options)) return false;\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      var attrs, method, xhr, attributes = this.attributes;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true}, options);\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !options.wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // Set temporary attributes if `{wait: true}`.\n      if (attrs && options.wait) {\n        this.attributes = _.extend({}, attributes, attrs);\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = model.parse(resp, options);\n        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n          return false;\n        }\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch') options.attrs = attrs;\n      xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      if (attrs && options.wait) this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n\n      var destroy = function() {\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (options.wait || model.isNew()) destroy();\n        if (success) success(model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      if (this.isNew()) {\n        options.success();\n        return false;\n      }\n      wrapError(this, options);\n\n      var xhr = this.sync('delete', this, options);\n      if (!options.wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n      if (this.isNew()) return base;\n      return base + (base.charAt(base.length - 1) === '/' ? '' : '/') + encodeURIComponent(this.id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return this.id == null;\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend(options || {}, { validate: true }));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, function(method) {\n    Model.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.attributes);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analagous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      options || (options = {});\n      var i, l, index, model;\n      for (i = 0, l = models.length; i < l; i++) {\n        model = models[i] = this.get(models[i]);\n        if (!model) continue;\n        delete this._byId[model.id];\n        delete this._byId[model.cid];\n        index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        this._removeReference(model);\n      }\n      return singular ? models[0] : models;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : _.clone(models);\n      var i, l, id, model, attrs, existing, sort;\n      var at = options.at;\n      var targetModel = this.model;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (i = 0, l = models.length; i < l; i++) {\n        attrs = models[i];\n        if (attrs instanceof Model) {\n          id = model = attrs;\n        } else {\n          id = attrs[targetModel.prototype.idAttribute];\n        }\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(id)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge) {\n            attrs = attrs === model ? model.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n\n          // Listen to added models' events, and index models for lookup by\n          // `id` and by `cid`.\n          model.on('all', this._onModelEvent, this);\n          this._byId[model.cid] = model;\n          if (model.id != null) this._byId[model.id] = model;\n        }\n        if (order) order.push(existing || model);\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (i = 0, l = this.length; i < l; ++i) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this.remove(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || (order && order.length)) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (i = 0, l = toAdd.length; i < l; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (i = 0, l = orderedModels.length; i < l; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0, l = toAdd.length; i < l; i++) {\n          (model = toAdd[i]).trigger('add', model, this, options);\n        }\n        if (sort || (order && order.length)) this.trigger('sort', this, options);\n      }\n      \n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options || (options = {});\n      for (var i = 0, l = this.models.length; i < l; i++) {\n        this._removeReference(this.models[i]);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj.id] || this._byId[obj.cid] || this._byId[obj];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      if (_.isEmpty(attrs)) return first ? void 0 : [];\n      return this[first ? 'find' : 'filter'](function(model) {\n        for (var key in attrs) {\n          if (attrs[key] !== model.get(key)) return false;\n        }\n        return true;\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success(collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      if (!(model = this._prepareModel(model, options))) return false;\n      if (!options.wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, options) {\n        if (options.wait) collection.add(model, options);\n        if (success) success(model, resp, options);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (attrs instanceof Model) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model) {\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (model && event === 'change:' + model.idAttribute) {\n        delete this._byId[model.previous(model.idAttribute)];\n        if (model.id != null) this._byId[model.id] = model;\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain'];\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, function(method) {\n    Collection.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.models);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    options || (options = {});\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n    this.delegateEvents();\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this.$el.remove();\n      this.stopListening();\n      return this;\n    },\n\n    // Change the view's element (`this.el` property), including event\n    // re-delegation.\n    setElement: function(element, delegate) {\n      if (this.$el) this.undelegateEvents();\n      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);\n      this.el = this.$el[0];\n      if (delegate !== false) this.delegateEvents();\n      return this;\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    // This only works for delegate-able events: not `focus`, `blur`, and\n    // not `change`, `submit`, and `reset` in Internet Explorer.\n    delegateEvents: function(events) {\n      if (!(events || (events = _.result(this, 'events')))) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) continue;\n\n        var match = key.match(delegateEventSplitter);\n        var eventName = match[1], selector = match[2];\n        method = _.bind(method, this);\n        eventName += '.delegateEvents' + this.cid;\n        if (selector === '') {\n          this.$el.on(eventName, method);\n        } else {\n          this.$el.on(eventName, selector, method);\n        }\n      }\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view with `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n        this.setElement($el, false);\n      } else {\n        this.setElement(_.result(this, 'el'), false);\n      }\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // If we're sending a `PATCH` request, and we're in an old Internet Explorer\n    // that still has ActiveX enabled by default, override jQuery to use that\n    // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.\n    if (params.type === 'PATCH' && noXhrPatch) {\n      params.xhr = function() {\n        return new ActiveXObject(\"Microsoft.XMLHTTP\");\n      };\n    }\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  var noXhrPatch = typeof window !== 'undefined' && !!window.ActiveXObject && !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent);\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        callback && callback.apply(router, args);\n        router.trigger.apply(router, ['route:' + name].concat(args));\n        router.trigger('route', name, args);\n        Backbone.history.trigger('route', router, name, args);\n      });\n      return this;\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^\\/]+)';\n                   })\n                   .replace(splatParam, '(.*?)');\n      return new RegExp('^' + route + '$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param) {\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for detecting MSIE.\n  var isExplorer = /msie [\\w.]+/;\n\n  // Cached regex for removing a trailing slash.\n  var trailingSlash = /\\/$/;\n\n  // Cached regex for stripping urls of hash and query.\n  var pathStripper = /[?#].*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the cross-browser normalized URL fragment, either from the URL,\n    // the hash, or the override.\n    getFragment: function(fragment, forcePushState) {\n      if (fragment == null) {\n        if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n          fragment = this.location.pathname;\n          var root = this.root.replace(trailingSlash, '');\n          if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error(\"Backbone.history has already been started\");\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);\n      var fragment          = this.getFragment();\n      var docMode           = document.documentMode;\n      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      if (oldIE && this._wantsHashChange) {\n        this.iframe = Backbone.$('<iframe src=\"javascript:0\" tabindex=\"-1\" />').hide().appendTo('body')[0].contentWindow;\n        this.navigate(fragment);\n      }\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._hasPushState) {\n        Backbone.$(window).on('popstate', this.checkUrl);\n      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {\n        Backbone.$(window).on('hashchange', this.checkUrl);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      // Determine if we need to change the base url, for a pushState link\n      // opened by a non-pushState browser.\n      this.fragment = fragment;\n      var loc = this.location;\n      var atRoot = loc.pathname.replace(/[^\\/]$/, '$&/') === this.root;\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !atRoot) {\n          this.fragment = this.getFragment(null, true);\n          this.location.replace(this.root + this.location.search + '#' + this.fragment);\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && atRoot && loc.hash) {\n          this.fragment = this.getHash().replace(routeStripper, '');\n          this.history.replaceState({}, document.title, this.root + this.fragment + loc.search);\n        }\n\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);\n      clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n      if (current === this.fragment && this.iframe) {\n        current = this.getFragment(this.getHash(this.iframe));\n      }\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      var url = this.root + (fragment = this.getFragment(fragment || ''));\n\n      // Strip the fragment of the query and hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // Don't include a trailing slash on the root.\n      if (fragment === '' && url !== '/') url = url.slice(0, -1);\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._hasPushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if(!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain, for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error(model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n}));\n","\n/*! Hammer.JS - v1.0.5 - 2013-04-07\n * http://eightmedia.github.com/hammer.js\n *\n * Copyright (c) 2013 Jorik Tangelder <j.tangelder@gmail.com>;\n * Licensed under the MIT license */\n\n(function(window, undefined) {\n    'use strict';\n\n/**\n * Hammer\n * use this to create instances\n * @param   {HTMLElement}   element\n * @param   {Object}        options\n * @returns {Hammer.Instance}\n * @constructor\n */\nvar Hammer = function(element, options) {\n    return new Hammer.Instance(element, options || {});\n};\n\n// default settings\nHammer.defaults = {\n    // add styles and attributes to the element to prevent the browser from doing\n    // its native behavior. this doesnt prevent the scrolling, but cancels\n    // the contextmenu, tap highlighting etc\n    // set to false to disable this\n    stop_browser_behavior: {\n\t\t// this also triggers onselectstart=false for IE\n        userSelect: 'none',\n\t\t// this makes the element blocking in IE10 >, you could experiment with the value\n\t\t// see for more options this issue; https://github.com/EightMedia/hammer.js/issues/241\n        touchAction: 'none',\n\t\ttouchCallout: 'none',\n        contentZooming: 'none',\n        userDrag: 'none',\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n\n    // more settings are defined per gesture at gestures.js\n};\n\n// detect touchevents\nHammer.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled;\nHammer.HAS_TOUCHEVENTS = ('ontouchstart' in window);\n\n// dont use mouseevents on mobile devices\nHammer.MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\nHammer.NO_MOUSEEVENTS = Hammer.HAS_TOUCHEVENTS && navigator.userAgent.match(Hammer.MOBILE_REGEX);\n\n// eventtypes per touchevent (start, move, end)\n// are filled by Hammer.event.determineEventTypes on setup\nHammer.EVENT_TYPES = {};\n\n// direction defines\nHammer.DIRECTION_DOWN = 'down';\nHammer.DIRECTION_LEFT = 'left';\nHammer.DIRECTION_UP = 'up';\nHammer.DIRECTION_RIGHT = 'right';\n\n// pointer type\nHammer.POINTER_MOUSE = 'mouse';\nHammer.POINTER_TOUCH = 'touch';\nHammer.POINTER_PEN = 'pen';\n\n// touch event defines\nHammer.EVENT_START = 'start';\nHammer.EVENT_MOVE = 'move';\nHammer.EVENT_END = 'end';\n\n// hammer document where the base events are added at\nHammer.DOCUMENT = document;\n\n// plugins namespace\nHammer.plugins = {};\n\n// if the window events are set...\nHammer.READY = false;\n\n/**\n * setup events to detect gestures on the document\n */\nfunction setup() {\n    if(Hammer.READY) {\n        return;\n    }\n\n    // find what eventtypes we add listeners to\n    Hammer.event.determineEventTypes();\n\n    // Register all gestures inside Hammer.gestures\n    for(var name in Hammer.gestures) {\n        if(Hammer.gestures.hasOwnProperty(name)) {\n            Hammer.detection.register(Hammer.gestures[name]);\n        }\n    }\n\n    // Add touch events on the document\n    Hammer.event.onTouch(Hammer.DOCUMENT, Hammer.EVENT_MOVE, Hammer.detection.detect);\n    Hammer.event.onTouch(Hammer.DOCUMENT, Hammer.EVENT_END, Hammer.detection.detect);\n\n    // Hammer is ready...!\n    Hammer.READY = true;\n}\n\n/**\n * create new hammer instance\n * all methods should return the instance itself, so it is chainable.\n * @param   {HTMLElement}       element\n * @param   {Object}            [options={}]\n * @returns {Hammer.Instance}\n * @constructor\n */\nHammer.Instance = function(element, options) {\n    var self = this;\n\n    // setup HammerJS window events and register all gestures\n    // this also sets up the default options\n    setup();\n\n    this.element = element;\n\n    // start/stop detection option\n    this.enabled = true;\n\n    // merge options\n    this.options = Hammer.utils.extend(\n        Hammer.utils.extend({}, Hammer.defaults),\n        options || {});\n\n    // add some css to the element to prevent the browser from doing its native behavoir\n    if(this.options.stop_browser_behavior) {\n        Hammer.utils.stopDefaultBrowserBehavior(this.element, this.options.stop_browser_behavior);\n    }\n\n    // start detection on touchstart\n    Hammer.event.onTouch(element, Hammer.EVENT_START, function(ev) {\n        if(self.enabled) {\n            Hammer.detection.startDetect(self, ev);\n        }\n    });\n\n    // return instance\n    return this;\n};\n\n\nHammer.Instance.prototype = {\n    /**\n     * bind events to the instance\n     * @param   {String}      gesture\n     * @param   {Function}    handler\n     * @returns {Hammer.Instance}\n     */\n    on: function onEvent(gesture, handler){\n        var gestures = gesture.split(' ');\n        for(var t=0; t<gestures.length; t++) {\n            this.element.addEventListener(gestures[t], handler, false);\n        }\n        return this;\n    },\n\n\n    /**\n     * unbind events to the instance\n     * @param   {String}      gesture\n     * @param   {Function}    handler\n     * @returns {Hammer.Instance}\n     */\n    off: function offEvent(gesture, handler){\n        var gestures = gesture.split(' ');\n        for(var t=0; t<gestures.length; t++) {\n            this.element.removeEventListener(gestures[t], handler, false);\n        }\n        return this;\n    },\n\n\n    /**\n     * trigger gesture event\n     * @param   {String}      gesture\n     * @param   {Object}      eventData\n     * @returns {Hammer.Instance}\n     */\n    trigger: function triggerEvent(gesture, eventData){\n        // create DOM event\n        var event = Hammer.DOCUMENT.createEvent('Event');\n\t\tevent.initEvent(gesture, true, true);\n\t\tevent.gesture = eventData;\n\n        // trigger on the target if it is in the instance element,\n        // this is for event delegation tricks\n        var element = this.element;\n        if(Hammer.utils.hasParent(eventData.target, element)) {\n            element = eventData.target;\n        }\n\n        element.dispatchEvent(event);\n        return this;\n    },\n\n\n    /**\n     * enable of disable hammer.js detection\n     * @param   {Boolean}   state\n     * @returns {Hammer.Instance}\n     */\n    enable: function enable(state) {\n        this.enabled = state;\n        return this;\n    }\n};\n\n/**\n * this holds the last move event,\n * used to fix empty touchend issue\n * see the onTouch event for an explanation\n * @type {Object}\n */\nvar last_move_event = null;\n\n\n/**\n * when the mouse is hold down, this is true\n * @type {Boolean}\n */\nvar enable_detect = false;\n\n\n/**\n * when touch events have been fired, this is true\n * @type {Boolean}\n */\nvar touch_triggered = false;\n\n\nHammer.event = {\n    /**\n     * simple addEventListener\n     * @param   {HTMLElement}   element\n     * @param   {String}        type\n     * @param   {Function}      handler\n     */\n    bindDom: function(element, type, handler) {\n        var types = type.split(' ');\n        for(var t=0; t<types.length; t++) {\n            element.addEventListener(types[t], handler, false);\n        }\n    },\n\n\n    /**\n     * touch events with mouse fallback\n     * @param   {HTMLElement}   element\n     * @param   {String}        eventType        like Hammer.EVENT_MOVE\n     * @param   {Function}      handler\n     */\n    onTouch: function onTouch(element, eventType, handler) {\n\t\tvar self = this;\n\n        this.bindDom(element, Hammer.EVENT_TYPES[eventType], function bindDomOnTouch(ev) {\n            var sourceEventType = ev.type.toLowerCase();\n\n            // onmouseup, but when touchend has been fired we do nothing.\n            // this is for touchdevices which also fire a mouseup on touchend\n            if(sourceEventType.match(/mouse/) && touch_triggered) {\n                return;\n            }\n\n            // mousebutton must be down or a touch event\n            else if( sourceEventType.match(/touch/) ||   // touch events are always on screen\n                sourceEventType.match(/pointerdown/) || // pointerevents touch\n                (sourceEventType.match(/mouse/) && ev.which === 1)   // mouse is pressed\n            ){\n                enable_detect = true;\n            }\n\n            // we are in a touch event, set the touch triggered bool to true,\n            // this for the conflicts that may occur on ios and android\n            if(sourceEventType.match(/touch|pointer/)) {\n                touch_triggered = true;\n            }\n\n            // count the total touches on the screen\n            var count_touches = 0;\n\n            // when touch has been triggered in this detection session\n            // and we are now handling a mouse event, we stop that to prevent conflicts\n            if(enable_detect) {\n                // update pointerevent\n                if(Hammer.HAS_POINTEREVENTS && eventType != Hammer.EVENT_END) {\n                    count_touches = Hammer.PointerEvent.updatePointer(eventType, ev);\n                }\n                // touch\n                else if(sourceEventType.match(/touch/)) {\n                    count_touches = ev.touches.length;\n                }\n                // mouse\n                else if(!touch_triggered) {\n                    count_touches = sourceEventType.match(/up/) ? 0 : 1;\n                }\n\n                // if we are in a end event, but when we remove one touch and\n                // we still have enough, set eventType to move\n                if(count_touches > 0 && eventType == Hammer.EVENT_END) {\n                    eventType = Hammer.EVENT_MOVE;\n                }\n                // no touches, force the end event\n                else if(!count_touches) {\n                    eventType = Hammer.EVENT_END;\n                }\n\n                // because touchend has no touches, and we often want to use these in our gestures,\n                // we send the last move event as our eventData in touchend\n                if(!count_touches && last_move_event !== null) {\n                    ev = last_move_event;\n                }\n                // store the last move event\n                else {\n                    last_move_event = ev;\n                }\n\n                // trigger the handler\n                handler.call(Hammer.detection, self.collectEventData(element, eventType, ev));\n\n                // remove pointerevent from list\n                if(Hammer.HAS_POINTEREVENTS && eventType == Hammer.EVENT_END) {\n                    count_touches = Hammer.PointerEvent.updatePointer(eventType, ev);\n                }\n            }\n\n            //debug(sourceEventType +\" \"+ eventType);\n\n            // on the end we reset everything\n            if(!count_touches) {\n                last_move_event = null;\n                enable_detect = false;\n                touch_triggered = false;\n                Hammer.PointerEvent.reset();\n            }\n        });\n    },\n\n\n    /**\n     * we have different events for each device/browser\n     * determine what we need and set them in the Hammer.EVENT_TYPES constant\n     */\n    determineEventTypes: function determineEventTypes() {\n        // determine the eventtype we want to set\n        var types;\n\n        // pointerEvents magic\n        if(Hammer.HAS_POINTEREVENTS) {\n            types = Hammer.PointerEvent.getEvents();\n        }\n        // on Android, iOS, blackberry, windows mobile we dont want any mouseevents\n        else if(Hammer.NO_MOUSEEVENTS) {\n            types = [\n                'touchstart',\n                'touchmove',\n                'touchend touchcancel'];\n        }\n        // for non pointer events browsers and mixed browsers,\n        // like chrome on windows8 touch laptop\n        else {\n            types = [\n                'touchstart mousedown',\n                'touchmove mousemove',\n                'touchend touchcancel mouseup'];\n        }\n\n        Hammer.EVENT_TYPES[Hammer.EVENT_START]  = types[0];\n        Hammer.EVENT_TYPES[Hammer.EVENT_MOVE]   = types[1];\n        Hammer.EVENT_TYPES[Hammer.EVENT_END]    = types[2];\n    },\n\n\n    /**\n     * create touchlist depending on the event\n     * @param   {Object}    ev\n     * @param   {String}    eventType   used by the fakemultitouch plugin\n     */\n    getTouchList: function getTouchList(ev/*, eventType*/) {\n        // get the fake pointerEvent touchlist\n        if(Hammer.HAS_POINTEREVENTS) {\n            return Hammer.PointerEvent.getTouchList();\n        }\n        // get the touchlist\n        else if(ev.touches) {\n            return ev.touches;\n        }\n        // make fake touchlist from mouse position\n        else {\n            return [{\n                identifier: 1,\n                pageX: ev.pageX,\n                pageY: ev.pageY,\n                target: ev.target\n            }];\n        }\n    },\n\n\n    /**\n     * collect event data for Hammer js\n     * @param   {HTMLElement}   element\n     * @param   {String}        eventType        like Hammer.EVENT_MOVE\n     * @param   {Object}        eventData\n     */\n    collectEventData: function collectEventData(element, eventType, ev) {\n        var touches = this.getTouchList(ev, eventType);\n\n        // find out pointerType\n        var pointerType = Hammer.POINTER_TOUCH;\n        if(ev.type.match(/mouse/) || Hammer.PointerEvent.matchType(Hammer.POINTER_MOUSE, ev)) {\n            pointerType = Hammer.POINTER_MOUSE;\n        }\n\n        return {\n            center      : Hammer.utils.getCenter(touches),\n            timeStamp   : new Date().getTime(),\n            target      : ev.target,\n            touches     : touches,\n            eventType   : eventType,\n            pointerType : pointerType,\n            srcEvent    : ev,\n\n            /**\n             * prevent the browser default actions\n             * mostly used to disable scrolling of the browser\n             */\n            preventDefault: function() {\n                if(this.srcEvent.preventManipulation) {\n                    this.srcEvent.preventManipulation();\n                }\n\n                if(this.srcEvent.preventDefault) {\n                    this.srcEvent.preventDefault();\n                }\n            },\n\n            /**\n             * stop bubbling the event up to its parents\n             */\n            stopPropagation: function() {\n                this.srcEvent.stopPropagation();\n            },\n\n            /**\n             * immediately stop gesture detection\n             * might be useful after a swipe was detected\n             * @return {*}\n             */\n            stopDetect: function() {\n                return Hammer.detection.stopDetect();\n            }\n        };\n    }\n};\n\nHammer.PointerEvent = {\n    /**\n     * holds all pointers\n     * @type {Object}\n     */\n    pointers: {},\n\n    /**\n     * get a list of pointers\n     * @returns {Array}     touchlist\n     */\n    getTouchList: function() {\n        var self = this;\n        var touchlist = [];\n\n        // we can use forEach since pointerEvents only is in IE10\n        Object.keys(self.pointers).sort().forEach(function(id) {\n            touchlist.push(self.pointers[id]);\n        });\n        return touchlist;\n    },\n\n    /**\n     * update the position of a pointer\n     * @param   {String}   type             Hammer.EVENT_END\n     * @param   {Object}   pointerEvent\n     */\n    updatePointer: function(type, pointerEvent) {\n        if(type == Hammer.EVENT_END) {\n            this.pointers = {};\n        }\n        else {\n            pointerEvent.identifier = pointerEvent.pointerId;\n            this.pointers[pointerEvent.pointerId] = pointerEvent;\n        }\n\n        return Object.keys(this.pointers).length;\n    },\n\n    /**\n     * check if ev matches pointertype\n     * @param   {String}        pointerType     Hammer.POINTER_MOUSE\n     * @param   {PointerEvent}  ev\n     */\n    matchType: function(pointerType, ev) {\n        if(!ev.pointerType) {\n            return false;\n        }\n\n        var types = {};\n        types[Hammer.POINTER_MOUSE] = (ev.pointerType == ev.MSPOINTER_TYPE_MOUSE || ev.pointerType == Hammer.POINTER_MOUSE);\n        types[Hammer.POINTER_TOUCH] = (ev.pointerType == ev.MSPOINTER_TYPE_TOUCH || ev.pointerType == Hammer.POINTER_TOUCH);\n        types[Hammer.POINTER_PEN] = (ev.pointerType == ev.MSPOINTER_TYPE_PEN || ev.pointerType == Hammer.POINTER_PEN);\n        return types[pointerType];\n    },\n\n\n    /**\n     * get events\n     */\n    getEvents: function() {\n        return [\n            'pointerdown MSPointerDown',\n            'pointermove MSPointerMove',\n            'pointerup pointercancel MSPointerUp MSPointerCancel'\n        ];\n    },\n\n    /**\n     * reset the list\n     */\n    reset: function() {\n        this.pointers = {};\n    }\n};\n\n\nHammer.utils = {\n    /**\n     * extend method,\n     * also used for cloning when dest is an empty object\n     * @param   {Object}    dest\n     * @param   {Object}    src\n\t * @parm\t{Boolean}\tmerge\t\tdo a merge\n     * @returns {Object}    dest\n     */\n    extend: function extend(dest, src, merge) {\n        for (var key in src) {\n\t\t\tif(dest[key] !== undefined && merge) {\n\t\t\t\tcontinue;\n\t\t\t}\n            dest[key] = src[key];\n        }\n        return dest;\n    },\n\n\n    /**\n     * find if a node is in the given parent\n     * used for event delegation tricks\n     * @param   {HTMLElement}   node\n     * @param   {HTMLElement}   parent\n     * @returns {boolean}       has_parent\n     */\n    hasParent: function(node, parent) {\n        while(node){\n            if(node == parent) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    },\n\n\n    /**\n     * get the center of all the touches\n     * @param   {Array}     touches\n     * @returns {Object}    center\n     */\n    getCenter: function getCenter(touches) {\n        var valuesX = [], valuesY = [];\n\n        for(var t= 0,len=touches.length; t<len; t++) {\n            valuesX.push(touches[t].pageX);\n            valuesY.push(touches[t].pageY);\n        }\n\n        return {\n            pageX: ((Math.min.apply(Math, valuesX) + Math.max.apply(Math, valuesX)) / 2),\n            pageY: ((Math.min.apply(Math, valuesY) + Math.max.apply(Math, valuesY)) / 2)\n        };\n    },\n\n\n    /**\n     * calculate the velocity between two points\n     * @param   {Number}    delta_time\n     * @param   {Number}    delta_x\n     * @param   {Number}    delta_y\n     * @returns {Object}    velocity\n     */\n    getVelocity: function getVelocity(delta_time, delta_x, delta_y) {\n        return {\n            x: Math.abs(delta_x / delta_time) || 0,\n            y: Math.abs(delta_y / delta_time) || 0\n        };\n    },\n\n\n    /**\n     * calculate the angle between two coordinates\n     * @param   {Touch}     touch1\n     * @param   {Touch}     touch2\n     * @returns {Number}    angle\n     */\n    getAngle: function getAngle(touch1, touch2) {\n        var y = touch2.pageY - touch1.pageY,\n            x = touch2.pageX - touch1.pageX;\n        return Math.atan2(y, x) * 180 / Math.PI;\n    },\n\n\n    /**\n     * angle to direction define\n     * @param   {Touch}     touch1\n     * @param   {Touch}     touch2\n     * @returns {String}    direction constant, like Hammer.DIRECTION_LEFT\n     */\n    getDirection: function getDirection(touch1, touch2) {\n        var x = Math.abs(touch1.pageX - touch2.pageX),\n            y = Math.abs(touch1.pageY - touch2.pageY);\n\n        if(x >= y) {\n            return touch1.pageX - touch2.pageX > 0 ? Hammer.DIRECTION_LEFT : Hammer.DIRECTION_RIGHT;\n        }\n        else {\n            return touch1.pageY - touch2.pageY > 0 ? Hammer.DIRECTION_UP : Hammer.DIRECTION_DOWN;\n        }\n    },\n\n\n    /**\n     * calculate the distance between two touches\n     * @param   {Touch}     touch1\n     * @param   {Touch}     touch2\n     * @returns {Number}    distance\n     */\n    getDistance: function getDistance(touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX,\n            y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x*x) + (y*y));\n    },\n\n\n    /**\n     * calculate the scale factor between two touchLists (fingers)\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n     * @param   {Array}     start\n     * @param   {Array}     end\n     * @returns {Number}    scale\n     */\n    getScale: function getScale(start, end) {\n        // need two fingers...\n        if(start.length >= 2 && end.length >= 2) {\n            return this.getDistance(end[0], end[1]) /\n                this.getDistance(start[0], start[1]);\n        }\n        return 1;\n    },\n\n\n    /**\n     * calculate the rotation degrees between two touchLists (fingers)\n     * @param   {Array}     start\n     * @param   {Array}     end\n     * @returns {Number}    rotation\n     */\n    getRotation: function getRotation(start, end) {\n        // need two fingers\n        if(start.length >= 2 && end.length >= 2) {\n            return this.getAngle(end[1], end[0]) -\n                this.getAngle(start[1], start[0]);\n        }\n        return 0;\n    },\n\n\n    /**\n     * boolean if the direction is vertical\n     * @param    {String}    direction\n     * @returns  {Boolean}   is_vertical\n     */\n    isVertical: function isVertical(direction) {\n        return (direction == Hammer.DIRECTION_UP || direction == Hammer.DIRECTION_DOWN);\n    },\n\n\n    /**\n     * stop browser default behavior with css props\n     * @param   {HtmlElement}   element\n     * @param   {Object}        css_props\n     */\n    stopDefaultBrowserBehavior: function stopDefaultBrowserBehavior(element, css_props) {\n        var prop,\n            vendors = ['webkit','khtml','moz','ms','o',''];\n\n        if(!css_props || !element.style) {\n            return;\n        }\n\n        // with css properties for modern browsers\n        for(var i = 0; i < vendors.length; i++) {\n            for(var p in css_props) {\n                if(css_props.hasOwnProperty(p)) {\n                    prop = p;\n\n                    // vender prefix at the property\n                    if(vendors[i]) {\n                        prop = vendors[i] + prop.substring(0, 1).toUpperCase() + prop.substring(1);\n                    }\n\n                    // set the style\n                    element.style[prop] = css_props[p];\n                }\n            }\n        }\n\n        // also the disable onselectstart\n        if(css_props.userSelect == 'none') {\n            element.onselectstart = function() {\n                return false;\n            };\n        }\n    }\n};\n\nHammer.detection = {\n    // contains all registred Hammer.gestures in the correct order\n    gestures: [],\n\n    // data of the current Hammer.gesture detection session\n    current: null,\n\n    // the previous Hammer.gesture session data\n    // is a full clone of the previous gesture.current object\n    previous: null,\n\n    // when this becomes true, no gestures are fired\n    stopped: false,\n\n\n    /**\n     * start Hammer.gesture detection\n     * @param   {Hammer.Instance}   inst\n     * @param   {Object}            eventData\n     */\n    startDetect: function startDetect(inst, eventData) {\n        // already busy with a Hammer.gesture detection on an element\n        if(this.current) {\n            return;\n        }\n\n        this.stopped = false;\n\n        this.current = {\n            inst        : inst, // reference to HammerInstance we're working for\n            startEvent  : Hammer.utils.extend({}, eventData), // start eventData for distances, timing etc\n            lastEvent   : false, // last eventData\n            name        : '' // current gesture we're in/detected, can be 'tap', 'hold' etc\n        };\n\n        this.detect(eventData);\n    },\n\n\n    /**\n     * Hammer.gesture detection\n     * @param   {Object}    eventData\n     * @param   {Object}    eventData\n     */\n    detect: function detect(eventData) {\n        if(!this.current || this.stopped) {\n            return;\n        }\n\n        // extend event data with calculations about scale, distance etc\n        eventData = this.extendEventData(eventData);\n\n        // instance options\n        var inst_options = this.current.inst.options;\n\n        // call Hammer.gesture handlers\n        for(var g=0,len=this.gestures.length; g<len; g++) {\n            var gesture = this.gestures[g];\n\n            // only when the instance options have enabled this gesture\n            if(!this.stopped && inst_options[gesture.name] !== false) {\n                // if a handler returns false, we stop with the detection\n                if(gesture.handler.call(gesture, eventData, this.current.inst) === false) {\n                    this.stopDetect();\n                    break;\n                }\n            }\n        }\n\n        // store as previous event event\n        if(this.current) {\n            this.current.lastEvent = eventData;\n        }\n\n        // endevent, but not the last touch, so dont stop\n        if(eventData.eventType == Hammer.EVENT_END && !eventData.touches.length-1) {\n            this.stopDetect();\n        }\n\n        return eventData;\n    },\n\n\n    /**\n     * clear the Hammer.gesture vars\n     * this is called on endDetect, but can also be used when a final Hammer.gesture has been detected\n     * to stop other Hammer.gestures from being fired\n     */\n    stopDetect: function stopDetect() {\n        // clone current data to the store as the previous gesture\n        // used for the double tap gesture, since this is an other gesture detect session\n        this.previous = Hammer.utils.extend({}, this.current);\n\n        // reset the current\n        this.current = null;\n\n        // stopped!\n        this.stopped = true;\n    },\n\n\n    /**\n     * extend eventData for Hammer.gestures\n     * @param   {Object}   ev\n     * @returns {Object}   ev\n     */\n    extendEventData: function extendEventData(ev) {\n        var startEv = this.current.startEvent;\n\n        // if the touches change, set the new touches over the startEvent touches\n        // this because touchevents don't have all the touches on touchstart, or the\n        // user must place his fingers at the EXACT same time on the screen, which is not realistic\n        // but, sometimes it happens that both fingers are touching at the EXACT same time\n        if(startEv && (ev.touches.length != startEv.touches.length || ev.touches === startEv.touches)) {\n            // extend 1 level deep to get the touchlist with the touch objects\n            startEv.touches = [];\n            for(var i=0,len=ev.touches.length; i<len; i++) {\n                startEv.touches.push(Hammer.utils.extend({}, ev.touches[i]));\n            }\n        }\n\n        var delta_time = ev.timeStamp - startEv.timeStamp,\n            delta_x = ev.center.pageX - startEv.center.pageX,\n            delta_y = ev.center.pageY - startEv.center.pageY,\n            velocity = Hammer.utils.getVelocity(delta_time, delta_x, delta_y);\n\n        Hammer.utils.extend(ev, {\n            deltaTime   : delta_time,\n\n            deltaX      : delta_x,\n            deltaY      : delta_y,\n\n            velocityX   : velocity.x,\n            velocityY   : velocity.y,\n\n            distance    : Hammer.utils.getDistance(startEv.center, ev.center),\n            angle       : Hammer.utils.getAngle(startEv.center, ev.center),\n            direction   : Hammer.utils.getDirection(startEv.center, ev.center),\n\n            scale       : Hammer.utils.getScale(startEv.touches, ev.touches),\n            rotation    : Hammer.utils.getRotation(startEv.touches, ev.touches),\n\n            startEvent  : startEv\n        });\n\n        return ev;\n    },\n\n\n    /**\n     * register new gesture\n     * @param   {Object}    gesture object, see gestures.js for documentation\n     * @returns {Array}     gestures\n     */\n    register: function register(gesture) {\n        // add an enable gesture options if there is no given\n        var options = gesture.defaults || {};\n        if(options[gesture.name] === undefined) {\n            options[gesture.name] = true;\n        }\n\n        // extend Hammer default options with the Hammer.gesture options\n        Hammer.utils.extend(Hammer.defaults, options, true);\n\n        // set its index\n        gesture.index = gesture.index || 1000;\n\n        // add Hammer.gesture to the list\n        this.gestures.push(gesture);\n\n        // sort the list by index\n        this.gestures.sort(function(a, b) {\n            if (a.index < b.index) {\n                return -1;\n            }\n            if (a.index > b.index) {\n                return 1;\n            }\n            return 0;\n        });\n\n        return this.gestures;\n    }\n};\n\n\nHammer.gestures = Hammer.gestures || {};\n\n/**\n * Custom gestures\n * ==============================\n *\n * Gesture object\n * --------------------\n * The object structure of a gesture:\n *\n * { name: 'mygesture',\n *   index: 1337,\n *   defaults: {\n *     mygesture_option: true\n *   }\n *   handler: function(type, ev, inst) {\n *     // trigger gesture event\n *     inst.trigger(this.name, ev);\n *   }\n * }\n\n * @param   {String}    name\n * this should be the name of the gesture, lowercase\n * it is also being used to disable/enable the gesture per instance config.\n *\n * @param   {Number}    [index=1000]\n * the index of the gesture, where it is going to be in the stack of gestures detection\n * like when you build an gesture that depends on the drag gesture, it is a good\n * idea to place it after the index of the drag gesture.\n *\n * @param   {Object}    [defaults={}]\n * the default settings of the gesture. these are added to the instance settings,\n * and can be overruled per instance. you can also add the name of the gesture,\n * but this is also added by default (and set to true).\n *\n * @param   {Function}  handler\n * this handles the gesture detection of your custom gesture and receives the\n * following arguments:\n *\n *      @param  {Object}    eventData\n *      event data containing the following properties:\n *          timeStamp   {Number}        time the event occurred\n *          target      {HTMLElement}   target element\n *          touches     {Array}         touches (fingers, pointers, mouse) on the screen\n *          pointerType {String}        kind of pointer that was used. matches Hammer.POINTER_MOUSE|TOUCH\n *          center      {Object}        center position of the touches. contains pageX and pageY\n *          deltaTime   {Number}        the total time of the touches in the screen\n *          deltaX      {Number}        the delta on x axis we haved moved\n *          deltaY      {Number}        the delta on y axis we haved moved\n *          velocityX   {Number}        the velocity on the x\n *          velocityY   {Number}        the velocity on y\n *          angle       {Number}        the angle we are moving\n *          direction   {String}        the direction we are moving. matches Hammer.DIRECTION_UP|DOWN|LEFT|RIGHT\n *          distance    {Number}        the distance we haved moved\n *          scale       {Number}        scaling of the touches, needs 2 touches\n *          rotation    {Number}        rotation of the touches, needs 2 touches *\n *          eventType   {String}        matches Hammer.EVENT_START|MOVE|END\n *          srcEvent    {Object}        the source event, like TouchStart or MouseDown *\n *          startEvent  {Object}        contains the same properties as above,\n *                                      but from the first touch. this is used to calculate\n *                                      distances, deltaTime, scaling etc\n *\n *      @param  {Hammer.Instance}    inst\n *      the instance we are doing the detection for. you can get the options from\n *      the inst.options object and trigger the gesture event by calling inst.trigger\n *\n *\n * Handle gestures\n * --------------------\n * inside the handler you can get/set Hammer.detection.current. This is the current\n * detection session. It has the following properties\n *      @param  {String}    name\n *      contains the name of the gesture we have detected. it has not a real function,\n *      only to check in other gestures if something is detected.\n *      like in the drag gesture we set it to 'drag' and in the swipe gesture we can\n *      check if the current gesture is 'drag' by accessing Hammer.detection.current.name\n *\n *      @readonly\n *      @param  {Hammer.Instance}    inst\n *      the instance we do the detection for\n *\n *      @readonly\n *      @param  {Object}    startEvent\n *      contains the properties of the first gesture detection in this session.\n *      Used for calculations about timing, distance, etc.\n *\n *      @readonly\n *      @param  {Object}    lastEvent\n *      contains all the properties of the last gesture detect in this session.\n *\n * after the gesture detection session has been completed (user has released the screen)\n * the Hammer.detection.current object is copied into Hammer.detection.previous,\n * this is usefull for gestures like doubletap, where you need to know if the\n * previous gesture was a tap\n *\n * options that have been set by the instance can be received by calling inst.options\n *\n * You can trigger a gesture event by calling inst.trigger(\"mygesture\", event).\n * The first param is the name of your gesture, the second the event argument\n *\n *\n * Register gestures\n * --------------------\n * When an gesture is added to the Hammer.gestures object, it is auto registered\n * at the setup of the first Hammer instance. You can also call Hammer.detection.register\n * manually and pass your gesture object as a param\n *\n */\n\n/**\n * Hold\n * Touch stays at the same place for x time\n * @events  hold\n */\nHammer.gestures.Hold = {\n    name: 'hold',\n    index: 10,\n    defaults: {\n        hold_timeout\t: 500,\n        hold_threshold\t: 1\n    },\n    timer: null,\n    handler: function holdGesture(ev, inst) {\n        switch(ev.eventType) {\n            case Hammer.EVENT_START:\n                // clear any running timers\n                clearTimeout(this.timer);\n\n                // set the gesture so we can check in the timeout if it still is\n                Hammer.detection.current.name = this.name;\n\n                // set timer and if after the timeout it still is hold,\n                // we trigger the hold event\n                this.timer = setTimeout(function() {\n                    if(Hammer.detection.current.name == 'hold') {\n                        inst.trigger('hold', ev);\n                    }\n                }, inst.options.hold_timeout);\n                break;\n\n            // when you move or end we clear the timer\n            case Hammer.EVENT_MOVE:\n                if(ev.distance > inst.options.hold_threshold) {\n                    clearTimeout(this.timer);\n                }\n                break;\n\n            case Hammer.EVENT_END:\n                clearTimeout(this.timer);\n                break;\n        }\n    }\n};\n\n\n/**\n * Tap/DoubleTap\n * Quick touch at a place or double at the same place\n * @events  tap, doubletap\n */\nHammer.gestures.Tap = {\n    name: 'tap',\n    index: 100,\n    defaults: {\n        tap_max_touchtime\t: 250,\n        tap_max_distance\t: 10,\n\t\ttap_always\t\t\t: true,\n        doubletap_distance\t: 20,\n        doubletap_interval\t: 300\n    },\n    handler: function tapGesture(ev, inst) {\n        if(ev.eventType == Hammer.EVENT_END) {\n            // previous gesture, for the double tap since these are two different gesture detections\n            var prev = Hammer.detection.previous,\n\t\t\t\tdid_doubletap = false;\n\n            // when the touchtime is higher then the max touch time\n            // or when the moving distance is too much\n            if(ev.deltaTime > inst.options.tap_max_touchtime ||\n                ev.distance > inst.options.tap_max_distance) {\n                return;\n            }\n\n            // check if double tap\n            if(prev && prev.name == 'tap' &&\n                (ev.timeStamp - prev.lastEvent.timeStamp) < inst.options.doubletap_interval &&\n                ev.distance < inst.options.doubletap_distance) {\n\t\t\t\tinst.trigger('doubletap', ev);\n\t\t\t\tdid_doubletap = true;\n            }\n\n\t\t\t// do a single tap\n\t\t\tif(!did_doubletap || inst.options.tap_always) {\n\t\t\t\tHammer.detection.current.name = 'tap';\n\t\t\t\tinst.trigger(Hammer.detection.current.name, ev);\n\t\t\t}\n        }\n    }\n};\n\n\n/**\n * Swipe\n * triggers swipe events when the end velocity is above the threshold\n * @events  swipe, swipeleft, swiperight, swipeup, swipedown\n */\nHammer.gestures.Swipe = {\n    name: 'swipe',\n    index: 40,\n    defaults: {\n        // set 0 for unlimited, but this can conflict with transform\n        swipe_max_touches  : 1,\n        swipe_velocity     : 0.7\n    },\n    handler: function swipeGesture(ev, inst) {\n        if(ev.eventType == Hammer.EVENT_END) {\n            // max touches\n            if(inst.options.swipe_max_touches > 0 &&\n                ev.touches.length > inst.options.swipe_max_touches) {\n                return;\n            }\n\n            // when the distance we moved is too small we skip this gesture\n            // or we can be already in dragging\n            if(ev.velocityX > inst.options.swipe_velocity ||\n                ev.velocityY > inst.options.swipe_velocity) {\n                // trigger swipe events\n                inst.trigger(this.name, ev);\n                inst.trigger(this.name + ev.direction, ev);\n            }\n        }\n    }\n};\n\n\n/**\n * Drag\n * Move with x fingers (default 1) around on the page. Blocking the scrolling when\n * moving left and right is a good practice. When all the drag events are blocking\n * you disable scrolling on that area.\n * @events  drag, drapleft, dragright, dragup, dragdown\n */\nHammer.gestures.Drag = {\n    name: 'drag',\n    index: 50,\n    defaults: {\n        drag_min_distance : 10,\n        // set 0 for unlimited, but this can conflict with transform\n        drag_max_touches  : 1,\n        // prevent default browser behavior when dragging occurs\n        // be careful with it, it makes the element a blocking element\n        // when you are using the drag gesture, it is a good practice to set this true\n        drag_block_horizontal   : false,\n        drag_block_vertical     : false,\n        // drag_lock_to_axis keeps the drag gesture on the axis that it started on,\n        // It disallows vertical directions if the initial direction was horizontal, and vice versa.\n        drag_lock_to_axis       : false,\n        // drag lock only kicks in when distance > drag_lock_min_distance\n        // This way, locking occurs only when the distance has become large enough to reliably determine the direction\n        drag_lock_min_distance : 25\n    },\n    triggered: false,\n    handler: function dragGesture(ev, inst) {\n        // current gesture isnt drag, but dragged is true\n        // this means an other gesture is busy. now call dragend\n        if(Hammer.detection.current.name != this.name && this.triggered) {\n            inst.trigger(this.name +'end', ev);\n            this.triggered = false;\n            return;\n        }\n\n        // max touches\n        if(inst.options.drag_max_touches > 0 &&\n            ev.touches.length > inst.options.drag_max_touches) {\n            return;\n        }\n\n        switch(ev.eventType) {\n            case Hammer.EVENT_START:\n                this.triggered = false;\n                break;\n\n            case Hammer.EVENT_MOVE:\n                // when the distance we moved is too small we skip this gesture\n                // or we can be already in dragging\n                if(ev.distance < inst.options.drag_min_distance &&\n                    Hammer.detection.current.name != this.name) {\n                    return;\n                }\n\n                // we are dragging!\n                Hammer.detection.current.name = this.name;\n\n                // lock drag to axis?\n                if(Hammer.detection.current.lastEvent.drag_locked_to_axis || (inst.options.drag_lock_to_axis && inst.options.drag_lock_min_distance<=ev.distance)) {\n                    ev.drag_locked_to_axis = true;\n                }\n                var last_direction = Hammer.detection.current.lastEvent.direction;\n                if(ev.drag_locked_to_axis && last_direction !== ev.direction) {\n                    // keep direction on the axis that the drag gesture started on\n                    if(Hammer.utils.isVertical(last_direction)) {\n                        ev.direction = (ev.deltaY < 0) ? Hammer.DIRECTION_UP : Hammer.DIRECTION_DOWN;\n                    }\n                    else {\n                        ev.direction = (ev.deltaX < 0) ? Hammer.DIRECTION_LEFT : Hammer.DIRECTION_RIGHT;\n                    }\n                }\n\n                // first time, trigger dragstart event\n                if(!this.triggered) {\n                    inst.trigger(this.name +'start', ev);\n                    this.triggered = true;\n                }\n\n                // trigger normal event\n                inst.trigger(this.name, ev);\n\n                // direction event, like dragdown\n                inst.trigger(this.name + ev.direction, ev);\n\n                // block the browser events\n                if( (inst.options.drag_block_vertical && Hammer.utils.isVertical(ev.direction)) ||\n                    (inst.options.drag_block_horizontal && !Hammer.utils.isVertical(ev.direction))) {\n                    ev.preventDefault();\n                }\n                break;\n\n            case Hammer.EVENT_END:\n                // trigger dragend\n                if(this.triggered) {\n                    inst.trigger(this.name +'end', ev);\n                }\n\n                this.triggered = false;\n                break;\n        }\n    }\n};\n\n\n/**\n * Transform\n * User want to scale or rotate with 2 fingers\n * @events  transform, pinch, pinchin, pinchout, rotate\n */\nHammer.gestures.Transform = {\n    name: 'transform',\n    index: 45,\n    defaults: {\n        // factor, no scale is 1, zoomin is to 0 and zoomout until higher then 1\n        transform_min_scale     : 0.01,\n        // rotation in degrees\n        transform_min_rotation  : 1,\n        // prevent default browser behavior when two touches are on the screen\n        // but it makes the element a blocking element\n        // when you are using the transform gesture, it is a good practice to set this true\n        transform_always_block  : false\n    },\n    triggered: false,\n    handler: function transformGesture(ev, inst) {\n        // current gesture isnt drag, but dragged is true\n        // this means an other gesture is busy. now call dragend\n        if(Hammer.detection.current.name != this.name && this.triggered) {\n            inst.trigger(this.name +'end', ev);\n            this.triggered = false;\n            return;\n        }\n\n        // atleast multitouch\n        if(ev.touches.length < 2) {\n            return;\n        }\n\n        // prevent default when two fingers are on the screen\n        if(inst.options.transform_always_block) {\n            ev.preventDefault();\n        }\n\n        switch(ev.eventType) {\n            case Hammer.EVENT_START:\n                this.triggered = false;\n                break;\n\n            case Hammer.EVENT_MOVE:\n                var scale_threshold = Math.abs(1-ev.scale);\n                var rotation_threshold = Math.abs(ev.rotation);\n\n                // when the distance we moved is too small we skip this gesture\n                // or we can be already in dragging\n                if(scale_threshold < inst.options.transform_min_scale &&\n                    rotation_threshold < inst.options.transform_min_rotation) {\n                    return;\n                }\n\n                // we are transforming!\n                Hammer.detection.current.name = this.name;\n\n                // first time, trigger dragstart event\n                if(!this.triggered) {\n                    inst.trigger(this.name +'start', ev);\n                    this.triggered = true;\n                }\n\n                inst.trigger(this.name, ev); // basic transform event\n\n                // trigger rotate event\n                if(rotation_threshold > inst.options.transform_min_rotation) {\n                    inst.trigger('rotate', ev);\n                }\n\n                // trigger pinch event\n                if(scale_threshold > inst.options.transform_min_scale) {\n                    inst.trigger('pinch', ev);\n                    inst.trigger('pinch'+ ((ev.scale < 1) ? 'in' : 'out'), ev);\n                }\n                break;\n\n            case Hammer.EVENT_END:\n                // trigger dragend\n                if(this.triggered) {\n                    inst.trigger(this.name +'end', ev);\n                }\n\n                this.triggered = false;\n                break;\n        }\n    }\n};\n\n\n/**\n * Touch\n * Called as first, tells the user has touched the screen\n * @events  touch\n */\nHammer.gestures.Touch = {\n    name: 'touch',\n    index: -Infinity,\n    defaults: {\n        // call preventDefault at touchstart, and makes the element blocking by\n        // disabling the scrolling of the page, but it improves gestures like\n        // transforming and dragging.\n        // be careful with using this, it can be very annoying for users to be stuck\n        // on the page\n        prevent_default: false,\n\n        // disable mouse events, so only touch (or pen!) input triggers events\n        prevent_mouseevents: false\n    },\n    handler: function touchGesture(ev, inst) {\n        if(inst.options.prevent_mouseevents && ev.pointerType == Hammer.POINTER_MOUSE) {\n            ev.stopDetect();\n            return;\n        }\n\n        if(inst.options.prevent_default) {\n            ev.preventDefault();\n        }\n\n        if(ev.eventType ==  Hammer.EVENT_START) {\n            inst.trigger(this.name, ev);\n        }\n    }\n};\n\n\n/**\n * Release\n * Called as last, tells the user has released the screen\n * @events  release\n */\nHammer.gestures.Release = {\n    name: 'release',\n    index: Infinity,\n    handler: function releaseGesture(ev, inst) {\n        if(ev.eventType ==  Hammer.EVENT_END) {\n            inst.trigger(this.name, ev);\n        }\n    }\n};\n\n// node export\nif(typeof module === 'object' && typeof module.exports === 'object'){\n    module.exports = Hammer;\n}\n// just window export\nelse {\n    window.Hammer = Hammer;\n\n    // requireJS module definition\n    if(typeof window.define === 'function' && window.define.amd) {\n        window.define('hammer', [], function() {\n            return Hammer;\n        });\n    }\n}\n})(this);\ndefine(\"hammer\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.Hammer;\n    };\n}(this)));\n","\n(function($, undefined) {\n    'use strict';\n\n    // no jQuery or Zepto!\n    if($ === undefined) {\n        return;\n    }\n\n    /**\n     * bind dom events\n     * this overwrites addEventListener\n     * @param   {HTMLElement}   element\n     * @param   {String}        eventTypes\n     * @param   {Function}      handler\n     */\n    Hammer.event.bindDom = function(element, eventTypes, handler) {\n        $(element).on(eventTypes, function(ev) {\n            var data = ev.originalEvent || ev;\n\n            // IE pageX fix\n            if(data.pageX === undefined) {\n                data.pageX = ev.pageX;\n                data.pageY = ev.pageY;\n            }\n\n            // IE target fix\n            if(!data.target) {\n                data.target = ev.target;\n            }\n\n            // IE button fix\n            if(data.which === undefined) {\n                data.which = data.button;\n            }\n\n            // IE preventDefault\n            if(!data.preventDefault) {\n                data.preventDefault = ev.preventDefault;\n            }\n\n            // IE stopPropagation\n            if(!data.stopPropagation) {\n                data.stopPropagation = ev.stopPropagation;\n            }\n\n            handler.call(this, data);\n        });\n    };\n\n    /**\n     * the methods are called by the instance, but with the jquery plugin\n     * we use the jquery event methods instead.\n     * @this    {Hammer.Instance}\n     * @return  {jQuery}\n     */\n    Hammer.Instance.prototype.on = function(types, handler) {\n        return $(this.element).on(types, handler);\n    };\n    Hammer.Instance.prototype.off = function(types, handler) {\n        return $(this.element).off(types, handler);\n    };\n\n\n    /**\n     * trigger events\n     * this is called by the gestures to trigger an event like 'tap'\n     * @this    {Hammer.Instance}\n     * @param   {String}    gesture\n     * @param   {Object}    eventData\n     * @return  {jQuery}\n     */\n    Hammer.Instance.prototype.trigger = function(gesture, eventData){\n        var el = $(this.element);\n        if(el.has(eventData.target).length) {\n            el = $(eventData.target);\n        }\n\n        return el.trigger({\n            type: gesture,\n            gesture: eventData\n        });\n    };\n\n\n    /**\n     * jQuery plugin\n     * create instance of Hammer and watch for gestures,\n     * and when called again you can change the options\n     * @param   {Object}    [options={}]\n     * @return  {jQuery}\n     */\n    $.fn.hammer = function(options) {\n        return this.each(function() {\n            var el = $(this);\n            var inst = el.data('hammer');\n            // start new hammer instance\n            if(!inst) {\n                el.data('hammer', new Hammer(this, options || {}));\n            }\n            // change the options\n            else if(inst && options) {\n                Hammer.utils.extend(inst.options, options);\n            }\n        });\n    };\n\n})(window.jQuery || window.Zepto);\n\ndefine(\"jquery.hammer\", [\"hammer\",\"jquery\"], function(){});\n","\n'use strict';\n\n// Data module for holding initialized objects.\ndefine('appdata',[], function () {\n  return {};\n});","\n(function() {\n  define('cs!views/transformUtils',[], function() {\n    var transformUtils;\n\n    transformUtils = {\n      scale: 1,\n      transition: undefined,\n      isTransitionDisabled: false,\n      setScale: function(scale, callback, context, args) {\n        this.scale = scale;\n        this.setTransform(\"scale3D(\" + scale + \",\" + scale + \",1)\", callback, context, args);\n        return this;\n      },\n      setOpacity: function(opacity) {\n        this.$el.css(\"opacity\", opacity);\n        return this;\n      },\n      getTransition: function() {\n        if (!this.transition) {\n          this.transition = this.$el.css(\"transition\");\n        }\n        return this.transition;\n      },\n      setTransition: function(transition) {\n        if (this.transition !== transition) {\n          this.transition = transition;\n          this.$el.css(\"transition\", transition);\n        }\n        return this;\n      },\n      resetTransition: function() {\n        this.setTransition(\"\");\n        return this;\n      },\n      clearTransition: function() {\n        this.setTransition(\"\");\n        return this;\n      },\n      clearCSS: function() {\n        this.$el.removeAttr(\"style\");\n        return this;\n      },\n      reset: function() {\n        this.clearTransition();\n        this.clearTransform();\n        return this.clearCSS();\n      },\n      getTransform: function() {\n        return this.$el.css(\"-webkit-transform\");\n      },\n      setTransform: function(transform, callback, context, args) {\n        var transition;\n\n        transition = void 0;\n        if (callback === false) {\n          if (!this.isTransitionDisabled) {\n            this.isTransitionDisabled = true;\n            this.setTransition(\"none\");\n          }\n        } else {\n          if (this.isTransitionDisabled) {\n            this.resetTransition();\n            this.isTransitionDisabled = false;\n          }\n          this.doPostTransitionCallback(callback, context, args);\n        }\n        this.$el.css(\"-webkit-transform\", transform);\n        return this;\n      },\n      clearTransform: function(callback, context, args) {\n        return this.setTransform(\"\", callback, context, args);\n      },\n      addClass: function(klass, callback, context, args) {\n        this.doPostTransitionCallback(callback, context, args);\n        this.$el.addClass(klass);\n        return this;\n      },\n      removeClass: function(klass, callback, context, args) {\n        this.doPostTransitionCallback(callback, context, args);\n        this.$el.removeClass(klass);\n        return this;\n      },\n      toggleClass: function(klass, callback, context, args) {\n        this.doPostTransitionCallback(callback, context, args);\n        this.$el.toggleClass(klass);\n        return this;\n      },\n      doPostTransitionCallback: function(callback, context, args) {\n        var that;\n\n        that = this;\n        if (callback) {\n          return this.$el.bind(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\", function() {\n            that.$el.unbind(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\");\n            return callback && callback.call(context, args);\n          });\n        }\n      }\n    };\n    return transformUtils;\n  });\n\n}).call(this);\n","\n(function() {\n  var __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  define('cs!views/associate',['require','backbone','cs!views/transformUtils'],function(require) {\n    var AssociateView, Backbone, transformUtils, _ref;\n\n    Backbone = require('backbone');\n    transformUtils = require('cs!views/transformUtils');\n    AssociateView = (function(_super) {\n      __extends(AssociateView, _super);\n\n      function AssociateView() {\n        _ref = AssociateView.__super__.constructor.apply(this, arguments);\n        return _ref;\n      }\n\n      AssociateView.prototype.tagName = \"div\";\n\n      AssociateView.prototype.className = \"associate\";\n\n      AssociateView.prototype.templ = \"<h1><%= name %></h1>\\n<form action=\\\"\\\" id=\\\"amazon\\\" class=\\\"amazon-form\\\">\\n  <input type=\\\"text\\\" class=\\\"amazon-text\\\" id=\\\"amazon-text\\\" placeholder=\\\"What are you looking for?\\\">\\n  <input type=\\\"submit\\\" class=\\\"amazon-submit\\\" value=\\\"Go\\\">\\n</form>\\n<img src=\\\"<%= logoURL %>\\\" class=\\\"logo\\\">\";\n\n      AssociateView.prototype.initialize = function() {\n        return this.template = _.template(this.templ);\n      };\n\n      AssociateView.prototype.render = function() {\n        this.$el.html(this.template(this.model.toJSON()));\n        this.$el.css('backgroundImage', 'url(' + this.model.get('backgroundURL') + ')');\n        return this;\n      };\n\n      return AssociateView;\n\n    })(Backbone.View);\n    _.extend(AssociateView.prototype, transformUtils);\n    return AssociateView;\n  });\n\n}).call(this);\n","\n(function() {\n  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  define('cs!views/app',['require','backbone','jquery.hammer','appdata','cs!views/associate','cs!views/transformUtils'],function(require) {\n    var AppData, AppView, AssociateView, Backbone, transformUtils, _ref;\n\n    Backbone = require('backbone');\n    $.hammer = require('jquery.hammer');\n    AppData = require('appdata');\n    AssociateView = require('cs!views/associate');\n    transformUtils = require('cs!views/transformUtils');\n    AppView = (function(_super) {\n      __extends(AppView, _super);\n\n      function AppView() {\n        this.swipeBack = __bind(this.swipeBack, this);\n        this.swipeFwd = __bind(this.swipeFwd, this);\n        this.clearNextView = __bind(this.clearNextView, this);\n        this.clearPrevView = __bind(this.clearPrevView, this);        _ref = AppView.__super__.constructor.apply(this, arguments);\n        return _ref;\n      }\n\n      AppView.prototype.el = \"#app\";\n\n      AppView.prototype.initialize = function() {\n        this.listenTo(AppData.associates, \"add\", this.addOne);\n        this.associateViews = [];\n        this.$el.hammer().on('swipeleft', this.swipeFwd);\n        return this.$el.hammer().on('swiperight', this.swipeBack);\n      };\n\n      AppView.prototype.addOne = function(associate) {\n        var view;\n\n        view = new AssociateView({\n          model: associate\n        });\n        view.render();\n        this.associateViews.push(view);\n        if (this.isCurrentView(view)) {\n          view.addClass('current');\n        } else if (this.isNextView(view)) {\n          view.addClass('next');\n        } else if (this.isPrevView(view)) {\n          view.addClass('prev');\n        } else {\n          view.addClass('hidden');\n        }\n        return this.$el.append(view.el);\n      };\n\n      AppView.prototype.getCurrentView = function() {\n        var _ref1;\n\n        return (_ref1 = this.currentView) != null ? _ref1 : this.currentView = this.associateViews[0];\n      };\n\n      AppView.prototype.getNextView = function() {\n        var index;\n\n        index = this.associateViews.indexOf(this.getCurrentView());\n        if (index < this.associateViews.length) {\n          return this.associateViews[index + 1];\n        } else {\n          return null;\n        }\n      };\n\n      AppView.prototype.getPrevView = function() {\n        var index;\n\n        index = this.associateViews.indexOf(this.getCurrentView());\n        if (index > 0) {\n          return this.associateViews[index - 1];\n        } else {\n          return null;\n        }\n      };\n\n      AppView.prototype.isCurrentView = function(view) {\n        return view === this.getCurrentView();\n      };\n\n      AppView.prototype.isNextView = function(view) {\n        return this.associateViews.indexOf(view) === this.associateViews.indexOf(this.getCurrentView()) + 1;\n      };\n\n      AppView.prototype.clearPrevView = function() {\n        return this.getPrevView().addClass('hidden').removeClass('prev');\n      };\n\n      AppView.prototype.clearNextView = function() {\n        return this.getNextView().addClass('hidden').removeClass('next');\n      };\n\n      AppView.prototype.swipe = function(isFwd) {\n        if (isFwd == null) {\n          isFwd = true;\n        }\n        if (isFwd && this.getNextView()) {\n          this.currentView.removeClass('current').addClass('prev');\n          this.getNextView().removeClass('next').addClass('current', this.clearPrevView, this);\n          return this.currentView = this.getNextView();\n        } else if (!isFwd && this.getPrevView()) {\n          this.currentView.removeClass('current').addClass('next');\n          this.getPrevView().removeClass('prev').addClass('current', this.clearNextView, this);\n          return this.currentView = this.getPrevView();\n        }\n      };\n\n      AppView.prototype.swipeFwd = function() {\n        return this.swipe(true);\n      };\n\n      AppView.prototype.swipeBack = function() {\n        return this.swipe(false);\n      };\n\n      return AppView;\n\n    })(Backbone.View);\n    _.extend(AppView.prototype, transformUtils);\n    return AppView;\n  });\n\n}).call(this);\n","\n(function() {\n  var __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  define('cs!models/associate',['require','backbone'],function(require) {\n    var Associate, Backbone, _ref;\n\n    Backbone = require('backbone');\n    return Associate = (function(_super) {\n      __extends(Associate, _super);\n\n      function Associate() {\n        _ref = Associate.__super__.constructor.apply(this, arguments);\n        return _ref;\n      }\n\n      Associate.prototype.defaults = {\n        name: \"Associate name\",\n        backgroundURL: \"\",\n        logoURL: \"\",\n        description: \"Description goes here\"\n      };\n\n      Associate.prototype.getLogoURL = function() {\n        return this.get('logoURL');\n      };\n\n      return Associate;\n\n    })(Backbone.Model);\n  });\n\n}).call(this);\n","\n(function() {\n  var __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  define('cs!collections/associates',['require','backbone','cs!models/associate'],function(require) {\n    var Associate, Associates, Backbone, _ref;\n\n    Backbone = require('backbone');\n    Associate = require('cs!models/associate');\n    return Associates = (function(_super) {\n      __extends(Associates, _super);\n\n      function Associates() {\n        _ref = Associates.__super__.constructor.apply(this, arguments);\n        return _ref;\n      }\n\n      Associates.prototype.model = Associate;\n\n      return Associates;\n\n    })(Backbone.Collection);\n  });\n\n}).call(this);\n","\n(function() {\n  define('cs!csapp',['require','cs!views/app','cs!collections/associates','appdata'],function(require) {\n    var AppData, AppView, Associates, appView, associates, assocs, greencart;\n\n    AppView = require('cs!views/app');\n    Associates = require('cs!collections/associates');\n    AppData = require('appdata');\n    greencart = {\n      models: {},\n      collections: {},\n      views: {}\n    };\n    associates = new Associates();\n    AppData.associates = associates;\n    appView = greencart.views.app = new AppView();\n    appView.render();\n    assocs = window.assocs || [];\n    associates.add(assocs);\n    return greencart;\n  });\n\n}).call(this);\n","\n// Requiring and return the CoffeeScript App module.\n// Nested requires mean we can use a separate config.js\nrequire(['cs!csapp'], function (App) {\n  return App;\n});\n\ndefine(\"app\", function(){});\n"]}